
# -*- coding: utf-8 -*-
from linepy import *
from akad.ttypes import *
from multiprocessing import Pool, Process
from datetime import datetime
from time import sleep
from bs4 import BeautifulSoup
from humanfriendly import format_timespan, format_size, format_number, format_lengthimport time, random, sys, json, codecs, threading, glob, re, string, os, requests, subprocess, six,ast, pytz, urllib.request, urllib.parse, urllib.error, urllib.parse,antolib,subprocess,unicodedata
from gtts import gTTS                                                                                 
from googletrans import Translator
#==============================================================================#
botStart = time.time()
#==============================================================================#
#line = LINE()                                                                                        
#line = LINE("‡πÄ‡∏°‡∏•","‡∏û‡∏≤‡∏™")                                                                             
line = LINE()                                                                                         
line.log("Auth Tokenprint ("Login Succes")
: " + str(line.authToken))                                                       
#line.log("Timeline Token : " + str(line.tl.channelAccessToken))

lineMID = line.profile.mid
lineProfile = line.getProfile()
lineSettings = line.getSettings()

oepoll = OEPoll(line)
#call = Call(line)                                                                                    
readOpen = codecs.open("read.json","r","utf-8")                                                       
settingsOpen = codecs.open("temp.json","r","utf-8")
read = json.load(readOpen)
settings = json.load(settingsOpen)
Rfu = [line]
Exc = [line]
lineMID = line.getProfile().mid
bot1 = line.getProfile().mid
RfuBot=[lineMID]
Family=["u0035a5a6c5ae9d30c9a0992ecbc39395",lineMID]
admin=['u0035a5a6c5ae9d30c9a0992ecbc39395',lineMID]
RfuFamily = RfuBot + Family

protectname = []
protecturl = []
protection = []
autocancel = {}
autoinvite = []
autoleaveroom = []
targets = []
#==============================================================================#
msg_dict = {}

settings = {
    "autoAdd": False,
    "autoJoin": False,
    'autoCancel':{"on":True,"members":10},
    "autoLeave": True,
    "autoRead": False,
    "leaveRoom": False,
    "detectMention": True,
    "checkSticker": False,
    "checkContact": False,
    "checkPost": False,
    "kickMention": False,
    "potoMention": True,
    "delayMention": False,                                                                                
    "lang":"JP",
    "Wc": False,
    "Lv": False,
    "Nk": False,
    "Api": False,
    "Aip": False,
    "blacklist":{},
    "winvite": False,
    "wblacklist": False,
    "dblacklist": False,
    "gift":False,
    "likeOn":False,
    "timeline":False,
    "commentOn":True,
    "commentBlack":{},
    "wblack": False,
    "dblack": False,
    "clock": False,
    "cName":"",
    "cNames":"",
    "changeGroupPicture": [],
    "changePictureProfile":False,
    "unsendMessage": False,
    "autoJoinTicket": False,
    "welcome":"‡∏™‡∏ß‡∏±‡∏™‡∏î‡∏µ‡∏Ñ‡∏ô‡∏°‡∏≤‡πÉ‡∏´‡∏°‡πà\n\n‡∏ï‡∏±‡πâ‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ï‡πâ‡∏≠‡∏ô‡∏£‡∏±‡∏ö‡∏î‡πâ‡∏ß‡∏¢‡∏Ñ‡∏±‡∏ö\nV“ú ≈ö·∫æL‚Ç£–íŒå≈¶",
    "kick":"‡∏á‡∏¥‡πÄ‡∏ï‡∏∞‡∏ó‡∏°‡∏≠‡∏¢‡∏¢‡∏¢üòÇ\nV“ú ≈ö·∫æL‚Ç£–íŒå≈¶",
    "bye":"‡πÑ‡∏õ‡∏ã‡πà‡∏∞‡∏•‡∏∞ ‡∏•‡∏≤‡∏Å‡πà‡∏≠‡∏¢‡∏¢‡∏¢\nV“ú ≈ö·∫æL‚Ç£–íŒå≈¶",
    "Respontag":"‡πÅ‡∏ó‡∏Ñ‡∏ó‡∏≥‡πÑ‡∏°‡πÄ‡∏î‡∏∞‡∏à‡∏±‡∏ö‡πÄ‡∏¢‡πá‡∏î‡∏ï‡∏π‡∏î!",
    "eror":"‡∏Ñ‡∏∏‡∏ì‡πÉ‡∏ä‡πâ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ú‡∏¥‡∏î ‡∏™‡∏±‡πà‡∏á‡∏ö‡∏≠‡∏ó‡∏≠‡∏µ‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á!",
    "spam":{},
    "invite": {},
    "winvite": False,
    "pnharfbot": {},
    "pname": {},
    "pro_name": {},
    "message1":"‡πÅ‡∏≠‡∏î‡∏°‡∏≤‡∏£‡∏±‡∏Å ‡∏´‡∏£‡∏∑‡∏≠ ‡πÅ‡∏≠‡∏î‡∏°‡∏≤‡∏£‡∏±‡∏ôüòä",
    "message":"‡∏ö‡∏±‡∏ç‡∏ä‡∏µ‡∏ô‡∏µ‡πâ‡∏ñ‡∏π‡∏Å‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô‡πÇ‡∏î‡∏¢ V“ú ≈ö·∫æL‚Ç£–íŒå≈¶ ‡∏£‡∏∞‡∏ö‡∏ö‡πÑ‡∏î‡πâ‡∏ö‡∏•‡πá‡∏≠‡∏Ñ‡∏Ñ‡∏∏‡∏ì‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥!",
    "comment":"""≈ö·∫æL‚Ç£–íŒå≈¶ BY:
‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚îì
‚ï†       V“ú ≈ö·∫æL‚Ç£–íŒå≈¶
‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚îõ""",
    "userAgent": [
        "Mozilla/5.0 (X11; U; Linux i586; de; rv:5.0) Gecko/20100101 Firefox/5.0",
        "Mozilla/5.0 (X11; U; Linux amd64; rv:5.0) Gecko/20100101 Firefox/5.0 (Debian)",
        "Mozilla/5.0 (X11; U; Linux amd64; en-US; rv:5.0) Gecko/20110619 Firefox/5.0",
        "Mozilla/5.0 (X11; Linux) Gecko Firefox/5.0",
        "Mozilla/5.0 (X11; Linux x86_64; rv:5.0) Gecko/20100101 Firefox/5.0 FirePHP/0.5",
        "Mozilla/5.0 (X11; Linux x86_64; rv:5.0) Gecko/20100101 Firefox/5.0 Firefox/5.0",
        "Mozilla/5.0 (X11; Linux x86_64) Gecko Firefox/5.0",
        "Mozilla/5.0 (X11; Linux ppc; rv:5.0) Gecko/20100101 Firefox/5.0",
        "Mozilla/5.0 (X11; Linux AMD64) Gecko Firefox/5.0",
        "Mozilla/5.0 (X11; FreeBSD amd64; rv:5.0) Gecko/20100101 Firefox/5.0",
        "Mozilla/5.0 (Windows NT 6.2; WOW64; rv:5.0) Gecko/20100101 Firefox/5.0",
        "Mozilla/5.0 (Windows NT 6.1; Win64; x64; rv:5.0) Gecko/20110619 Firefox/5.0",
        "Mozilla/5.0 (Windows NT 6.1; Win64; x64; rv:5.0) Gecko/20100101 Firefox/5.0",
        "Mozilla/5.0 (Windows NT 6.1; rv:6.0) Gecko/20100101 Firefox/5.0",
        "Mozilla/5.0 (Windows NT 6.1.1; rv:5.0) Gecko/20100101 Firefox/5.0",
        "Mozilla/5.0 (Windows NT 5.2; WOW64; rv:5.0) Gecko/20100101 Firefox/5.0",
        "Mozilla/5.0 (Windows NT 5.1; U; rv:5.0) Gecko/20100101 Firefox/5.0",
        "Mozilla/5.0 (Windows NT 5.1; rv:2.0.1) Gecko/20100101 Firefox/5.0",
        "Mozilla/5.0 (Windows NT 5.0; WOW64; rv:5.0) Gecko/20100101 Firefox/5.0",
        "Mozilla/5.0 (Windows NT 5.0; rv:5.0) Gecko/20100101 Firefox/5.0"
],
    "mimic": {
        "copy": False,
        "status": False,
        "target": {}
    }
}

RfuProtect = {
    "protect": False,
    "cancelprotect": False,
    "inviteprotect": False,
    "linkprotect": False,
    "Protectguest": False,
    "Protectjoin": False,
    "autoAdd": True,
}

RfuProtect = {
    "protect": False,
    "cancelprotect": False,
    "inviteprotect": False,
    "linkprotect": False,
    "Protectguest": False,
    "Protectjoin": False,
    "autoAdd": True,
}

Setmain = {
    "foto": {},
}

read = {
    "readPoint": {},
    "readMember": {},
    "readTime": {},
    "setTime":{},
    "ROM": {}
}

myProfile = {
        "displayName": "",
        "statusMessage": "",
        "pictureStatus": ""
}

mimic = {
    "copy":False,
    "copy2":False,
    "status":False,
    "target":{}
    }

RfuCctv={
    "cyduk":{},
    "point":{},
    "sidermem":{}
}

rfuSet = {
    'setTime':{},
    'ricoinvite':{},
    'winvite':{},
    }

user1 = lineMID
user2 = ""

setTime = {}
setTime = rfuSet['setTime']

contact = line.getProfile()
backup = line.getProfile()
backup.dispalyName = contact.displayName
backup.statusMessage = contact.statusMessage
backup.pictureStatus = contact.pictureStatus

mulai = time.time()
dangerMessage = ["cleanse","group cleansed.","mulai",".winebot",".kickall","mayhem","kick on","Kick","!kickall","nuke","‡∏ö‡∏¥‡∏ô","Kick","‡∏Å‡∏£‡∏∞‡πÄ‡∏î‡πá‡∏ô","‡∏´‡∏ß‡∏î","‡πÄ‡∏ã‡∏•‡∏Å‡∏≤‡∏Å‡∏à‡∏±‡∏á","‡πÄ‡∏ï‡∏∞",".","‡∏õ‡∏•‡∏¥‡∏ß"]
fukgerMessage = ["‡∏Ñ‡∏ß‡∏¢","‡∏´‡∏µ","‡πÅ‡∏ï‡∏î","‡πÄ‡∏¢‡πá‡∏î‡πÅ‡∏°‡πà","‡πÄ‡∏¢‡πá‡∏î‡πÄ‡∏Ç‡πâ","‡∏Ñ.‡∏ß‡∏¢","‡∏™‡∏±‡∏™","‡πÄ‡∏´‡∏µ‡πâ‡∏¢","‡πÑ‡∏≠‡πâ‡πÄ‡∏´‡∏µ‡πâ‡∏¢","‡∏û‡πà‡∏≠‡∏°‡∏∂‡∏á‡∏ï‡∏≤‡∏¢","‡πÑ‡∏≠‡πâ‡πÄ‡∏•‡∏ß","‡∏£‡∏∞‡∏¢‡∏≥","‡∏ä‡∏≤‡∏ï‡∏¥‡∏´‡∏°‡∏≤","‡∏´‡∏ô‡πâ‡∏≤‡∏´‡∏µ","‡πÄ‡∏ã‡∏•‡∏Å‡∏≤‡∏Å","‡∏û‡πà‡∏≠‡∏á‡∏ï‡∏≤‡∏¢","‡∏™‡πâ‡∏ô‡∏ï‡∏µ‡∏ô","‡πÅ‡∏°‡πà‡∏°‡∏∂‡∏á‡∏≠‡πà‡∏∞","‡πÅ‡∏°‡πà‡∏°‡∏∂‡∏á‡∏î‡∏¥","‡∏û‡πà‡∏≠‡∏°‡∏∂‡∏á‡∏î‡∏¥"]

try:
    with open("Log_data.json","r",encoding="utf_8_sig") as f:
        msg_dict = json.loads(f.read())
except:
    print("Couldn't read Log data")

myProfile["displayName"] = lineProfile.displayName
myProfile["statusMessage"] = lineProfile.statusMessage
myProfile["pictureStatus"] = lineProfile.pictureStatus
#==============================================================================#
#==============================================================================#
def Rapid1Say(mtosay):
    line.sendText(Rapid1To,mtosay)

def summon(to, nama):
    aa = ""
    bb = ""
    strt = int(14)
    akh = int(14)
    nm = nama
    for mm in nm:
      akh = akh + 2
      aa += """{"S":"""+json.dumps(str(strt))+""","E":"""+json.dumps(str(akh))+""","M":"""+json.dumps$
      strt = strt + 6
      akh = akh + 4
      bb += "\xe2\x95\xa0 @x \n"
    aa = (aa[:int(len(aa)-1)])
    msg = Message()
    msg.to = to
    msg.text = "\xe2\x95\x94\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\$
    msg.contentMetadata ={'MENTION':'{"MENTIONEES":['+aa+']}','EMTVER':'4'}
    print ("TAG ALL")
    try:
       line.sendMessage(msg)
    except Exception as error:
       print(error)

def restartBot():
    print ("RESTART SERVER")
    time.sleep(3)
    python = sys.executable
    os.execl(python, python, *sys.argv)

def logError(text):
    line.log("[ ‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô ] " + str(text))
    time_ = datetime.now()
    with open("errorLog.txt","a") as error:
        error.write("\n[%s] %s" % (str(time), text))

try:
        arrData = ""
        text = "%s " %(str(firstmessage))
        arr = []
        mention = "@x "
        slen = str(len(text))
        elen = str(len(text) + len(mention) - 1)
        arrData = {'S':slen, 'E':elen, 'M':mid}
        arr.append(arrData)
        text += mention + str(lastmessage)
        line.sendMessage(to, text, {'MENTION': str('{"MENTIONEES":' + json.dumps(arr) + '}')}, 0)
    except Exception as error:
        logError(error)
        line.sendMessage(to, "[ INFO ] Error :\n" + str(error))

def sendMessage(to, text, contentMetadata={}, contentType=0):
    mes = Message()
    mes.to, mes.from_ = to, profile.mid
    mes.text = text
    mes.contentType, mes.contentMetadata = contentType, contentMetadata
    if to not in messageReq:
        messageReq[to] = -1
    messageReq[to] += 1

def sendMessageWithMention(to, lineMID):
    try:
        aa = '{"S":"0","E":"3","M":'+json.dumps(lineMID)+'}'
        text_ = '@x '
        line.sendMessage(to, text_, contentMetadata={'MENTION':'{"MENTIONEES":['+aa+']}'}, contentTyp$
    except Exception as error:
        logError(error)

def cTime_to_datetime(unixtime):
    return datetime.fromtimestamp(int(str(unixtime)[:len(str(unixtime))-3]))
def dt_to_str(dt):
    return dt.strftime('%H:%M:%S')

def delete_log():
    ndt = datetime.now()
    for data in msg_dict:
        if (datetime.utcnow() - cTime_to_datetime(msg_dict[data]["createdTime"])) > timedelta(1):
            if "path" in msg_dict[data]:
                line.deleteFile(msg_dict[data]["path"])
            del msg_dict[data]

def sendMention(to, text="", mids=[]):
    arrData = ""
    arr = []
    mention = "@zeroxyuuki "
    if mids == []:
        raise Exception("Invalid mids")
    if "@!" in text:
        if text.count("@!") != len(mids):
            raise Exception("Invalid mids")
        texts = text.split("@!")
        textx = ""
        for mid in mids:
            textx += str(texts[mids.index(mid)])
            slen = len(textx)
            elen = len(textx) + 15
            arrData = {'S':str(slen), 'E':str(elen - 4), 'M':mid}
            arr.append(arrData)
            textx += mention
        textx += str(texts[len(mids)])
    else:
        textx = ""
        slen = len(textx)
        elen = len(textx) + 15
        arrData = {'S':str(slen), 'E':str(elen - 4), 'M':mids[0]}
        arr.append(arrData)
        textx += mention + str(text)
    line.sendMessage(to, textx, {'MENTION': str('{"MENTIONEES":' + json.dumps(arr) + '}')}, 0)

def mentionMembers(to, mid):
    try:
        arrData = ""
        textx = "‚ïî‚ïê‚ïê[Mention {} User]\n‚ï† ".format(str(len(mid)))
        arr = []
        no = 1
        for i in mid:
            mention = "@x\n"
            slen = str(len(textx))
            elen = str(len(textx) + len(mention) - 1)
            arrData = {'S':slen, 'E':elen, 'M':i}
            arr.append(arrData)
            textx += mention
            if no < len(mid):
                no += 1
                textx += "‚ï† "
            else:
                try:
                    textx += "‚ïö‚ïê‚ïê[ {} ]".format(str(line.getGroup(to).name))
                except:
                    pass
        line.sendMessage(to, textx, {'MENTION': str('{"MENTIONEES":' + json.dumps(arr) + '}')}, 0)
    except Exception as error:
        logError(error)
        line.sendMessage(to, "[ INFO ] Error :\n" + str(error))

def myhelp():
    myHelp = """‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚îì
‚ï†     V“ú ≈ö·∫æL‚Ç£–íŒå≈¶
‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚îõ
‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚îì
‚ï†‚ùã‚ñ∫Me ‚Üî‡∏Ñ‡∏≠‡∏ô‡πÅ‡∏ó‡∏Ñ
‚ï†‚ùã‚ñ∫Help1 ‚Üî‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ó‡∏±‡πà‡∏ß‡πÑ‡∏õ
‚ï†‚ùã‚ñ∫Help2 ‚Üî‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏Å‡∏•‡∏∏‡πà‡∏°
‚ï†‚ùã‚ñ∫Help3 ‚Üî‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤
‚ï†‚ùã‚ñ∫Help4 ‚Üî ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏°‡∏µ‡πÄ‡∏î‡∏µ‡∏¢
‚ï†‚ùã‚ñ∫Help5 ‚Üî ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏™‡∏¥‡∏£‡∏¥
‚ï†‚ùã‚ñ∫Help6 ‚Üî ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡πÅ‡∏õ‡∏•‡∏†‡∏≤‡∏©‡∏≤
‚ï†‚ùã‚ñ∫‡∏ö‡∏≠‡∏ó‡∏≠‡∏≠‡∏ô
‚ï†‚ùã‚ñ∫‡πÅ‡∏ó‡∏Ñ
‚ï†‚ùã‚ñ∫‡∏ó‡∏µ‡∏°‡∏ö‡∏≠‡∏ó
‚ï†‚ùã‚ñ∫Creator
‚ï†‚ùã‚ñ∫Sp
‚ï∞‚ïê‚ùãV“ú ≈ö·∫æL‚Ç£–íŒå≈¶ ¬ª"""
    return myHelp

def listgrup():
    listGrup = """‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚îì
‚ï†     ‚ùã‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏Å‡∏•‡∏∏‡πà‡∏°‚ùã
‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚îõ
‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚îì
‚ï†‚ùã‚ñ∫‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡∏•‡∏∏‡πà‡∏°
‚ï†‚ùã‚ñ∫‡∏ä‡∏∑‡πà‡∏≠‡∏Å‡∏•‡∏∏‡πà‡∏°
‚ï†‚ùã‚ñ∫‡πÑ‡∏≠‡∏î‡∏µ‡∏Å‡∏•‡∏∏‡πà‡∏°
‚ï†‚ùã‚ñ∫‡∏£‡∏π‡∏õ‡∏Å‡∏•‡∏∏‡πà‡∏°
‚ï†‚ùã‚ñ∫‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å
‚ï†‚ùã‚ñ∫‡πÄ‡∏õ‡∏¥‡∏î‡∏•‡∏¥‡πâ‡∏á
‚ï†‚ùã‚ñ∫‡∏õ‡∏¥‡∏î‡∏•‡∏¥‡πâ‡∏á
‚ï†‚ùã‚ñ∫Gurl
‚ï†‚ùã‚ñ∫‡∏•‡∏¥‡πâ‡∏á
‚ï†‚ùã‚ñ∫‡πÅ‡∏ó‡∏Ñ
‚ï†‚ùã‚ñ∫‡πÅ‡∏ó‡∏Ñ‡∏•‡πà‡∏≠‡∏á‡∏´‡∏ô
‚ï†‚ùã‚ñ∫‡πÑ‡∏≠‡∏î‡∏µ‡∏•‡πà‡∏≠‡∏á‡∏´‡∏ô
‚ï†‚ùã‚ñ∫‡∏Ñ‡∏ó‡∏•‡πà‡∏≠‡∏á‡∏´‡∏ô
‚ï†‚ùã‚ñ∫‡πÄ‡∏õ‡∏¥‡∏î‡πÅ‡∏≠‡∏ö
‚ï†‚ùã‚ñ∫‡∏õ‡∏¥‡∏î‡πÅ‡∏≠‡∏ö
‚ï†‚ùã‚ñ∫‡∏°‡∏≠‡∏á
‚ï†‚ùã‚ñ∫‡πÑ‡∏Ñ‡∏£‡∏≠‡πà‡∏≤‡∏ô
‚ï†‚ùã‚ñ∫‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å
‚ï†‚ùã‚ñ∫‡πÇ‡∏ó‡∏£
‚ï†‚ùã‚ñ∫‡πÄ‡∏ä‡∏¥‡∏ç‡∏Ñ‡∏•‡∏≠
‚ï†‚ùã‚ñ∫‡∏î‡∏∂‡∏á
‚ï†‚ùã‚ñ∫‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏£‡∏π‡∏õ‡∏Å‡∏•‡∏∏‡πà‡∏°
‚ï†‚ùã‚ñ∫‡∏õ‡∏£‡∏∞‡∏Å‡∏≤‡∏®
‚ï†‚ùã‚ñ∫Vk @
‚ï†‚ùã‚ñ∫‡∏´‡∏µ‡πÅ‡∏´‡∏Å @
‚ï†‚ùã‚ñ∫‡πÅ‡∏ö‡∏ô‡∏´‡∏°‡∏î
‚ï†‚ùã‚ñ∫‡πÅ‡∏ö‡∏ô @
‚ï†‚ùã‚ñ∫‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å @
‚ï†‚ùã‚ñ∫‡∏•‡πâ‡∏≤‡∏á‡πÅ‡∏ö‡∏ô @
‚ï†‚ùã‚ñ∫‡πÄ‡∏ï‡∏∞‡πÅ‡∏ö‡∏ô
‚ï†‚ùã‚ñ∫‡πÄ‡∏ä‡πá‡∏Ñ‡πÑ‡∏≠‡∏î‡∏µ
‚ï∞‚ïê‚ùãV“ú ≈ö·∫æL‚Ç£–íŒå≈¶ ¬ª"""
    return listGrup

def socmedia():
    socMedia = """‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚îì
‚ï†    ‚ùã‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏°‡∏µ‡πÄ‡∏î‡∏µ‡πà‡∏¢‚ùã
‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚îõ
‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚îì
‚ï†‚ùã‚ñ∫‡∏´‡∏≤‡∏£‡∏π‡∏õ
‚ï†‚ùã‚ñ∫‡∏£‡∏π‡∏õ‡∏Å‡∏≤‡∏£‡πå‡∏ï‡∏π‡∏ô
‚ï†‚ùã‚ñ∫‡∏¢‡∏π‡∏ó‡∏π‡∏õ
‚ï†‚ùã‚ñ∫‡πÄ‡∏û‡∏•‡∏á
‚ï†‚ùã‚ñ∫‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤
‚ï†‚ùã‚ñ∫‡∏´‡∏ô‡∏±‡∏á
‚ï†‚ùã‚ñ∫‡∏†‡∏≤‡∏û
‚ï†‚ùã‚ñ∫‡∏ß‡∏µ‡∏î‡∏µ‡πÇ‡∏≠
‚ï†‚ùã‚ñ∫‡πÄ‡∏ó‡∏™
‚ï†‚ùã‚ñ∫‡πÄ‡∏û‡∏•‡∏á‡∏°‡∏≤
‚ï†‚ùã‚ñ∫‡∏™‡∏õ‡∏µ‡∏î
‚ï†‚ùã‚ñ∫‡πÑ‡∏≠‡∏à‡∏µ
‚ï†‚ùã‚ñ∫‡πÄ‡∏ß‡∏•‡∏≤
‚ï†‚ùã‚ñ∫‡∏Ç‡∏≠‡∏´‡∏∑‡πà‡∏ô
‚ï∞‚ïê‚ùãV“ú ≈ö·∫æL‚Ç£–íŒå≈¶ ¬ª"""
    return socMedia

def helpset():
    helpSet = """‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚îì
‚ï†    ‚ùã‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏áSELF‚ùã
‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚îõ
‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚îì
‚ï†‚ùã‚ñ∫Me
‚ï†‚ùã‚ñ∫‡∏Ñ‡∏ó
‚ï†‚ùã‚ñ∫Mid
‚ï†‚ùã‚ñ∫‡∏£‡∏π‡∏õ
‚ï†‚ùã‚ñ∫‡∏õ‡∏Å
‚ï†‚ùã‚ñ∫‡∏ß‡∏µ‡∏î‡∏µ‡πÇ‡∏≠
‚ï†‚ùã‚ñ∫‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•
‚ï†‚ùã‚ñ∫‡∏Å‡∏•‡∏∏‡πà‡∏°‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
‚ï†‚ùã‚ñ∫‡∏ä‡∏∑‡πà‡∏≠
‚ï†‚ùã‚ñ∫‡∏ï‡∏±‡∏™
‚ï†‚ùã‚ñ∫‡∏Ñ‡∏ó @
‚ï†‚ùã‚ñ∫‡∏£‡∏π‡∏õ @
‚ï†‚ùã‚ñ∫‡∏õ‡∏Å @
‚ï†‚ùã‚ñ∫‡∏ä‡∏∑‡πà‡∏≠ @
‚ï†‚ùã‚ñ∫‡∏ï‡∏±‡∏™ @
‚ï†‚ùã‚ñ∫‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• @
‚ï†‚ùã‚ñ∫‡πÑ‡∏≠‡∏î‡∏µ
‚ï†‚ùã‚ñ∫Sp ‚Üî Speed
‚ï†‚ùã‚ñ∫‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏î‡∏¥‡∏™
‚ï†‚ùã‚ñ∫‡πÑ‡∏ß‡∏£‡∏±‡∏™
‚ï†‚ùã‚ñ∫‡∏õ‡∏¥‡∏î‡πÑ‡∏ü
‚ï†‚ùã‚ñ∫Creator
‚ï†‚ùã‚ñ∫‡∏ó‡∏µ‡∏°‡∏ö‡∏≠‡∏ó
‚ï†‚ùã‚ñ∫‡∏ú‡∏™
‚ï†‚ùã‚ñ∫‡∏ö‡∏≠‡∏ó‡∏≠‡∏≠‡∏ô
‚ï†‚ùã‚ñ∫‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏Ç‡πâ‡∏≤
‚ï†‚ùã‚ñ∫‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏≠‡∏≠‡∏Å
‚ï†‚ùã‚ñ∫‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏ï‡∏∞
‚ï†‚ùã‚ñ∫‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÅ‡∏≠‡∏î
‚ï†‚ùã‚ñ∫‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÅ‡∏≠‡∏î2
‚ï†‚ùã‚ñ∫N
‚ï†‚ùã‚ñ∫‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ô
‚ï†‚ùã‚ñ∫‡πÄ‡∏ä‡πá‡∏Ñ‡∏ö‡∏•‡πá‡∏≠‡∏Ñ
‚ï†‚ùã‚ñ∫‡πÑ‡∏≠‡∏î‡∏µ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ô
‚ï†‚ùã‚ñ∫‡∏•‡∏ö‡πÅ‡∏ä‡∏ó
‚ï†‚ùã‚ñ∫‡∏õ‡∏¥‡∏î‡∏ö‡∏≠‡∏ó
‚ï†‚ùã‚ñ∫‡∏£‡∏±‡∏ô @
‚ï†‚ùã‚ñ∫‡∏£‡∏±‡∏ô‡πÅ‡∏ä‡∏ó
‚ï†‚ùã‚ñ∫‡∏£‡∏±‡∏ô‡πÅ‡∏ä‡∏ó
‚ï†‚ùã‚ñ∫‡πÅ‡∏ö‡∏ô @ ‚Üî ‡∏õ‡∏•‡∏î @
‚ï†‚ùã‚ñ∫‡πÄ‡∏•‡∏µ‡∏¢‡∏ô‡πÅ‡∏ö‡∏ö @
‚ï†‚ùã‚ñ∫‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å @
‚ï†‚ùã‚ñ∫Nutmic on ‚Üî off
‚ï†‚ùã‚ñ∫‡πÄ‡∏ä‡∏Ñ‡πÄ‡∏•‡∏µ‡∏¢‡∏ô‡πÅ‡∏ö‡∏ö
‚ï†‚ùã‚ñ∫‡πÄ‡∏ï‡∏∞‡πÅ‡∏ö‡∏ô
‚ï†‚ùã‚ñ∫‡∏ä‡∏∑‡πà‡∏≠;
‚ï†‚ùã‚ñ∫‡∏ï‡∏±‡∏™;
‚ï†‚ùã‚ñ∫Spam on ‚Üî off
‚ï∞‚ïê‚ùãBY: V“ú ≈ö·∫æL‚Ç£–íŒå≈¶"""
    return helpSet

def helpsetting():
    helpSetting = """‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚îì
‚ï† ‚ùã¬´‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏ö‡∏≠‡∏ó¬ª‚ùã
‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚îõ
‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚îì
‚ï†‚ùã‚ñ∫‡πÄ‡∏ä‡πá‡∏Ñ
‚ï†‚ùã‚ñ∫B on ‚Üî B off
‚ï†‚ùã‚ñ∫‡πÄ‡∏õ‡∏¥‡∏î‡πÄ‡∏Ç‡πâ‡∏≤ ‚Üî ‡∏õ‡∏¥‡∏î‡πÄ‡∏Ç‡πâ‡∏≤
‚ï†‚ùã‚ñ∫‡πÅ‡∏ä‡∏ó on ‚Üî‡πÅ‡∏ä‡∏ó off
‚ï†‚ùã‚ñ∫‡∏≠‡πà‡∏≤‡∏ô on ‚Üî‡∏≠‡πà‡∏≤‡∏ô off
‚ï†‚ùã‚ñ∫‡πÄ‡∏õ‡∏¥‡∏î‡∏°‡∏∏‡∏î ‚Üî ‡∏õ‡∏¥‡∏î‡∏°‡∏∏‡∏î
‚ï†‚ùã‚ñ∫‡∏ï‡∏¥‡πâ‡∏Å on ‚Üî ‡∏ï‡∏¥‡πâ‡∏Å off
‚ï†‚ùã‚ñ∫‡πÄ‡∏õ‡∏¥‡∏î‡πÄ‡∏™‡∏∑‡∏≠‡∏Å ‚Üî ‡∏õ‡∏¥‡∏î‡πÄ‡∏™‡∏∑‡∏≠‡∏Å
‚ï†‚ùã‚ñ∫‡πÄ‡∏õ‡∏¥‡∏î‡πÅ‡∏ó‡∏Ñ ‚Üî ‡∏õ‡∏¥‡∏î‡πÅ‡∏ó‡∏Ñ
‚ï†‚ùã‚ñ∫‡πÄ‡∏õ‡∏¥‡∏î‡πÅ‡∏ó‡∏Ñ2 ‚Üî ‡∏õ‡∏¥‡∏î‡πÅ‡∏ó‡∏Ñ2
‚ï†‚ùã‚ñ∫‡πÄ‡∏õ‡∏¥‡∏î‡πÅ‡∏ó‡∏Ñ3 ‚Üî ‡∏õ‡∏¥‡∏î‡πÅ‡∏ó‡∏Ñ3
‚ï†‚ùã‚ñ∫‡πÄ‡∏ï‡∏∞‡πÅ‡∏ó‡∏Ñ ‚Üî ‡∏õ‡∏¥‡∏î‡πÄ‡∏ï‡∏∞‡πÅ‡∏ó‡∏Ñ
‚ï†‚ùã‚ñ∫‡πÄ‡∏õ‡∏¥‡∏î‡∏Ñ‡∏ó ‚Üî ‡∏õ‡∏¥‡∏î‡∏Ñ‡∏ó
‚ï†‚ùã‚ñ∫‡πÄ‡∏õ‡∏¥‡∏î‡πÅ‡∏ä‡∏£‡πå ‚Üî ‡∏õ‡∏¥‡∏î‡πÅ‡∏ä‡∏£‡πå
‚ï†‚ùã‚ñ∫‡πÄ‡∏õ‡∏¥‡∏î‡∏ï‡∏£‡∏ß‡∏à ‚Üî ‡∏õ‡∏¥‡∏î‡∏ï‡∏£‡∏ß‡∏à
‚ï†‚ùã‚ñ∫‡πÄ‡∏õ‡∏¥‡∏î‡∏û‡∏π‡∏î ‚Üî ‡∏õ‡∏¥‡∏î‡∏û‡∏π‡∏î
‚ï†‚ùã‚ñ∫‡∏ï‡∏±‡πâ‡∏á‡πÅ‡∏≠‡∏î;
‚ï†‚ùã‚ñ∫‡∏ï‡∏±‡πâ‡∏á‡πÅ‡∏ó‡∏Ñ;
‚ï†‚ùã‚ñ∫‡∏Ñ‡∏≠‡∏°‡πÄ‡∏°‡πâ‡∏ô;
‚ï†‚ùã‚ñ∫‡∏ï‡∏±‡πâ‡∏á‡∏≠‡∏≠‡∏Å;
‚ï†‚ùã‚ñ∫‡∏ï‡∏±‡πâ‡∏á‡πÄ‡∏Ç‡πâ‡∏≤;
‚ï†‚ùã‚ñ∫‡πÄ‡∏õ‡∏¥‡∏î‡∏Å‡∏±‡∏ô ‚Üî ‡∏õ‡∏¥‡∏î‡∏Å‡∏±‡∏ô
‚ï†‚ùã‚ñ∫‡∏Å‡∏±‡∏ô‡∏•‡∏¥‡πâ‡∏á ‚Üî ‡∏õ‡∏¥‡∏î‡∏Å‡∏±‡∏ô‡∏•‡∏¥‡πâ‡∏á
‚ï†‚ùã‚ñ∫‡∏Å‡∏±‡∏ô‡∏¢‡∏Å ‚Üî ‡∏õ‡∏¥‡∏î‡∏Å‡∏±‡∏ô‡∏¢‡∏Å
‚ï†‚ùã‚ñ∫‡∏Å‡∏±‡∏ô‡πÄ‡∏ä‡∏¥‡∏ç ‚Üî ‡∏õ‡∏¥‡∏î‡∏Å‡∏±‡∏ô‡πÄ‡∏ä‡∏¥‡∏ç
‚ï†‚ùã‚ñ∫‡∏Å‡∏±‡∏ô‡∏Å‡∏•‡∏∏‡πà‡∏° ‚Üî ‡∏õ‡∏¥‡∏î‡∏Å‡∏±‡∏ô‡∏Å‡∏•‡∏∏‡πà‡∏°
‚ï†‚ùã‚ñ∫‡∏Å‡∏±‡∏ô‡πÄ‡∏Ç‡πâ‡∏≤ ‚Üî ‡∏õ‡∏¥‡∏î‡∏Å‡∏±‡∏ô‡πÄ‡∏Ç‡πâ‡∏≤
‚ï†‚ùã‚ñ∫‡πÄ‡∏õ‡∏¥‡∏î‡∏´‡∏°‡∏î ‚Üî ‡∏õ‡∏¥‡∏î‡∏´‡∏°‡∏î
‚ï∞‚ïê‚ïê‚ùãBY: V“ú ≈ö·∫æL‚Ç£–íŒå≈¶ """
    return helpSetting

def helptexttospeech():
    helpTextToSpeech =   """‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚îì
‚ï†    ‚ùã¬´‡∏™‡∏±‡πà‡∏á‡∏™‡∏¥‡∏£‡∏¥‡∏û‡∏π‡∏î¬ª‚ùã
‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚îõ
‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚îì
‚ï†‚ùã‚ñ∫‡∏û‡∏π‡∏î ‡∏û‡∏¥‡∏°‡∏Ñ‡∏≥‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£
‚ï†‚ùã‚ñ∫ af : ‡πÅ‡∏≠‡∏ü‡∏£‡∏¥‡∏Å‡∏±‡∏ô
‚ï†‚ùã‚ñ∫ sq : ‡∏≠‡∏±‡∏•‡πÄ‡∏ö‡πÄ‡∏ô‡∏µ‡∏¢
‚ï†‚ùã‚ñ∫ hy : ‡∏≠‡∏≤‡πÄ‡∏°‡πÄ‡∏ô‡∏µ‡∏¢
‚ï†‚ùã‚ñ∫ bn : ‡πÄ‡∏ö‡∏ô‡∏à‡∏≤‡∏•‡∏µ
‚ï†‚ùã‚ñ∫ zh-cn : ‡∏à‡∏µ‡∏ô
‚ï†‚ùã‚ñ∫ zh-tw : ‡πÉ‡∏ï‡πâ‡∏´‡∏ß‡∏±‡∏ô
‚ï†‚ùã‚ñ∫ cs : ‡πÄ‡∏ä‡πá‡∏Å
‚ï†‚ùã‚ñ∫ nl : ‡∏î‡∏±‡∏ä
‚ï†‚ùã‚ñ∫ en : ‡∏≠‡∏±‡∏á‡∏Å‡∏§‡∏©
‚ï†‚ùã‚ñ∫ en-us : ‡∏™‡∏´‡∏£‡∏±‡∏ê
‚ï†‚ùã‚ñ∫ el : ‡∏Å‡∏£‡∏µ‡∏Å
‚ï†‚ùã‚ñ∫ id : ‡∏≠‡∏¥‡∏ô‡πÇ‡∏î‡∏ô‡∏µ‡πÄ‡∏ã‡∏µ‡∏¢
‚ï†‚ùã‚ñ∫ it : ‡∏≠‡∏¥‡∏ï‡∏≤‡∏•‡∏µ
‚ï†‚ùã‚ñ∫ ja : ‡∏ç‡∏µ‡πà‡∏õ‡∏∏‡πà‡∏ô
‚ï†‚ùã‚ñ∫ ko : ‡πÄ‡∏Å‡∏≤‡∏´‡∏•‡∏µ
‚ï†‚ùã‚ñ∫ la : ‡∏•‡∏≤‡∏ï‡∏¥‡∏ô
‚ï†‚ùã‚ñ∫ ro : ‡πÇ‡∏£‡∏°‡∏≤‡πÄ‡∏ô‡∏µ‡∏¢
‚ï†‚ùã‚ñ∫ ru : ‡∏£‡∏±‡∏™‡πÄ‡∏ã‡∏µ‡∏¢
‚ï†‚ùã‚ñ∫ sr : ‡πÄ‡∏ã‡∏≠‡πÄ‡∏ö‡∏µ‡∏¢‡∏£‡πå
‚ï†‚ùã‚ñ∫ th : ‡πÑ‡∏ó‡∏¢
‚ï†‚ùã‚ñ∫ vi : ‡πÄ‡∏ß‡∏µ‡∏¢‡∏î‡∏ô‡∏≤‡∏°
‚ï∞‚ïê‚ùãBY: V“ú ≈ö·∫æL‚Ç£–íŒå≈¶ ¬ª

„Äå‡∏ß‡∏¥‡∏ò‡∏µ‡πÉ‡∏ä‡πâ : ‡∏û‡∏π‡∏î ‡∏û‡∏µ‡πà‡∏Ñ‡∏∞‡∏´‡∏ô‡∏π‡πÄ‡∏á‡∏µ‡πà‡∏¢‡∏ô„Äç"""
    return helpTextToSpeech

def helplanguange():
    helpLanguange =    """‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚îì
‚ï† ‚ùã¬´‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡πÅ‡∏õ‡∏•‡∏†‡∏≤‡∏©‡∏≤¬ª‚ùã
‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê
‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚îì
‚ï†‚ùã‚ñ∫ af : ‡πÅ‡∏≠‡∏ü‡∏£‡∏¥‡∏Å‡∏±‡∏ô
‚ï†‚ùã‚ñ∫ sq : ‡∏≠‡∏±‡∏•‡πÄ‡∏ö‡πÄ‡∏ô‡∏µ‡∏¢
‚ï†‚ùã‚ñ∫ ar : ‡∏≠‡∏£‡∏≤‡∏ö‡∏¥‡∏Ñ
‚ï†‚ùã‚ñ∫ hy : ‡∏≠‡∏≤‡πÄ‡∏°‡πÄ‡∏ô‡∏µ‡∏¢
‚ï†‚ùã‚ñ∫ bn : ‡∏ö‡∏±‡∏á‡∏Å‡∏≤‡∏£‡∏µ‡πà
‚ï†‚ùã‚ñ∫ bs : ‡∏ö‡∏≠‡∏™‡πÄ‡∏ô‡∏µ‡∏¢
‚ï†‚ùã‚ñ∫ bg : ‡∏ö‡∏±‡∏á‡πÅ‡∏Å‡πÄ‡∏£‡∏µ‡∏¢
‚ï†‚ùã‚ñ∫ zh-cn : ‡∏à‡∏µ‡∏ô
‚ï†‚ùã‚ñ∫ zh-tw : ‡πÉ‡∏ï‡πâ‡∏´‡∏ß‡∏±‡∏ô
‚ï†‚ùã‚ñ∫ cs : ‡πÄ‡∏ä‡πá‡∏Å
‚ï†‚ùã‚ñ∫ nl : ‡∏î‡∏±‡∏ä
‚ï†‚ùã‚ñ∫ en : ‡∏≠‡∏±‡∏á‡∏Å‡∏§‡∏©
‚ï†‚ùã‚ñ∫ et : ‡πÄ‡∏≠‡∏™‡πÇ‡∏ï‡πÄ‡∏ô‡∏µ‡∏¢‡∏ô
‚ï†‚ùã‚ñ∫ el : ‡∏Å‡∏£‡∏µ‡∏Å
‚ï†‚ùã‚ñ∫ id : ‡∏≠‡∏¥‡∏ô‡πÇ‡∏î‡∏ô‡∏µ‡πÄ‡∏ã‡∏µ‡∏¢
‚ï†‚ùã‚ñ∫ ga : ‡πÑ‡∏≠‡∏£‡∏¥‡∏™
‚ï†‚ùã‚ñ∫ it : ‡∏≠‡∏¥‡∏ï‡∏≤‡∏•‡∏µ
‚ï†‚ùã‚ñ∫ ja : ‡∏ç‡∏µ‡πà‡∏õ‡∏∏‡πà‡∏ô
‚ï†‚ùã‚ñ∫ kn : ‡πÅ‡∏Ñ‡∏ô‡∏≤‡∏î‡∏≤
‚ï†‚ùã‚ñ∫ la : ‡∏•‡∏≤‡∏ï‡∏¥‡∏ô
‚ï†‚ùã‚ñ∫ lv : ‡∏•‡∏±‡∏ï‡πÄ‡∏ß‡∏µ‡∏¢
‚ï†‚ùã‚ñ∫ ms : ‡∏°‡∏≤‡πÄ‡∏•‡πÄ‡∏ã‡∏µ‡∏¢
‚ï†‚ùã‚ñ∫ mt : ‡∏°‡∏≠‡∏•‡πÄ‡∏ï‡∏™
‚ï†‚ùã‚ñ∫ mn : ‡∏°‡∏≠‡∏á‡πÇ‡∏Å‡πÄ‡∏•‡∏µ‡∏¢
‚ï†‚ùã‚ñ∫ my : ‡∏û‡∏°‡πà‡∏≤
‚ï†‚ùã‚ñ∫ fa : ‡πÄ‡∏õ‡∏≠‡∏£‡πå‡πÄ‡∏ã‡∏µ‡∏¢
‚ï†‚ùã‚ñ∫ pt : ‡πÇ‡∏õ‡∏£‡∏ï‡∏∏‡πÄ‡∏Å‡∏®
‚ï†‚ùã‚ñ∫ ro : ‡πÇ‡∏£‡∏°‡∏≤‡πÄ‡∏ô‡∏µ‡∏¢
‚ï†‚ùã‚ñ∫ ru : ‡∏£‡∏±‡∏™‡πÄ‡∏ã‡∏µ‡∏¢
‚ï†‚ùã‚ñ∫ th : ‡πÑ‡∏ó‡∏¢
‚ï†‚ùã‚ñ∫ zu : ‡∏ã‡∏π‡∏•‡∏π
‚ï∞‚ïê‚ùãBY: V“ú ≈ö·∫æL‚Ç£–íŒå≈¶ ¬ª

„Äå‡∏ß‡∏¥‡∏ò‡∏µ‡πÉ‡∏ä‡πâ : Tr-th ‡∏ï‡∏≤‡∏°‡∏î‡πâ‡∏ß‡∏¢‡∏Ñ‡∏≥‡∏ó‡∏µ‡πà‡∏à‡∏∞‡πÅ‡∏õ‡∏•„Äç"""
    return helpLanguange
#==============================================================================#
def lineBot(op):
    try:
        if op.type == 0:
            return
        if op.type == 5:
            if settings["autoAdd"] == True:
                line.blockContact(op.param1)
        if op.type == 13:
            if lineMID in op.param3:
                G = line.getGroup(op.param1)
                if settings["autoJoin"] == True:
                    if settings["autoCancel"]["on"] == True:
                        if len(G.members) <= settings["autoCancel"]["members"]:
                            line.rejectGroupInvitation(op.param1)
                        else:
                            line.acceptGroupInvitation(op.param1)
                    else:
                        line.acceptGroupInvitation(op.param1)
                elif settings["autoCancel"]["on"] == True:
                    if len(G.members) <= settings["autoCancel"]["members"]:
                        line.rejectGroupInvitation(op.param1)
            else:
                Inviter = op.param3.replace("^^",',')
                InviterX = Inviter.split(",")
                matched_list = []
                for tag in settings["blacklist"]:
                    matched_list+=[str for str in InviterX if str == tag]
                if matched_list == []:
                    pass
                else:
                    line.cancelGroupInvitation(op.param1, matched_list)
#        if op.type == 13:
#            group = line.getGroup(op.param1)
#            if settings["autoJoin"] == True:
#                line.acceptGroupInvitation(op.param1)
        if op.type == 24:
            if settings["autoLeave"] == True:
                line.leaveRoom(op.param1)

        if op.type == 25:
            msg = op.message
            if msg.contentType == 13:
                if settings["winvite"] == True:
                     if msg._from in admin:
                         _name = msg.contentMetadata["displayName"]
                         invite = msg.contentMetadata["mid"]
                         groups = line.getGroup(msg.to)
                         pending = groups.invitee
                         targets = []
                         for s in groups.members:
                             if _name in s.displayName:
                                 line.sendText(msg.to,"-> " + _name + " \n‡∏ó‡∏≥‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡∏¥‡∏ç‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à")
                                 break
                             elif invite in settings["blacklist"]:
                                 line.sendText(msg.to,"‡∏Ç‡∏≠‡∏≠‡∏†‡∏±‡∏¢, " + _name + " ‡∏ö‡∏∏‡∏Ñ‡∏Ñ‡∏ô‡∏ô‡∏µ‡πâ‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ô‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏ö‡∏±‡∏ç‡∏ä‡∏µ‡∏î‡∏≥")
                                 line.sendText(msg.to,"‡πÉ‡∏ä‡πâ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á!, \n‚û°‡∏•‡πâ‡∏≤‡∏á‡∏î‡∏≥‚û°‡∏î‡∏∂‡∏á" )
                                 break
                             else:
                                 targets.append(invite)
                         if targets == []:
                             pass
                         else:
                             for target in targets:
                                 try:
                                     line.findAndAddContactsByMid(target)
                                     line.inviteIntoGroup(msg.to,[target])
                                     line.sendText(msg.to,"‡πÄ‡∏ä‡∏¥‡∏ç‡∏Ñ‡∏ô‡∏ô‡∏µ‡πâ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à‡πÅ‡∏•‡πâ‡∏ß : \n‚û°" + _name)
                                     settings["winvite"] = False
                                     break
                                 except:
                                     try:
                                         line.findAndAddContactsByMid(invite)
                                         line.inviteIntoGroup(op.param1,[invite])
                                         settings["winvite"] = False
                                     except:
                                         line.sendText(msg.to,"üòß‡∏ï‡∏£‡∏ß‡∏à‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡∏ó‡∏£‡∏≤‡∏ö‡∏™‡∏≤‡πÄ‡∏´‡∏ï‡∏∏üò©‡∏≠‡∏≤‡∏à‡πÄ‡∏õ‡πá‡∏ô‡πÑ‡∏î‡∏ß‡πà‡∏≤‡∏ö‡∏±‡∏ç‡∏ä‡∏µ‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì‡∏ñ‡∏π‡∏Å‡πÅ‡∏ö‡∏ô‡πÄ‡∏ä‡∏¥‡∏çüò®")
                                         settings["winvite"] = False
                                         break

            if op.type == 25:
            msg = op.message
            text = msg.text
            msg_id = msg.id
            receiver = msg.to
            sender = msg._from
            if msg.toType == 0 or msg.toType == 1 or msg.toType == 2:
                if msg.toType == 0:
                    if sender != line.profile.mid:
                        to = sender
                    else:
                        to = receiver
                elif msg.toType == 1:
                    to = receiver
                elif msg.toType == 2:
                    to = receiver
            if msg.contentType == 0:
                if text is None:
                    return
#==============================================================================#
                if ".‡∏û‡∏π‡∏î " in msg.text.lower():
                    spl = re.split(".‡∏û‡∏π‡∏î ",msg.text,flags=re.IGNORECASE)
                    if spl[0] == "":
                        mts = spl[1]
                        mtsl = mts.split()
                        mtsTimeArg = len(mtsl) - 1
                        mtsTime = mtsl[mtsTimeArg]
                        del mtsl[mtsTimeArg]
                        mtosay = " ".join(mtsl)
                        global Rapid1To
                        Rapid1To = msg.to
                        RapidTime = mtsTime
                        rmtosay = []
                        for count in range(0,int(RapidTime)):
                            rmtosay.insert(count,mtosay)
                        p = Pool(20)
                        p.map(Rapid1Say,rmtosay)
                        p.close()
                if text.lower() == '‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á':
                    myHelp = myhelp()
                    line.sendMessage(to, str(myHelp))
                elif text.lower() == 'help1':
                    helpSet = helpset()
                    line.sendMessage(to, str(helpSet))
                    sendMessageWithMention(to, lineMID)
                elif text.lower() == 'help2':
                    listGrup = listgrup()
                    line.sendMessage(to, str(listGrup))
                elif text.lower() == 'help3':
                    helpSetting = helpsetting()
                    line.sendMessage(to, str(helpSetting))
                elif text.lower() == 'help4':
                    socMedia = socmedia()
                    line.sendMessage(to, str(socMedia))
                elif text.lower() == 'help5':
                    helpTextToSpeech = helptexttospeech()
                    line.sendMessage(to, str(helpTextToSpeech))
                elif text.lower() == 'help6':
                    helpLanguange = helplanguange()
                    line.sendMessage(to, str(helpLanguange))
#==============================================================================#
                elif text.lower() == 'speed':
                    start = time.time()
                    line.sendMessage(to, "≈ö·∫æL‚Ç£–íŒå≈¶ ≈öP–Ñ–Ñƒê")
                    elapsed_time = time.time() - start
                    line.sendMessage(msg.to, "[ %s ‡∏ï‡πà‡∏≠‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ ] [ " % (elapsed_time) + str(int(round((tim$
                elif text.lower() == 'sp':
                    start = time.time()
                    line.sendMessage(to, "≈ö·∫æL‚Ç£–íŒå≈¶ ≈öP–Ñ–Ñƒê")
                    elapsed_time = time.time() - start
                    line.sendMessage(msg.to, "[ %s ‡∏ï‡πà‡∏≠‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ ] [ " % (elapsed_time) + str(int(round((tim$
                elif text.lower() == '‡∏£‡∏µ‡∏ö‡∏≠‡∏ó':
                    line.sendMessage(to, "‚û†‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏£‡∏µ‡∏ö‡∏≠‡∏ó ‡∏£‡∏≠‡∏™‡∏±‡∏Å‡∏Ñ‡∏£‡∏π‡πà ‚ùã")
                    restartBot()
                  elif text.lower() == '‡∏ö‡∏≠‡∏ó‡∏≠‡∏≠‡∏ô':
                    timeNow = time.time()
                    runtime = timeNow - botStart
                    runtime = format_timespan(runtime)
                    line.sendMessage(to, "≈ö·∫æL‚Ç£–íŒå≈¶ √ì≈ÖL√ç≈á·ªÄ\n {}".format(str(runtime)))
                elif text.lower() == '‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•':
                    try:
                        arr = []
                        owner = "u0035a5a6c5ae9d30c9a0992ecbc39395"
                        creator = line.getContact(owner)
                        contact = line.getContact(lineMID)
                        grouplist = line.getGroupIdsJoined()
                        contactlist = line.getAllContactIds()
                        blockedlist = line.getBlockedContactIds()
                        ret_ = "‚ïî‚ïê‚ïê[ ‚ùã V“ú ≈ö·∫æL‚Ç£–íŒå≈¶ ‚ùã ]"
                        ret_ += "\n‚ï†‚ù• ‡∏ä‡∏∑‡πà‡∏≠ ‚ïê {}".format(contact.displayName)
                        ret_ += "\n‚ï†‚ù• ‡∏Å‡∏•‡∏∏‡πà‡∏° ‚ïê {}".format(str(len(grouplist)))
                        ret_ += "\n‚ï†‚ù• ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ô ‚ïê {}".format(str(len(contactlist)))
                        ret_ += "\n‚ï†‚ù• ‡∏ö‡∏•‡πá‡∏≠‡∏Ñ ‚ïê {}".format(str(len(blockedlist)))
                        ret_ += "\n‚ï†‚ïê‚ïê[ Status ] \n‚ïê {}".format(contact.statusMessage)
                        ret_ += "\n‚ï†‚ù• ‡∏ú‡∏π‡πâ‡∏™‡∏£‡πâ‡∏≤‡∏á ‚ïê {}".format(creator.displayName)
                        ret_ += "\n‚ïö‚ïê‚ïê[ ‚ùã V“ú ≈ö·∫æL‚Ç£–íŒå≈¶ ‚ùã]"
                        line.sendContact(to, owner)
                        line.sendMessage(to, str(ret_))
                    except Exception as e:
                        line.sendMessage(msg.to, str(e))
#========================  line.sendMessage(to, "‚ùã‡∏£‡∏µ‡∏ö‡∏≠‡∏ó‡πÄ‡∏™‡∏£‡πá‡∏à‡πÅ‡∏•‡πâ‡∏ß\n‡∏Å‡∏î‡∏•‡∏¥‡πâ‡∏á‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏•‡πá‡∏≠‡∏Ñ‡∏≠‡∏¥‡∏ô‡∏≠‡∏µ‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á\n‡πÅ‡∏•‡∏∞‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡πÉ‡∏´‡∏°‡πà‡∏î‡πâ‡∏ß‡∏¢‡∏Ñ‡∏±‡∏ö‡∏û‡∏£‡∏µ‡πâ")
                elif "Vk " in msg.text:
                        vkick0 = msg.text.replace("Vk ","")
                        vkick1 = vkick0.rstrip()
                        vkick2 = vkick1.replace("@","")
                        vkick3 = vkick2.rstrip()
                        _name = vkick3
                        gs = line.getGroup(msg.to)
                        targets = []
                        for s in gs.members:
                            if _name in s.displayName:
                                targets.append(s.mid)
                        if targets == []:
                            pass
                        else:
                            for target in targets:
                                try:
                                    line.kickoutFromGroup(msg.to,[target])
                                    line.findAndAddContactsByMid(target)
                                    line. inviteIntoGroup(msg.to,[target])
                                except:
                                    pass
                elif "‡πÇ‡∏ó‡∏£" == msg.text.lower():
                    line.inviteIntoGroupCall(msg.to,[uid.mid for uid in line.getGroup(msg.to).members if uid.mid != line.getProfile()
.mid])
                    line.sendMessage(msg.to,"‚û†‡πÄ‡∏ä‡∏¥‡∏ç‡πÄ‡∏Ç‡πâ‡∏≤‡∏£‡πà‡∏ß‡∏°‡∏Å‡∏≤‡∏£‡πÇ‡∏ó‡∏£‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à (ÔΩ°‚óï‚Äø‚óïÔΩ°) ")
                elif "‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å" == msg.text.lower():
                    if msg.toType == 2:
                        group = line.getGroup(msg.to)
                        gMembMids = [contact.mid for contact in group.invitee]
                        for _mid in gMembMids:
                            line.cancelGroupInvitation(msg.to,[_mid])
                        line.sendMessage(to,"‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å‡∏Ñ‡πâ‡∏≤‡∏á‡πÄ‡∏ä‡∏¥‡∏ç‡πÅ‡∏•‡πâ‡∏ß (ÔΩ°‚óï‚Äø‚óïÔΩ°) " )
#===========
                elif "‡∏™‡∏õ‡∏µ‡∏î" == msg.text.lower():
                    line.sendMessage(to,"„Äå‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏£‡πá‡∏ß...„Äç\n‚ñà‚ñà‚ñà‚ñí39%\n‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñí69%\n‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñí99%\n0.0000000000000000 second")
                    line.sendMessage(to,"0.0000000000000000 second")
                    line.sendMessage(to,"(ÔΩ°‚óï‚Äø‚óïÔΩ°)")
#===========     
                
