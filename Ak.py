
# -*- coding: utf-8 -*-
from linepy import *
from akad.ttypes import *
from multiprocessing import Pool, Process
from datetime import datetime
from time import sleep
from bs4 import BeautifulSoup
from humanfriendly import format_timespan, format_size, format_number, format_lengthimport time, random, sys, json, codecs, threading, glob, re, string, os, requests, subprocess, six,ast, pytz, urllib.request, urllib.parse, urllib.error, urllib.parse,antolib,subprocess,unicodedata
from gtts import gTTS                                                                                 
from googletrans import Translator
#==============================================================================#
botStart = time.time()
#==============================================================================#
#line = LINE()                                                                                        
#line = LINE("‡πÄ‡∏°‡∏•","‡∏û‡∏≤‡∏™")                                                                             
line = LINE()                                                                                         
line.log("Auth Tokenprint ("Login Succes")
: " + str(line.authToken))                                                       
#line.log("Timeline Token : " + str(line.tl.channelAccessToken))

lineMID = line.profile.mid
lineProfile = line.getProfile()
lineSettings = line.getSettings()

oepoll = OEPoll(line)
#call = Call(line)                                                                                    
readOpen = codecs.open("read.json","r","utf-8")                                                       
settingsOpen = codecs.open("temp.json","r","utf-8")
read = json.load(readOpen)
settings = json.load(settingsOpen)
Rfu = [line]
Exc = [line]
lineMID = line.getProfile().mid
bot1 = line.getProfile().mid
RfuBot=[lineMID]
Family=["u85f20b0f0f3530349275159332f74882",lineMID]
admin=['u85f20b0f0f3530349275159332f74882',lineMID]
RfuFamily = RfuBot + Family

protectname = []
protecturl = []
protection = []
autocancel = {}
autoinvite = []
autoleaveroom = []
targets = []
#==============================================================================#
msg_dict = {}

settings = {
    "autoAdd": False,
    "autoJoin": False,
    'autoCancel':{"on":True,"members":10},
    "autoLeave": True,
    "autoRead": False,
    "leaveRoom": False,
    "detectMention": True,
    "checkSticker": False,
    "checkContact": False,
    "checkPost": False,
    "kickMention": False,
    "potoMention": True,
    "delayMention": False,                                                                                
    "lang":"JP",
    "Wc": False,
    "Lv": False,
    "Nk": False,
    "Api": False,
    "Aip": False,
    "blacklist":{},
    "winvite": False,
    "wblacklist": False,
    "dblacklist": False,
    "gift":False,
    "likeOn":False,
    "timeline":False,
    "commentOn":True,
    "commentBlack":{},
    "wblack": False,
    "dblack": False,
    "clock": False,
    "cName":"",
    "cNames":"",
    "changeGroupPicture": [],
    "changePictureProfile":False,
    "unsendMessage": False,
    "autoJoinTicket": False,
    "welcome":"‡∏™‡∏ß‡∏±‡∏™‡∏î‡∏µ‡∏Ñ‡∏ô‡∏°‡∏≤‡πÉ‡∏´‡∏°‡πà\n\n‡∏ï‡∏±‡πâ‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ï‡πâ‡∏≠‡∏ô‡∏£‡∏±‡∏ö‡∏î‡πâ‡∏ß‡∏¢‡∏Ñ‡∏±‡∏ö\n‚û¢‚ùç‡Æ™Í™îüîù",
    "kick":"‡∏á‡∏¥‡πÄ‡∏ï‡∏∞‡∏ó‡∏°‡∏≠‡∏¢‡∏¢‡∏¢üòÇ\n‚û¢‚ùç‡Æ™Í™îüîù",
    "bye":"‡πÑ‡∏õ‡∏ã‡πà‡∏∞‡∏•‡∏∞ ‡∏•‡∏≤‡∏Å‡πà‡∏≠‡∏¢‡∏¢‡∏¢\n‚û¢‚ùç‡Æ™Í™îüîù",
    "Respontag":"‡∏£‡∏±‡∏Å‡∏Ñ‡∏ô‡πÅ‡∏ó‡∏Ñ (‚û¢‚ùç‡Æ™Í™îüîù)!",
    "eror":"‡∏Ñ‡∏∏‡∏ì‡πÉ‡∏ä‡πâ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ú‡∏¥‡∏î ‡∏™‡∏±‡πà‡∏á‡∏ö‡∏≠‡∏ó‡∏≠‡∏µ‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á!",
    "spam":{},
    "invite": {},
    "winvite": False,
    "pnharfbot": {},
    "pname": {},
    "pro_name": {},
    "message1":"‡πÅ‡∏≠‡∏î‡∏°‡∏≤‡∏£‡∏±‡∏Å ‡∏´‡∏£‡∏∑‡∏≠ ‡πÅ‡∏≠‡∏î‡∏°‡∏≤‡∏£‡∏±‡∏ôüòä",
    "message":"‡∏ö‡∏±‡∏ç‡∏ä‡∏µ‡∏ô‡∏µ‡πâ‡∏ñ‡∏π‡∏Å‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô‡πÇ‡∏î‡∏¢ ‚û¢‚ùç‡Æ™Í™îüîù ‡∏£‡∏∞‡∏ö‡∏ö‡πÑ‡∏î‡πâ‡∏ö‡∏•‡πá‡∏≠‡∏Ñ‡∏Ñ‡∏∏‡∏ì‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥!",
    "comment":"""‚û¢‚ùç‡Æ™Í™îüîù BY:
‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚îì
‚ï†       ‚û¢‚ùç‡Æ™Í™îüîù
‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚îõ""",
    "userAgent": [
        "Mozilla/5.0 (X11; U; Linux i586; de; rv:5.0) Gecko/20100101 Firefox/5.0",
        "Mozilla/5.0 (X11; U; Linux amd64; rv:5.0) Gecko/20100101 Firefox/5.0 (Debian)",
        "Mozilla/5.0 (X11; U; Linux amd64; en-US; rv:5.0) Gecko/20110619 Firefox/5.0",
        "Mozilla/5.0 (X11; Linux) Gecko Firefox/5.0",
        "Mozilla/5.0 (X11; Linux x86_64; rv:5.0) Gecko/20100101 Firefox/5.0 FirePHP/0.5",
        "Mozilla/5.0 (X11; Linux x86_64; rv:5.0) Gecko/20100101 Firefox/5.0 Firefox/5.0",
        "Mozilla/5.0 (X11; Linux x86_64) Gecko Firefox/5.0",
        "Mozilla/5.0 (X11; Linux ppc; rv:5.0) Gecko/20100101 Firefox/5.0",
        "Mozilla/5.0 (X11; Linux AMD64) Gecko Firefox/5.0",
        "Mozilla/5.0 (X11; FreeBSD amd64; rv:5.0) Gecko/20100101 Firefox/5.0",
        "Mozilla/5.0 (Windows NT 6.2; WOW64; rv:5.0) Gecko/20100101 Firefox/5.0",
        "Mozilla/5.0 (Windows NT 6.1; Win64; x64; rv:5.0) Gecko/20110619 Firefox/5.0",
        "Mozilla/5.0 (Windows NT 6.1; Win64; x64; rv:5.0) Gecko/20100101 Firefox/5.0",
        "Mozilla/5.0 (Windows NT 6.1; rv:6.0) Gecko/20100101 Firefox/5.0",
        "Mozilla/5.0 (Windows NT 6.1.1; rv:5.0) Gecko/20100101 Firefox/5.0",
        "Mozilla/5.0 (Windows NT 5.2; WOW64; rv:5.0) Gecko/20100101 Firefox/5.0",
        "Mozilla/5.0 (Windows NT 5.1; U; rv:5.0) Gecko/20100101 Firefox/5.0",
        "Mozilla/5.0 (Windows NT 5.1; rv:2.0.1) Gecko/20100101 Firefox/5.0",
        "Mozilla/5.0 (Windows NT 5.0; WOW64; rv:5.0) Gecko/20100101 Firefox/5.0",
        "Mozilla/5.0 (Windows NT 5.0; rv:5.0) Gecko/20100101 Firefox/5.0"
],
    "mimic": {
        "copy": False,
        "status": False,
        "target": {}
    }
}

RfuProtect = {
    "protect": False,
    "cancelprotect": False,
    "inviteprotect": False,
    "linkprotect": False,
    "Protectguest": False,
    "Protectjoin": False,
    "autoAdd": True,
}

RfuProtect = {
    "protect": False,
    "cancelprotect": False,
    "inviteprotect": False,
    "linkprotect": False,
    "Protectguest": False,
    "Protectjoin": False,
    "autoAdd": True,
}

Setmain = {
    "foto": {},
}

read = {
    "readPoint": {},
    "readMember": {},
    "readTime": {},
    "setTime":{},
    "ROM": {}
}

myProfile = {
        "displayName": "",
        "statusMessage": "",
        "pictureStatus": ""
}

mimic = {
    "copy":False,
    "copy2":False,
    "status":False,
    "target":{}
    }

RfuCctv={
    "cyduk":{},
    "point":{},
    "sidermem":{}
}

rfuSet = {
    'setTime':{},
    'ricoinvite':{},
    'winvite':{},
    }

user1 = lineMID
user2 = ""

setTime = {}
setTime = rfuSet['setTime']

contact = line.getProfile()
backup = line.getProfile()
backup.dispalyName = contact.displayName
backup.statusMessage = contact.statusMessage
backup.pictureStatus = contact.pictureStatus

mulai = time.time()
dangerMessage = ["cleanse","group cleansed.","mulai",".winebot",".kickall","mayhem","kick on","Kick","!kickall","nuke","‡∏ö‡∏¥‡∏ô","Kick","‡∏Å‡∏£‡∏∞‡πÄ‡∏î‡πá‡∏ô","‡∏´‡∏ß‡∏î","‡πÄ‡∏ã‡∏•‡∏Å‡∏≤‡∏Å‡∏à‡∏±‡∏á","‡πÄ‡∏ï‡∏∞",".","‡∏õ‡∏•‡∏¥‡∏ß"]
fukgerMessage = ["‡∏Ñ‡∏ß‡∏¢","‡∏´‡∏µ","‡πÅ‡∏ï‡∏î","‡πÄ‡∏¢‡πá‡∏î‡πÅ‡∏°‡πà","‡πÄ‡∏¢‡πá‡∏î‡πÄ‡∏Ç‡πâ","‡∏Ñ.‡∏ß‡∏¢","‡∏™‡∏±‡∏™","‡πÄ‡∏´‡∏µ‡πâ‡∏¢","‡πÑ‡∏≠‡πâ‡πÄ‡∏´‡∏µ‡πâ‡∏¢","‡∏û‡πà‡∏≠‡∏°‡∏∂‡∏á‡∏ï‡∏≤‡∏¢","‡πÑ‡∏≠‡πâ‡πÄ‡∏•‡∏ß","‡∏£‡∏∞‡∏¢‡∏≥","‡∏ä‡∏≤‡∏ï‡∏¥‡∏´‡∏°‡∏≤","‡∏´‡∏ô‡πâ‡∏≤‡∏´‡∏µ","‡πÄ‡∏ã‡∏•‡∏Å‡∏≤‡∏Å","‡∏û‡πà‡∏≠‡∏á‡∏ï‡∏≤‡∏¢","‡∏™‡πâ‡∏ô‡∏ï‡∏µ‡∏ô","‡πÅ‡∏°‡πà‡∏°‡∏∂‡∏á‡∏≠‡πà‡∏∞","‡πÅ‡∏°‡πà‡∏°‡∏∂‡∏á‡∏î‡∏¥","‡∏û‡πà‡∏≠‡∏°‡∏∂‡∏á‡∏î‡∏¥"]

try:
    with open("Log_data.json","r",encoding="utf_8_sig") as f:
        msg_dict = json.loads(f.read())
except:
    print("Couldn't read Log data")

myProfile["displayName"] = lineProfile.displayName
myProfile["statusMessage"] = lineProfile.statusMessage
myProfile["pictureStatus"] = lineProfile.pictureStatus
#==============================================================================#
#==============================================================================#
def Rapid1Say(mtosay):
    line.sendText(Rapid1To,mtosay)

def summon(to, nama):
    aa = ""
    bb = ""
    strt = int(14)
    akh = int(14)
    nm = nama
    for mm in nm:
      akh = akh + 2
      aa += """{"S":"""+json.dumps(str(strt))+""","E":"""+json.dumps(str(akh))+""","M":"""+json.dumps$
      strt = strt + 6
      akh = akh + 4
      bb += "\xe2\x95\xa0 @x \n"
    aa = (aa[:int(len(aa)-1)])
    msg = Message()
    msg.to = to
    msg.text = "\xe2\x95\x94\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\xe2\x95\x90\$
    msg.contentMetadata ={'MENTION':'{"MENTIONEES":['+aa+']}','EMTVER':'4'}
    print ("TAG ALL")
    try:
       line.sendMessage(msg)
    except Exception as error:
       print(error)

def restartBot():
    print ("RESTART SERVER")
    time.sleep(3)
    python = sys.executable
    os.execl(python, python, *sys.argv)

def logError(text):
    line.log("[ ‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô ] " + str(text))
    time_ = datetime.now()
    with open("errorLog.txt","a") as error:
        error.write("\n[%s] %s" % (str(time), text))

try:
        arrData = ""
        text = "%s " %(str(firstmessage))
        arr = []
        mention = "@x "
        slen = str(len(text))
        elen = str(len(text) + len(mention) - 1)
        arrData = {'S':slen, 'E':elen, 'M':mid}
        arr.append(arrData)
        text += mention + str(lastmessage)
        line.sendMessage(to, text, {'MENTION': str('{"MENTIONEES":' + json.dumps(arr) + '}')}, 0)
    except Exception as error:
        logError(error)
        line.sendMessage(to, "[ INFO ] Error :\n" + str(error))

def sendMessage(to, text, contentMetadata={}, contentType=0):
    mes = Message()
    mes.to, mes.from_ = to, profile.mid
    mes.text = text
    mes.contentType, mes.contentMetadata = contentType, contentMetadata
    if to not in messageReq:
        messageReq[to] = -1
    messageReq[to] += 1

def sendMessageWithMention(to, lineMID):
    try:
        aa = '{"S":"0","E":"3","M":'+json.dumps(lineMID)+'}'
        text_ = '@x '
        line.sendMessage(to, text_, contentMetadata={'MENTION':'{"MENTIONEES":['+aa+']}'}, contentTyp$
    except Exception as error:
        logError(error)

def cTime_to_datetime(unixtime):
    return datetime.fromtimestamp(int(str(unixtime)[:len(str(unixtime))-3]))
def dt_to_str(dt):
    return dt.strftime('%H:%M:%S')

def delete_log():
    ndt = datetime.now()
    for data in msg_dict:
        if (datetime.utcnow() - cTime_to_datetime(msg_dict[data]["createdTime"])) > timedelta(1):
            if "path" in msg_dict[data]:
                line.deleteFile(msg_dict[data]["path"])
            del msg_dict[data]

def sendMention(to, text="", mids=[]):
    arrData = ""
    arr = []
    mention = "@zeroxyuuki "
    if mids == []:
        raise Exception("Invalid mids")
    if "@!" in text:
        if text.count("@!") != len(mids):
            raise Exception("Invalid mids")
        texts = text.split("@!")
        textx = ""
        for mid in mids:
            textx += str(texts[mids.index(mid)])
            slen = len(textx)
            elen = len(textx) + 15
            arrData = {'S':str(slen), 'E':str(elen - 4), 'M':mid}
            arr.append(arrData)
            textx += mention
        textx += str(texts[len(mids)])
    else:
        textx = ""
        slen = len(textx)
        elen = len(textx) + 15
        arrData = {'S':str(slen), 'E':str(elen - 4), 'M':mids[0]}
        arr.append(arrData)
        textx += mention + str(text)
    line.sendMessage(to, textx, {'MENTION': str('{"MENTIONEES":' + json.dumps(arr) + '}')}, 0)

def mentionMembers(to, mid):
    try:
        arrData = ""
        textx = "‚ïî‚ïê‚ïê[Mention {} User]\n‚ï† ".format(str(len(mid)))
        arr = []
        no = 1
        for i in mid:
            mention = "@x\n"
            slen = str(len(textx))
            elen = str(len(textx) + len(mention) - 1)
            arrData = {'S':slen, 'E':elen, 'M':i}
            arr.append(arrData)
            textx += mention
            if no < len(mid):
                no += 1
                textx += "‚ï† "
            else:
                try:
                    textx += "‚ïö‚ïê‚ïê[ {} ]".format(str(line.getGroup(to).name))
                except:
                    pass
        line.sendMessage(to, textx, {'MENTION': str('{"MENTIONEES":' + json.dumps(arr) + '}')}, 0)
    except Exception as error:
        logError(error)
        line.sendMessage(to, "[ INFO ] Error :\n" + str(error))

def myhelp():
    myHelp = """‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚îì
‚ï†     ‚û¢‚ùç‡Æ™Í™îüîù
‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚îõ
‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚îì
‚ï†‚ùã‚ñ∫Me ‚Üî‡∏Ñ‡∏≠‡∏ô‡πÅ‡∏ó‡∏Ñ
‚ï†‚ùã‚ñ∫Help1 ‚Üî‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ó‡∏±‡πà‡∏ß‡πÑ‡∏õ
‚ï†‚ùã‚ñ∫Help2 ‚Üî‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏Å‡∏•‡∏∏‡πà‡∏°
‚ï†‚ùã‚ñ∫Help3 ‚Üî‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤
‚ï†‚ùã‚ñ∫Help4 ‚Üî ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏°‡∏µ‡πÄ‡∏î‡∏µ‡∏¢
‚ï†‚ùã‚ñ∫Help5 ‚Üî ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏™‡∏¥‡∏£‡∏¥
‚ï†‚ùã‚ñ∫Help6 ‚Üî ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡πÅ‡∏õ‡∏•‡∏†‡∏≤‡∏©‡∏≤
‚ï†‚ùã‚ñ∫‡∏ö‡∏≠‡∏ó‡∏≠‡∏≠‡∏ô
‚ï†‚ùã‚ñ∫‡πÅ‡∏ó‡∏Ñ
‚ï†‚ùã‚ñ∫‡∏ó‡∏µ‡∏°‡∏ö‡∏≠‡∏ó
‚ï†‚ùã‚ñ∫Creator
‚ï†‚ùã‚ñ∫Sp
‚ï∞‚ïê‚ùã‚û¢‚ùç‡Æ™Í™îüîù ¬ª"""
    return myHelp

def listgrup():
    listGrup = """‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚îì
‚ï†     ‚ùã‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏Å‡∏•‡∏∏‡πà‡∏°‚ùã
‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚îõ
‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚îì
‚ï†‚ùã‚ñ∫‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡∏•‡∏∏‡πà‡∏°
‚ï†‚ùã‚ñ∫‡∏ä‡∏∑‡πà‡∏≠‡∏Å‡∏•‡∏∏‡πà‡∏°
‚ï†‚ùã‚ñ∫‡πÑ‡∏≠‡∏î‡∏µ‡∏Å‡∏•‡∏∏‡πà‡∏°
‚ï†‚ùã‚ñ∫‡∏£‡∏π‡∏õ‡∏Å‡∏•‡∏∏‡πà‡∏°
‚ï†‚ùã‚ñ∫‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å
‚ï†‚ùã‚ñ∫‡πÄ‡∏õ‡∏¥‡∏î‡∏•‡∏¥‡πâ‡∏á
‚ï†‚ùã‚ñ∫‡∏õ‡∏¥‡∏î‡∏•‡∏¥‡πâ‡∏á
‚ï†‚ùã‚ñ∫Gurl
‚ï†‚ùã‚ñ∫‡∏•‡∏¥‡πâ‡∏á
‚ï†‚ùã‚ñ∫‡πÅ‡∏ó‡∏Ñ
‚ï†‚ùã‚ñ∫‡πÅ‡∏ó‡∏Ñ‡∏•‡πà‡∏≠‡∏á‡∏´‡∏ô
‚ï†‚ùã‚ñ∫‡πÑ‡∏≠‡∏î‡∏µ‡∏•‡πà‡∏≠‡∏á‡∏´‡∏ô
‚ï†‚ùã‚ñ∫‡∏Ñ‡∏ó‡∏•‡πà‡∏≠‡∏á‡∏´‡∏ô
‚ï†‚ùã‚ñ∫‡πÄ‡∏õ‡∏¥‡∏î‡πÅ‡∏≠‡∏ö
‚ï†‚ùã‚ñ∫‡∏õ‡∏¥‡∏î‡πÅ‡∏≠‡∏ö
‚ï†‚ùã‚ñ∫‡∏°‡∏≠‡∏á
‚ï†‚ùã‚ñ∫‡πÑ‡∏Ñ‡∏£‡∏≠‡πà‡∏≤‡∏ô
‚ï†‚ùã‚ñ∫‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å
‚ï†‚ùã‚ñ∫‡πÇ‡∏ó‡∏£
‚ï†‚ùã‚ñ∫‡πÄ‡∏ä‡∏¥‡∏ç‡∏Ñ‡∏•‡∏≠
‚ï†‚ùã‚ñ∫‡∏î‡∏∂‡∏á
‚ï†‚ùã‚ñ∫‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏£‡∏π‡∏õ‡∏Å‡∏•‡∏∏‡πà‡∏°
‚ï†‚ùã‚ñ∫‡∏õ‡∏£‡∏∞‡∏Å‡∏≤‡∏®
‚ï†‚ùã‚ñ∫Vk @
‚ï†‚ùã‚ñ∫‡∏´‡∏µ‡πÅ‡∏´‡∏Å @
‚ï†‚ùã‚ñ∫‡πÅ‡∏ö‡∏ô‡∏´‡∏°‡∏î
‚ï†‚ùã‚ñ∫‡πÅ‡∏ö‡∏ô @
‚ï†‚ùã‚ñ∫‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å @
‚ï†‚ùã‚ñ∫‡∏•‡πâ‡∏≤‡∏á‡πÅ‡∏ö‡∏ô @
‚ï†‚ùã‚ñ∫‡πÄ‡∏ï‡∏∞‡πÅ‡∏ö‡∏ô
‚ï†‚ùã‚ñ∫‡πÄ‡∏ä‡πá‡∏Ñ‡πÑ‡∏≠‡∏î‡∏µ
‚ï∞‚ïê‚ùã‚û¢‚ùç‡Æ™Í™îüîù ¬ª"""
    return listGrup

def socmedia():
    socMedia = """‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚îì
‚ï†    ‚ùã‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏°‡∏µ‡πÄ‡∏î‡∏µ‡πà‡∏¢‚ùã
‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚îõ
‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚îì
‚ï†‚ùã‚ñ∫‡∏´‡∏≤‡∏£‡∏π‡∏õ
‚ï†‚ùã‚ñ∫‡∏£‡∏π‡∏õ‡∏Å‡∏≤‡∏£‡πå‡∏ï‡∏π‡∏ô
‚ï†‚ùã‚ñ∫‡∏¢‡∏π‡∏ó‡∏π‡∏õ
‚ï†‚ùã‚ñ∫‡πÄ‡∏û‡∏•‡∏á
‚ï†‚ùã‚ñ∫‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤
‚ï†‚ùã‚ñ∫‡∏´‡∏ô‡∏±‡∏á
‚ï†‚ùã‚ñ∫‡∏†‡∏≤‡∏û
‚ï†‚ùã‚ñ∫‡∏ß‡∏µ‡∏î‡∏µ‡πÇ‡∏≠
‚ï†‚ùã‚ñ∫‡πÄ‡∏ó‡∏™
‚ï†‚ùã‚ñ∫‡πÄ‡∏û‡∏•‡∏á‡∏°‡∏≤
‚ï†‚ùã‚ñ∫‡∏™‡∏õ‡∏µ‡∏î
‚ï†‚ùã‚ñ∫‡πÑ‡∏≠‡∏à‡∏µ
‚ï†‚ùã‚ñ∫‡πÄ‡∏ß‡∏•‡∏≤
‚ï†‚ùã‚ñ∫‡∏Ç‡∏≠‡∏´‡∏∑‡πà‡∏ô
‚ï∞‚ïê‚ùã‚û¢‚ùç‡Æ™Í™îüîù ¬ª"""
    return socMedia

def helpset():
    helpSet = """‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚îì
‚ï†    ‚ùã‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏áSELF‚ùã
‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚îõ
‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚îì
‚ï†‚ùã‚ñ∫Me
‚ï†‚ùã‚ñ∫‡∏Ñ‡∏ó
‚ï†‚ùã‚ñ∫Mid
‚ï†‚ùã‚ñ∫‡∏£‡∏π‡∏õ
‚ï†‚ùã‚ñ∫‡∏õ‡∏Å
‚ï†‚ùã‚ñ∫‡∏ß‡∏µ‡∏î‡∏µ‡πÇ‡∏≠
‚ï†‚ùã‚ñ∫‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•
‚ï†‚ùã‚ñ∫‡∏Å‡∏•‡∏∏‡πà‡∏°‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
‚ï†‚ùã‚ñ∫‡∏ä‡∏∑‡πà‡∏≠
‚ï†‚ùã‚ñ∫‡∏ï‡∏±‡∏™
‚ï†‚ùã‚ñ∫‡∏Ñ‡∏ó @
‚ï†‚ùã‚ñ∫‡∏£‡∏π‡∏õ @
‚ï†‚ùã‚ñ∫‡∏õ‡∏Å @
‚ï†‚ùã‚ñ∫‡∏ä‡∏∑‡πà‡∏≠ @
‚ï†‚ùã‚ñ∫‡∏ï‡∏±‡∏™ @
‚ï†‚ùã‚ñ∫‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• @
‚ï†‚ùã‚ñ∫‡πÑ‡∏≠‡∏î‡∏µ
‚ï†‚ùã‚ñ∫Sp ‚Üî Speed
‚ï†‚ùã‚ñ∫‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏î‡∏¥‡∏™
‚ï†‚ùã‚ñ∫‡πÑ‡∏ß‡∏£‡∏±‡∏™
‚ï†‚ùã‚ñ∫‡∏õ‡∏¥‡∏î‡πÑ‡∏ü
‚ï†‚ùã‚ñ∫Creator
‚ï†‚ùã‚ñ∫‡∏ó‡∏µ‡∏°‡∏ö‡∏≠‡∏ó
‚ï†‚ùã‚ñ∫‡∏ú‡∏™
‚ï†‚ùã‚ñ∫‡∏ö‡∏≠‡∏ó‡∏≠‡∏≠‡∏ô
‚ï†‚ùã‚ñ∫‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏Ç‡πâ‡∏≤
‚ï†‚ùã‚ñ∫‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏≠‡∏≠‡∏Å
‚ï†‚ùã‚ñ∫‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏ï‡∏∞
‚ï†‚ùã‚ñ∫‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÅ‡∏≠‡∏î
‚ï†‚ùã‚ñ∫‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÅ‡∏≠‡∏î2
‚ï†‚ùã‚ñ∫N
‚ï†‚ùã‚ñ∫‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ô
‚ï†‚ùã‚ñ∫‡πÄ‡∏ä‡πá‡∏Ñ‡∏ö‡∏•‡πá‡∏≠‡∏Ñ
‚ï†‚ùã‚ñ∫‡πÑ‡∏≠‡∏î‡∏µ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ô
‚ï†‚ùã‚ñ∫‡∏•‡∏ö‡πÅ‡∏ä‡∏ó
‚ï†‚ùã‚ñ∫‡∏õ‡∏¥‡∏î‡∏ö‡∏≠‡∏ó
‚ï†‚ùã‚ñ∫‡∏£‡∏±‡∏ô @
‚ï†‚ùã‚ñ∫‡∏£‡∏±‡∏ô‡πÅ‡∏ä‡∏ó
‚ï†‚ùã‚ñ∫‡∏£‡∏±‡∏ô‡πÅ‡∏ä‡∏ó
‚ï†‚ùã‚ñ∫‡πÅ‡∏ö‡∏ô @ ‚Üî ‡∏õ‡∏•‡∏î @
‚ï†‚ùã‚ñ∫‡πÄ‡∏•‡∏µ‡∏¢‡∏ô‡πÅ‡∏ö‡∏ö @
‚ï†‚ùã‚ñ∫‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å @
‚ï†‚ùã‚ñ∫Nutmic on ‚Üî off
‚ï†‚ùã‚ñ∫‡πÄ‡∏ä‡∏Ñ‡πÄ‡∏•‡∏µ‡∏¢‡∏ô‡πÅ‡∏ö‡∏ö
‚ï†‚ùã‚ñ∫‡πÄ‡∏ï‡∏∞‡πÅ‡∏ö‡∏ô
‚ï†‚ùã‚ñ∫‡∏ä‡∏∑‡πà‡∏≠;
‚ï†‚ùã‚ñ∫‡∏ï‡∏±‡∏™;
‚ï†‚ùã‚ñ∫Spam on ‚Üî off
‚ï∞‚ïê‚ùãBY: ‚û¢‚ùç‡Æ™Í™îüîù"""
    return helpSet

def helpsetting():
    helpSetting = """‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚îì
‚ï† ‚ùã¬´‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏ö‡∏≠‡∏ó¬ª‚ùã
‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚îõ
‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚îì
‚ï†‚ùã‚ñ∫‡πÄ‡∏ä‡πá‡∏Ñ
‚ï†‚ùã‚ñ∫B on ‚Üî B off
‚ï†‚ùã‚ñ∫‡πÄ‡∏õ‡∏¥‡∏î‡πÄ‡∏Ç‡πâ‡∏≤ ‚Üî ‡∏õ‡∏¥‡∏î‡πÄ‡∏Ç‡πâ‡∏≤
‚ï†‚ùã‚ñ∫‡πÅ‡∏ä‡∏ó on ‚Üî‡πÅ‡∏ä‡∏ó off
‚ï†‚ùã‚ñ∫‡∏≠‡πà‡∏≤‡∏ô on ‚Üî‡∏≠‡πà‡∏≤‡∏ô off
‚ï†‚ùã‚ñ∫‡πÄ‡∏õ‡∏¥‡∏î‡∏°‡∏∏‡∏î ‚Üî ‡∏õ‡∏¥‡∏î‡∏°‡∏∏‡∏î
‚ï†‚ùã‚ñ∫‡∏ï‡∏¥‡πâ‡∏Å on ‚Üî ‡∏ï‡∏¥‡πâ‡∏Å off
‚ï†‚ùã‚ñ∫‡πÄ‡∏õ‡∏¥‡∏î‡πÄ‡∏™‡∏∑‡∏≠‡∏Å ‚Üî ‡∏õ‡∏¥‡∏î‡πÄ‡∏™‡∏∑‡∏≠‡∏Å
‚ï†‚ùã‚ñ∫‡πÄ‡∏õ‡∏¥‡∏î‡πÅ‡∏ó‡∏Ñ ‚Üî ‡∏õ‡∏¥‡∏î‡πÅ‡∏ó‡∏Ñ
‚ï†‚ùã‚ñ∫‡πÄ‡∏õ‡∏¥‡∏î‡πÅ‡∏ó‡∏Ñ2 ‚Üî ‡∏õ‡∏¥‡∏î‡πÅ‡∏ó‡∏Ñ2
‚ï†‚ùã‚ñ∫‡πÄ‡∏õ‡∏¥‡∏î‡πÅ‡∏ó‡∏Ñ3 ‚Üî ‡∏õ‡∏¥‡∏î‡πÅ‡∏ó‡∏Ñ3
‚ï†‚ùã‚ñ∫‡πÄ‡∏ï‡∏∞‡πÅ‡∏ó‡∏Ñ ‚Üî ‡∏õ‡∏¥‡∏î‡πÄ‡∏ï‡∏∞‡πÅ‡∏ó‡∏Ñ
‚ï†‚ùã‚ñ∫‡πÄ‡∏õ‡∏¥‡∏î‡∏Ñ‡∏ó ‚Üî ‡∏õ‡∏¥‡∏î‡∏Ñ‡∏ó
‚ï†‚ùã‚ñ∫‡πÄ‡∏õ‡∏¥‡∏î‡πÅ‡∏ä‡∏£‡πå ‚Üî ‡∏õ‡∏¥‡∏î‡πÅ‡∏ä‡∏£‡πå
‚ï†‚ùã‚ñ∫‡πÄ‡∏õ‡∏¥‡∏î‡∏ï‡∏£‡∏ß‡∏à ‚Üî ‡∏õ‡∏¥‡∏î‡∏ï‡∏£‡∏ß‡∏à
‚ï†‚ùã‚ñ∫‡πÄ‡∏õ‡∏¥‡∏î‡∏û‡∏π‡∏î ‚Üî ‡∏õ‡∏¥‡∏î‡∏û‡∏π‡∏î
‚ï†‚ùã‚ñ∫‡∏ï‡∏±‡πâ‡∏á‡πÅ‡∏≠‡∏î;
‚ï†‚ùã‚ñ∫‡∏ï‡∏±‡πâ‡∏á‡πÅ‡∏ó‡∏Ñ;
‚ï†‚ùã‚ñ∫‡∏Ñ‡∏≠‡∏°‡πÄ‡∏°‡πâ‡∏ô;
‚ï†‚ùã‚ñ∫‡∏ï‡∏±‡πâ‡∏á‡∏≠‡∏≠‡∏Å;
‚ï†‚ùã‚ñ∫‡∏ï‡∏±‡πâ‡∏á‡πÄ‡∏Ç‡πâ‡∏≤;
‚ï†‚ùã‚ñ∫‡πÄ‡∏õ‡∏¥‡∏î‡∏Å‡∏±‡∏ô ‚Üî ‡∏õ‡∏¥‡∏î‡∏Å‡∏±‡∏ô
‚ï†‚ùã‚ñ∫‡∏Å‡∏±‡∏ô‡∏•‡∏¥‡πâ‡∏á ‚Üî ‡∏õ‡∏¥‡∏î‡∏Å‡∏±‡∏ô‡∏•‡∏¥‡πâ‡∏á
‚ï†‚ùã‚ñ∫‡∏Å‡∏±‡∏ô‡∏¢‡∏Å ‚Üî ‡∏õ‡∏¥‡∏î‡∏Å‡∏±‡∏ô‡∏¢‡∏Å
‚ï†‚ùã‚ñ∫‡∏Å‡∏±‡∏ô‡πÄ‡∏ä‡∏¥‡∏ç ‚Üî ‡∏õ‡∏¥‡∏î‡∏Å‡∏±‡∏ô‡πÄ‡∏ä‡∏¥‡∏ç
‚ï†‚ùã‚ñ∫‡∏Å‡∏±‡∏ô‡∏Å‡∏•‡∏∏‡πà‡∏° ‚Üî ‡∏õ‡∏¥‡∏î‡∏Å‡∏±‡∏ô‡∏Å‡∏•‡∏∏‡πà‡∏°
‚ï†‚ùã‚ñ∫‡∏Å‡∏±‡∏ô‡πÄ‡∏Ç‡πâ‡∏≤ ‚Üî ‡∏õ‡∏¥‡∏î‡∏Å‡∏±‡∏ô‡πÄ‡∏Ç‡πâ‡∏≤
‚ï†‚ùã‚ñ∫‡πÄ‡∏õ‡∏¥‡∏î‡∏´‡∏°‡∏î ‚Üî ‡∏õ‡∏¥‡∏î‡∏´‡∏°‡∏î
‚ï∞‚ïê‚ïê‚ùãBY: ‚û¢‚ùç‡Æ™Í™îüîù """
    return helpSetting

def helptexttospeech():
    helpTextToSpeech =   """‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚îì
‚ï†    ‚ùã¬´‡∏™‡∏±‡πà‡∏á‡∏™‡∏¥‡∏£‡∏¥‡∏û‡∏π‡∏î¬ª‚ùã
‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚îõ
‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚îì
‚ï†‚ùã‚ñ∫‡∏û‡∏π‡∏î ‡∏û‡∏¥‡∏°‡∏Ñ‡∏≥‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£
‚ï†‚ùã‚ñ∫ ‡∏Ç‡∏µ‡πâ‡πÄ‡∏Å‡∏µ‡∏¢‡∏î‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ô‡∏ï‡πà‡∏≠
‚ï∞‚ïê‚ùãBY: ‚û¢‚ùç‡Æ™Í™îüîù ¬ª

„Äå‡∏ß‡∏¥‡∏ò‡∏µ‡πÉ‡∏ä‡πâ : ‡∏û‡∏π‡∏î ‚û¢‚ùç‡Æ™Í™îüîù„Äç"""
    return helpTextToSpeech

def helplanguange():
    helpLanguange =    """‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚îì
‚ï† ‚ùã¬´‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡πÅ‡∏õ‡∏•‡∏†‡∏≤‡∏©‡∏≤¬ª‚ùã
‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê
‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚îì
‚ï†‚ùã‚ñ∫ ‡∏Ç‡∏µ‡πâ‡πÄ‡∏Å‡∏µ‡∏¢‡∏î ‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ô
‚ï∞‚ïê‚ùãBY: ‚û¢‚ùç‡Æ™Í™îüîù ¬ª

„Äå‡∏ß‡∏¥‡∏ò‡∏µ‡πÉ‡∏ä‡πâ :‡∏õ‡∏¥‡∏î‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô„Äç"""
    return helpLanguange
#==============================================================================#
def lineBot(op):
    try:
        if op.type == 0:
            return
        if op.type == 5:
            if settings["autoAdd"] == True:
                line.blockContact(op.param1)
        if op.type == 13:
            if lineMID in op.param3:
                G = line.getGroup(op.param1)
                if settings["autoJoin"] == True:
                    if settings["autoCancel"]["on"] == True:
                        if len(G.members) <= settings["autoCancel"]["members"]:
                            line.rejectGroupInvitation(op.param1)
                        else:
                            line.acceptGroupInvitation(op.param1)
                    else:
                        line.acceptGroupInvitation(op.param1)
                elif settings["autoCancel"]["on"] == True:
                    if len(G.members) <= settings["autoCancel"]["members"]:
                        line.rejectGroupInvitation(op.param1)
            else:
                Inviter = op.param3.replace("^^",',')
                InviterX = Inviter.split(",")
                matched_list = []
                for tag in settings["blacklist"]:
                    matched_list+=[str for str in InviterX if str == tag]
                if matched_list == []:
                    pass
                else:
                    line.cancelGroupInvitation(op.param1, matched_list)
#        if op.type == 13:
#            group = line.getGroup(op.param1)
#            if settings["autoJoin"] == True:
#                line.acceptGroupInvitation(op.param1)
        if op.type == 24:
            if settings["autoLeave"] == True:
                line.leaveRoom(op.param1)

        if op.type == 25:
            msg = op.message
            if msg.contentType == 13:
                if settings["winvite"] == True:
                     if msg._from in admin:
                         _name = msg.contentMetadata["displayName"]
                         invite = msg.contentMetadata["mid"]
                         groups = line.getGroup(msg.to)
                         pending = groups.invitee
                         targets = []
                         for s in groups.members:
                             if _name in s.displayName:
                                 line.sendText(msg.to,"-> " + _name + " \n‡∏ó‡∏≥‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡∏¥‡∏ç‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à")
                                 break
                             elif invite in settings["blacklist"]:
                                 line.sendText(msg.to,"‡∏Ç‡∏≠‡∏≠‡∏†‡∏±‡∏¢, " + _name + " ‡∏ö‡∏∏‡∏Ñ‡∏Ñ‡∏ô‡∏ô‡∏µ‡πâ‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ô‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏ö‡∏±‡∏ç‡∏ä‡∏µ‡∏î‡∏≥")
                                 line.sendText(msg.to,"‡πÉ‡∏ä‡πâ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á!, \n‚û°‡∏•‡πâ‡∏≤‡∏á‡∏î‡∏≥‚û°‡∏î‡∏∂‡∏á" )
                                 break
                             else:
                                 targets.append(invite)
                         if targets == []:
                             pass
                         else:
                             for target in targets:
                                 try:
                                     line.findAndAddContactsByMid(target)
                                     line.inviteIntoGroup(msg.to,[target])
                                     line.sendText(msg.to,"‡πÄ‡∏ä‡∏¥‡∏ç‡∏Ñ‡∏ô‡∏ô‡∏µ‡πâ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à‡πÅ‡∏•‡πâ‡∏ß : \n‚û°" + _name)
                                     settings["winvite"] = False
                                     break
                                 except:
                                     try:
                                         line.findAndAddContactsByMid(invite)
                                         line.inviteIntoGroup(op.param1,[invite])
                                         settings["winvite"] = False
                                     except:
                                         line.sendText(msg.to,"üòß‡∏ï‡∏£‡∏ß‡∏à‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡∏ó‡∏£‡∏≤‡∏ö‡∏™‡∏≤‡πÄ‡∏´‡∏ï‡∏∏üò©‡∏≠‡∏≤‡∏à‡πÄ‡∏õ‡πá‡∏ô‡πÑ‡∏î‡∏ß‡πà‡∏≤‡∏ö‡∏±‡∏ç‡∏ä‡∏µ‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì‡∏ñ‡∏π‡∏Å‡πÅ‡∏ö‡∏ô‡πÄ‡∏ä‡∏¥‡∏çüò®")
                                         settings["winvite"] = False
                                         break

            if op.type == 25:
            msg = op.message
            text = msg.text
            msg_id = msg.id
            receiver = msg.to
            sender = msg._from
            if msg.toType == 0 or msg.toType == 1 or msg.toType == 2:
                if msg.toType == 0:
                    if sender != line.profile.mid:
                        to = sender
                    else:
                        to = receiver
                elif msg.toType == 1:
                    to = receiver
                elif msg.toType == 2:
                    to = receiver
            if msg.contentType == 0:
                if text is None:
                    return
#==============================================================================#
                if ".‡∏û‡∏π‡∏î " in msg.text.lower():
                    spl = re.split(".‡∏û‡∏π‡∏î ",msg.text,flags=re.IGNORECASE)
                    if spl[0] == "":
                        mts = spl[1]
                        mtsl = mts.split()
                        mtsTimeArg = len(mtsl) - 1
                        mtsTime = mtsl[mtsTimeArg]
                        del mtsl[mtsTimeArg]
                        mtosay = " ".join(mtsl)
                        global Rapid1To
                        Rapid1To = msg.to
                        RapidTime = mtsTime
                        rmtosay = []
                        for count in range(0,int(RapidTime)):
                            rmtosay.insert(count,mtosay)
                        p = Pool(20)
                        p.map(Rapid1Say,rmtosay)
                        p.close()
                if text.lower() == '‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á':
                    myHelp = myhelp()
                    line.sendMessage(to, str(myHelp))
                elif text.lower() == 'help1':
                    helpSet = helpset()
                    line.sendMessage(to, str(helpSet))
                    sendMessageWithMention(to, lineMID)
                elif text.lower() == 'help2':
                    listGrup = listgrup()
                    line.sendMessage(to, str(listGrup))
                elif text.lower() == 'help3':
                    helpSetting = helpsetting()
                    line.sendMessage(to, str(helpSetting))
                elif text.lower() == 'help4':
                    socMedia = socmedia()
                    line.sendMessage(to, str(socMedia))
                elif text.lower() == 'help5':
                    helpTextToSpeech = helptexttospeech()
                    line.sendMessage(to, str(helpTextToSpeech))
                elif text.lower() == 'help6':
                    helpLanguange = helplanguange()
                    line.sendMessage(to, str(helpLanguange))
#==============================================================================#
                elif text.lower() == 'speed':
                    start = time.time()
                    line.sendMessage(to, "‚û¢‚ùç‡Æ™Í™îüîù")
                    elapsed_time = time.time() - start
                    line.sendMessage(msg.to, "[ %s ‡∏ï‡πà‡∏≠‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ ] [ " % (elapsed_time) + str(int(round((tim$
                elif text.lower() == 'sp':
                    start = time.time()
                    line.sendMessage(to, "‚û¢‚ùç‡Æ™Í™îüîù")
                    elapsed_time = time.time() - start
                    line.sendMessage(msg.to, "[ %s ‡∏ï‡πà‡∏≠‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ ] [ " % (elapsed_time) + str(int(round((tim$
                elif text.lower() == '‡∏£‡∏µ‡∏ö‡∏≠‡∏ó':
                    line.sendMessage(to, "‚û†‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏£‡∏µ‡∏ö‡∏≠‡∏ó ‡∏£‡∏≠‡∏™‡∏±‡∏Å‡∏Ñ‡∏£‡∏π‡πà ‚ùã")
                    restartBot()
                  elif text.lower() == '‡∏ö‡∏≠‡∏ó‡∏≠‡∏≠‡∏ô':
                    timeNow = time.time()
                    runtime = timeNow - botStart
                    runtime = format_timespan(runtime)
                    line.sendMessage(to, "‚û¢‚ùç‡Æ™Í™îüîù\n {}".format(str(runtime)))
                elif text.lower() == '‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•':
                    try:
                        arr = []
                        owner = "u0035a5a6c5ae9d30c9a0992ecbc39395"
                        creator = line.getContact(owner)
                        contact = line.getContact(lineMID)
                        grouplist = line.getGroupIdsJoined()
                        contactlist = line.getAllContactIds()
                        blockedlist = line.getBlockedContactIds()
                        ret_ = "‚ïî‚ïê‚ïê[ ‚ùã ‚û¢‚ùç‡Æ™Í™îüîù ‚ùã ]"
                        ret_ += "\n‚ï†‚ù• ‡∏ä‡∏∑‡πà‡∏≠ ‚ïê {}".format(contact.displayName)
                        ret_ += "\n‚ï†‚ù• ‡∏Å‡∏•‡∏∏‡πà‡∏° ‚ïê {}".format(str(len(grouplist)))
                        ret_ += "\n‚ï†‚ù• ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ô ‚ïê {}".format(str(len(contactlist)))
                        ret_ += "\n‚ï†‚ù• ‡∏ö‡∏•‡πá‡∏≠‡∏Ñ ‚ïê {}".format(str(len(blockedlist)))
                        ret_ += "\n‚ï†‚ïê‚ïê[ Status ] \n‚ïê {}".format(contact.statusMessage)
                        ret_ += "\n‚ï†‚ù• ‡∏ú‡∏π‡πâ‡∏™‡∏£‡πâ‡∏≤‡∏á ‚ïê {}".format(creator.displayName)
                        ret_ += "\n‚ïö‚ïê‚ïê[ ‚ùã ‚û¢‚ùç‡Æ™Í™îüîù ‚ùã]"
                        line.sendContact(to, owner)
                        line.sendMessage(to, str(ret_))
                    except Exception as e:
                        line.sendMessage(msg.to, str(e))
#========================  line.sendMessage(to, "‚ùã‡∏£‡∏µ‡∏ö‡∏≠‡∏ó‡πÄ‡∏™‡∏£‡πá‡∏à‡πÅ‡∏•‡πâ‡∏ß\n‡∏Å‡∏î‡∏•‡∏¥‡πâ‡∏á‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏•‡πá‡∏≠‡∏Ñ‡∏≠‡∏¥‡∏ô‡∏≠‡∏µ‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á\n‡πÅ‡∏•‡∏∞‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡πÉ‡∏´‡∏°‡πà‡∏î‡πâ‡∏ß‡∏¢‡∏Ñ‡∏±‡∏ö‡∏û‡∏£‡∏µ‡πâ")
                elif "Vk " in msg.text:
                        vkick0 = msg.text.replace("Vk ","")
                        vkick1 = vkick0.rstrip()
                        vkick2 = vkick1.replace("@","")
                        vkick3 = vkick2.rstrip()
                        _name = vkick3
                        gs = line.getGroup(msg.to)
                        targets = []
                        for s in gs.members:
                            if _name in s.displayName:
                                targets.append(s.mid)
                        if targets == []:
                            pass
                        else:
                            for target in targets:
                                try:
                                    line.kickoutFromGroup(msg.to,[target])
                                    line.findAndAddContactsByMid(target)
                                    line. inviteIntoGroup(msg.to,[target])
                                except:
                                    pass
                elif "‡πÇ‡∏ó‡∏£" == msg.text.lower():
                    line.inviteIntoGroupCall(msg.to,[uid.mid for uid in line.getGroup(msg.to).members if uid.mid != line.getProfile()
.mid])
                    line.sendMessage(msg.to,"‚û†‡πÄ‡∏ä‡∏¥‡∏ç‡πÄ‡∏Ç‡πâ‡∏≤‡∏£‡πà‡∏ß‡∏°‡∏Å‡∏≤‡∏£‡πÇ‡∏ó‡∏£‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à (ÔΩ°‚óï‚Äø‚óïÔΩ°) ")
                elif "‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å" == msg.text.lower():
                    if msg.toType == 2:
                        group = line.getGroup(msg.to)
                        gMembMids = [contact.mid for contact in group.invitee]
                        for _mid in gMembMids:
                            line.cancelGroupInvitation(msg.to,[_mid])
                        line.sendMessage(to,"‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å‡∏Ñ‡πâ‡∏≤‡∏á‡πÄ‡∏ä‡∏¥‡∏ç‡πÅ‡∏•‡πâ‡∏ß (ÔΩ°‚óï‚Äø‚óïÔΩ°) " )
#===========
                elif "‡∏™‡∏õ‡∏µ‡∏î" == msg.text.lower():
                    line.sendMessage(to,"„Äå‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏£‡πá‡∏ß...„Äç\n‚ñà‚ñà‚ñà‚ñí39%\n‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñí69%\n‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñí99%\n0.0000000000000000 second")
                    line.sendMessage(to,"0.0000000000000000 second")
                    line.sendMessage(to,"(ÔΩ°‚óï‚Äø‚óïÔΩ°)")
#===========     
                elif "‡πÄ‡∏ó‡∏™" == msg.text.lower():
                    line.sendMessage(to,"≈ö·∫æL‚Ç£–íŒå≈¶L√ç≈á·ªÄ\n(ÔΩ°‚óï‚Äø‚óïÔΩ°)")
                    line.sendMessage(to,"LOADING:‚ñí...0%")
                    line.sendMessage(to,"‚ñà‚ñí... 10.0%")
                    line.sendMessage(to,"‚ñà‚ñà‚ñí... 20.0%")
                    line.sendMessage(to,"‚ñà‚ñà‚ñà‚ñí... 30.0%")
                    line.sendMessage(to,"‚ñà‚ñà‚ñà‚ñà‚ñí... 40.0%")
                    line.sendMessage(to,"‚ñà‚ñà‚ñà‚ñà‚ñà‚ñí... 50.0%")
                    line.sendMessage(to,"‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñí... 60.0%")
                    line.sendMessage(to,"‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñí... 70.0%")
                    line.sendMessage(to,"‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñí... 80.0%")
                    line.sendMessage(to,"‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñí... 90.0%")
                    line.sendMessage(to,"‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà..100.0%")
                    line.sendMessage(to,"(ÔΩ°‚óï‚Äø‚óïÔΩ°)\n‚û¢‚ùç‡Æ™Í™îüîù‡∏ö‡∏≠‡∏ó‡∏¢‡∏±‡∏á‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡∏Ñ‡∏±‡∏ö‡∏ó‡πà‡∏≤‡∏ôüòÅ")
#==============================================================================#
                elif "n" == msg.text.lower():
                    msg.contentType = 13
                    line.sendMessage(to, "=========================")
                    line.sendContact(to, "u85f20b0f0f3530349275159332f74882")
"=========================")
#===========
                elif "‡πÄ‡∏û‡∏•‡∏á‡∏°‡∏≤" == msg.text.lower():
                    line.sendMessage(to,"‡∏ö‡πà‡πÅ‡∏°‡∏ô‡∏´‡∏°‡∏≤‡∏ß‡∏±‡∏î‡πÅ‡∏•‡πâ‡∏ß‡∏Å‡∏∞‡∏ö‡πà‡πÑ‡∏î‡πâ‡πÉ‡∏à‡∏ô‡∏≤‡∏á\n‡πÄ‡∏•‡∏µ‡∏¢‡∏´‡∏µ‡∏à‡∏ô‡∏Ñ‡∏£‡∏≤‡∏á‡∏Å‡∏∞‡∏î‡∏±‡∏Å‡πÉ‡∏à‡∏ô‡∏≤‡∏á‡πÑ‡∏ß‡πâ‡∏ö‡πà‡πÑ‡∏î‡πâ\n‡πÄ‡∏¢‡πá‡∏î‡∏î‡∏µ‡∏õ‡∏≤‡∏ô‡πÑ‡∏î‡πã‡πÄ$‡∏î‡πâ‡∏≤‡∏´‡∏•‡∏≤‡∏¢‡πÑ‡∏î‡πâ‡∏¢‡∏¥‡∏ô‡∏ö‡πà\n‡∏£‡∏≠‡πÄ‡∏î‡πâ‡∏≤‡∏≠‡∏¢‡∏π‡πà‡πÄ‡∏î‡πâ‡∏≠‡∏≠‡∏≠‡∏≠‡∏≠..‡πÅ‡∏Ñ‡∏°‡πÅ‡∏î‡∏á")
#==============================================================================#
                elif "creator" == msg.text.lower():
                    line.sendMessage(to,"CREATOR ‚û¢‚ùç‡Æ™Í™îüîù\n(ÔΩ°‚óï‚Äø‚óïÔΩ°)")
                    line.sendContact(to, "u85f20b0f0f3530349275159332f74882")
                elif "‡πÑ‡∏ß‡∏£‡∏±‡∏™" == msg.text.lower():
                    line.sendMessage(to, "‡∏´‡∏¢‡∏∏‡∏î ‡∏Ç‡∏≠‡πÉ‡∏´‡πâ‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ô‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏á‡∏ö")
                    line.sendContact(to, "u85f20b0f0f3530349275159332f74882',")
                elif "‡∏ó‡∏µ‡∏°‡∏ö‡∏≠‡∏ó" == msg.text.lower():
                    msg.contentType = 13
                    line.sendMessage(to, "ADMIN \n (ÔΩ°‚óï‚Äø‚óïÔΩ°)")
                    line.sendContact(to, "u85f20b0f0f3530349275159332f74882")
#==============================================================================#
                elif text.lower() == '‡πÄ‡∏ä‡πá‡∏Ñ':
                    try:
                        ret_ = "‚ïî‚ïê‚ïê‚ïê‚ïê[ ‚ùã‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‚ùã ]‚ïê‚ïê‚ïê‚ïê‚ïê‚îì"
                        if settings["autoAdd"] == True: ret_ += "\n‚ï†‚ùã ‡∏≠‡∏≠‡πÇ‡∏ï‡πâ‡∏ö‡∏•‡πá‡∏≠‡∏Ñ‡πÄ‡∏õ‡∏¥‡∏î ‚úî"
                        else: ret_ += "\n‚ï†‚ùã ‡∏≠‡∏≠‡πÇ‡∏ï‡πâ‡∏ö‡∏•‡πá‡∏≠‡∏Ñ‡∏õ‡∏¥‡∏î   ‚úò "
                        if settings["autoJoinTicket"] == True: ret_ += "\n‚ï†‚ùã ‡∏°‡∏∏‡∏î‡∏•‡∏¥‡πâ‡∏á‡πÄ‡∏õ‡∏¥‡∏î ‚úî"
                        else: ret_ += "\n‚ï†‚ùã ‡∏°‡∏∏‡∏î‡∏•‡∏¥‡πâ‡∏á‡∏õ‡∏¥‡∏î ‚úò "
                        if settings["autoJoin"] == True: ret_ += "\n‚ï†‚ùã ‡πÄ‡∏Ç‡πâ‡∏≤‡∏Å‡∏•‡∏∏‡πà‡∏°‡∏≠‡∏≠‡πÇ‡∏ï‡πâ‡πÄ‡∏õ‡∏¥‡∏î ‚úî"
                        else: ret_ += "\n‚ï†‚ùã ‡πÄ‡∏Ç‡πâ‡∏≤‡∏Å‡∏•‡∏∏‡πà‡∏°‡∏≠‡∏≠‡πÇ‡∏ï‡πâ‡∏õ‡∏¥‡∏î ‚úò "
                        if settings["Api"] == True: ret_ += "\n‚ï†‚ùã ‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°Api‡πÄ‡∏õ‡∏¥‡∏î ‚úî"
                        else: ret_ += "\n‚ï†‚ùã ‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°Api‡∏õ‡∏¥‡∏î ‚úò "
                        if settings["Aip"] == True: ret_ += "\n‚ï†‚ùã ‡∏ï‡∏£‡∏ß‡∏à‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ö‡∏¥‡∏ô‡πÄ‡∏õ‡∏¥‡∏î‚úî"
                        else: ret_ += "\n‚ï†‚ùã ‡∏ï‡∏£‡∏ß‡∏à‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ö‡∏¥‡∏ô‡∏õ‡∏¥‡∏î ‚úò "
                        if settings["Wc"] == True: ret_ += "\n‚ï†‚ùã ‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ï‡πâ‡∏≠‡∏ô‡∏£‡∏±‡∏ö‡πÄ‡∏õ‡∏¥‡∏î ‚úî"
                        else: ret_ += "\n‚ï†‚ùã ‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ï‡πâ‡∏≠‡∏ô‡∏£‡∏±‡∏ö‡∏õ‡∏¥‡∏î  ‚úò "
                        if settings["Lv"] == True: ret_ += "\n‚ï†‚ùã ‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Ñ‡∏ô‡∏≠‡∏≠‡∏Å‡πÄ‡∏õ‡∏¥‡∏î ‚úî"
                        else: ret_ += "\n‚ï†‚ùã ‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Ñ‡∏ô‡∏≠‡∏≠‡∏Å‡∏õ‡∏¥‡∏î ‚úò "
                        if settings["Nk"] == True: ret_ += "\n‚ï†‚ùã ‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡∏Ñ‡∏ô‡∏•‡∏ö‡πÄ‡∏õ‡∏¥‡∏î ‚úî"
                        else: ret_ += "\n‚ï†‚ùã ‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡∏Ñ‡∏ô‡∏•‡∏ö‡∏õ‡∏¥‡∏î ‚úò "
                        if settings["autoCancel"]["on"] == True:ret_+="\n‚ï†‚ùã ‡∏õ‡∏è‡∏¥‡πÄ‡∏™‡∏ò‡∏Å‡∏•‡∏∏‡πà‡∏°‡πÄ‡∏ä‡∏¥‡∏ç‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å‡∏ï‡πà‡∏≥‡∏Å‡∏ß‡πà‡∏≤: $
                        else: ret_ += "\n‚ï†‚ùã ‡∏õ‡∏è‡∏¥‡πÄ‡∏™‡∏ò‡∏Å‡∏•‡∏∏‡πà‡∏°‡πÄ‡∏ä‡∏¥‡∏ç‡∏õ‡∏¥‡∏î    ‚úò "                                     $
                        if settings["autoLeave"] == True: ret_ += "\n‚ï†‚ùã ‡∏≠‡∏≠‡∏Å‡πÅ‡∏ä‡∏ó‡∏£‡∏ß‡∏°‡∏≠‡∏≠‡πÇ‡∏ï‡πâ‡πÄ‡∏õ‡∏¥‡∏î‚úî"
                        else: ret_ += "\n‚ï†‚ùã ‡∏≠‡∏≠‡∏Å‡πÅ‡∏ä‡∏ó‡∏£‡∏ß‡∏°‡∏≠‡∏≠‡πÇ‡∏ï‡πâ‡∏õ‡∏¥‡∏î ‚úò "
                        if settings["autoRead"] == True: ret_ += "\n‚ï†‚ùã ‡∏≠‡πà‡∏≤‡∏ô‡∏≠‡∏≠‡πÇ‡∏ï‡πâ‡πÄ‡∏õ‡∏¥‡∏î ‚úî"
                        else: ret_ += "\n‚ï†‚ùã ‡∏≠‡πà‡∏≤‡∏ô‡∏≠‡∏≠‡πÇ‡∏ï‡πâ‡∏õ‡∏¥‡∏î ‚úò "
                        if settings["checkContact"] == True: ret_ += "\n‚ï†‚ùã ‡∏≠‡πà‡∏≤‡∏ô‡∏Ñ‡∏ó‡πÄ‡∏õ‡∏¥‡∏î ‚úî"
                        else: ret_ += "\n‚ï†‚ùã ‡∏≠‡πà‡∏≤‡∏ô‡∏Ñ‡∏ó‡∏õ‡∏¥‡∏î   ‚úò "
                        if settings["checkPost"] == True: ret_ += "\n‚ï†‚ùã ‡πÄ‡∏ä‡πá‡∏Ñ‡πÇ‡∏û‡∏™‡πÄ‡∏õ‡∏¥‡∏î ‚úî"
                        else: ret_ += "\n‚ï†‚ùã ‡πÄ‡∏ä‡πá‡∏Ñ‡πÇ‡∏û‡∏™‡∏õ‡∏¥‡∏î    ‚úò "
                        if settings["checkSticker"] == True: ret_ += "\n‚ï†‚ùã ‡πÄ‡∏ä‡πá‡∏ÑSticker‡πÄ‡∏õ‡∏¥‡∏î ‚úî"
                        else: ret_ += "\n‚ï†‚ùã ‡πÄ‡∏ä‡πá‡∏ÑSticker‡∏õ‡∏¥‡∏î  ‚úò "
                        if settings["detectMention"] == True: ret_ += "\n‚ï†‚ùã ‡∏ï‡∏≠‡∏ö‡∏Å‡∏•‡∏±‡∏ö‡∏Ñ‡∏ô‡πÅ‡∏ó‡∏Ñ‡πÄ‡∏õ‡∏¥‡∏î ‚úî"
                        else: ret_ += "\n‚ï†‚ùã ‡∏ï‡∏≠‡∏ö‡∏Å‡∏•‡∏±‡∏ö‡∏Ñ‡∏ô‡πÅ‡∏ó‡∏Ñ‡∏õ‡∏¥‡∏î ‚úò "
                        if settings["potoMention"] == True: ret_ += "\n‚ï†‚ùã ‡πÅ‡∏™‡∏î‡∏á‡∏†‡∏≤‡∏û+‡∏Ñ‡∏ó ‡∏Ñ‡∏ô‡πÅ‡∏ó‡∏Ñ‡πÄ‡∏õ‡∏¥‡∏î ‚úî"
else: ret_ += "\n‚ï†‚ùã ‡πÅ‡∏ó‡∏Ñ‡∏Å‡∏•‡∏±‡∏ö‡∏Ñ‡∏ô‡πÅ‡∏ó‡∏Ñ‡∏õ‡∏¥‡∏î ‚úò "
                        if RfuProtect["inviteprotect"] == True: ret_ += "\n‚ï†‚ùã ‡∏Å‡∏±‡∏ô‡πÄ‡∏ä‡∏¥‡∏ç‡πÄ‡∏õ‡∏¥‡∏î ‚úî"
                        else: ret_ += "\n‚ï†‚ùã ‡∏Å‡∏±‡∏ô‡πÄ‡∏ä‡∏¥‡∏ç‡∏õ‡∏¥‡∏î ‚úò "
                        if RfuProtect["cancelprotect"] == True: ret_ += "\n‚ï†‚ùã ‡∏Å‡∏±‡∏ô‡∏¢‡∏Å‡πÄ‡∏ä‡∏¥‡∏ç‡πÄ‡∏õ‡∏¥‡∏î ‚úî"
                        else: ret_ += "\n‚ï†‚ùã ‡∏Å‡∏±‡∏ô‡∏¢‡∏Å‡πÄ‡∏ä‡∏¥‡∏ç‡∏õ‡∏¥‡∏î ‚úò "
                        if RfuProtect["protect"] == True: ret_ += "\n‚ï†‚ùã ‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô‡πÄ‡∏õ‡∏¥‡∏î ‚úî"
                        else: ret_ += "\n‚ï†‚ùã ‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô‡∏õ‡∏¥‡∏î ‚úò "
                        if RfuProtect["linkprotect"] == True: ret_ += "\n‚ï†‚ùã ‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô‡πÄ‡∏õ‡∏¥‡∏î‡∏•‡∏¥‡πâ‡∏á‡πÄ‡∏õ‡∏¥‡∏î ‚úî"
                        else: ret_ += "\n‚ï†‚ùã ‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô‡πÄ‡∏õ‡∏¥‡∏î‡∏•‡∏¥‡πâ‡∏á‡∏õ‡∏¥‡∏î ‚úò "
                        if RfuProtect["Protectguest"] == True: ret_ += "\n‚ï†‚ùã ‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å‡πÄ‡∏õ‡∏¥‡∏î ‚úî"
                        else: ret_ += "\n‚ï†‚ùã ‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å‡∏õ‡∏¥‡∏î ‚úò "
                        if RfuProtect["Protectjoin"] == True: ret_ += "\n‚ï†‚ùã ‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô‡∏Ñ‡∏ô‡∏ô‡∏≠‡∏Å‡πÄ‡∏Ç‡πâ‡∏≤‡∏Å‡∏•‡∏∏‡πà‡∏° ‚úî"
                        else: ret_ += "\n‚ï†‚ùã ‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô‡∏Ñ‡∏ô‡∏ô‡∏ô‡∏≠‡∏Å‡πÄ‡∏Ç‡πâ‡∏≤‡∏Å‡∏•‡∏∏‡πà‡∏° ‚úò "                                    $
                        ret_ += "\n‚ïö‚ïê‚ïê‚ïê‚ïê[ ‚û¢‚ùç‡Æ™Í™îüîù ]‚ïê‚ïê‚ïê‚ïê‚ïê‚îõ"
                        line.sendMessage(to, str(ret_))
                    except Exception as e:
                        line.sendMessage(msg.to, str(e))
                elif text.lower() == 'b on':
                    settings["autoAdd"] = True
                    line.sendMessage(to, "‚ù•‡πÄ‡∏õ‡∏¥‡∏î‡πÑ‡∏ä‡πâ‡∏á‡∏≤‡∏ô ‡∏≠‡∏≠‡πÇ‡∏ï‡πâ‡∏ö‡∏•‡πá‡∏≠‡∏Ñ ‚ùã")
                elif text.lower() == 'b off':
                    settings["autoAdd"] = False
                    line.sendMessage(to, "‚ù•‡∏õ‡∏¥‡∏î ‡∏≠‡∏≠‡πÇ‡∏ï‡πâ‡∏ö‡∏•‡πá‡∏≠‡∏Ñ ‚ùã")
                elif text.lower() == '‡πÄ‡∏õ‡∏¥‡∏î‡πÄ‡∏Ç‡πâ‡∏≤':
                    settings["autoJoin"] = True
                    line.sendMessage(to, "‚ù•‡πÄ‡∏õ‡∏¥‡∏î‡πÄ‡∏Ç‡πâ‡∏≤‡∏Å‡∏•‡∏∏‡πà‡∏°‡∏≠‡∏≠‡πÇ‡∏ï‡πâ ‚ùã")
                elif text.lower() == '‡∏õ‡∏¥‡∏î‡πÄ‡∏Ç‡πâ‡∏≤':
                    settings["autoJoin"] = False
                    line.sendMessage(to, "‚ù•‡∏õ‡∏¥‡∏î‡πÄ‡∏Ç‡πâ‡∏≤‡∏Å‡∏•‡∏∏‡πà‡∏°‡∏≠‡∏≠‡πÇ‡∏ï‡πâ ‚ùã")
                elif "gcancel:" in msg.text:
                    try:
                        strnum = msg.text.replace("gcancel:","")
                        if strnum == "off":
                                settings["autoCancel"]["on"] = False
                                if settings["lang"] == "JP":
                                    line.sendText(msg.to,str(settings["eror"]))
                                else:
                                    line.sendText(msg.to,"ÂÖ≥‰∫ÜÈÇÄËØ∑ÊãíÁªù„ÄÇË¶ÅÊó∂ÂºÄËØ∑ÊåáÂÆö‰∫∫Êï∞ÂèëÈÄÅ")
                        else:
                                num =  int(strnum)
                                settings["autoCancel"]["on"] = True
                                if settings["lang"] == "JP":
                                    line.sendText(msg.to, " ‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å‡πÉ‡∏ô‡∏Å‡∏•‡∏∏‡πà‡∏°‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡∏ñ‡∏∂‡∏á" + strnum + "‡∏à‡∏∞‡∏ñ‡∏π‡∏Å‡∏õ‡∏è‡∏¥‡πÄ‡∏™‡∏ò‡∏Ñ‡∏≥‡πÄ$
                                else:
                                    line.sendText(msg.to,strnum + "‰Ωø‰∫∫‰ª•‰∏ãÁöÑÂ∞èÁªÑÁî®Ëá™Âä®ÈÇÄËØ∑ÊãíÁªù")
                    except:
                        if settings["lang"] == "JP":
                                line.sendText(msg.to,str(settings["eror"]))
                        else:
                                line.sendText(msg.to,"Bizarre ratings")                              $
                elif text.lower() == '‡πÅ‡∏ä‡∏ó on':
                    settings["autoLeave"] = Truesettings["autoLeave"] = True
                    line.sendMessage(to, "‚ù•‡∏≠‡∏≠‡∏Å‡πÅ‡∏ä‡∏ó‡∏£‡∏ß‡∏°‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥ ‚ùã")
                elif text.lower() == '‡πÅ‡∏ä‡∏ó off':
                    settings["autoLeave"] = False
                    line.sendMessage(to, "‚ù•‡∏õ‡∏¥‡∏î‡∏≠‡∏≠‡∏Å‡πÅ‡∏ä‡∏ó‡∏£‡∏ß‡∏° ‚ùã")
                elif text.lower() == '‡∏≠‡πà‡∏≤‡∏ô on':
                    settings["autoRead"] = True
                    line.sendMessage(to, "‚ù•‡∏≠‡πà‡∏≤‡∏ô‡πÅ‡∏ä‡∏ó ‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥ ‚ùã")
                elif text.lower() == '‡∏≠‡πà‡∏≤‡∏ô off':
                    settings["autoRead"] = False
                    line.sendMessage(to, "‚ù•‡∏õ‡∏¥‡∏î‡∏≠‡πà‡∏≤‡∏ô‡πÅ‡∏ä‡∏ó‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥ ‚ùã")
                elif text.lower() == '‡∏ï‡∏¥‡πâ‡∏Å on':
                    settings["checkSticker"] = True
                    line.sendMessage(to, "‚ù•‡πÄ‡∏õ‡∏¥‡∏î‡∏£‡∏∞‡∏ö‡∏ö‡πÄ‡∏ä‡πá‡∏Ñ‡∏™‡∏ï‡∏¥‡πâ‡∏Å‡πÄ‡∏Å‡∏≠‡∏£‡πå ‚ùã")
                elif text.lower() == '‡∏ï‡∏¥‡πâ‡∏Å off':
                    settings["checkSticker"] = False
                    line.sendMessage(to, "‚ù•‡∏õ‡∏¥‡∏î‡∏£‡∏∞‡∏ö‡∏ö‡πÄ‡∏ä‡πá‡∏Ñ‡∏™‡∏ï‡∏¥‡πâ‡∏Å‡πÄ‡∏Å‡∏≠‡∏£‡πå ‚ùã")
                elif text.lower() == '‡πÄ‡∏õ‡∏¥‡∏î‡∏°‡∏∏‡∏î':
                    settings["autoJoinTicket"] = True
                    line.sendMessage(to, "‚ù•‡πÄ‡∏õ‡∏¥‡∏î‡∏£‡∏∞‡∏ö‡∏ö‡∏°‡∏∏‡∏î‡∏•‡∏¥‡πâ‡∏á ‚ùã")
                elif text.lower() == '‡∏õ‡∏¥‡∏î‡∏°‡∏∏‡∏î':
                    settings["autoJoinTicket"] = False
                    line.sendMessage(to, "‚ù•‡∏õ‡∏¥‡∏î‡∏£‡∏∞‡∏ö‡∏ö‡∏°‡∏∏‡∏î‡∏•‡∏¥‡πâ‡∏á ‚ùã")
                elif text.lower() == '‡πÄ‡∏õ‡∏¥‡∏î‡πÄ‡∏™‡∏∑‡∏≠‡∏Å':
                    settings["unsendMessage"] = True
                    line.sendMessage(to, "‚ù•unsendMessage  enabled ‚ùã")
                elif text.lower() == '‡∏õ‡∏¥‡∏î‡πÄ‡∏™‡∏∑‡∏≠‡∏Å':
                    settings["unsendMessage"] = False
                    line.sendMessage(to, "‚ù•unsendMessage disabled ‚ùã")
#==============================================================================#
                elif text.lower() == '‡∏Ñ‡∏ó':
                    sendMessageWithMention(to, lineMID)
                    line.sendContact(to, lineMID)
                elif text.lower() == 'me':
                    sendMessageWithMention(to, lineMID)
                    line.sendContact(to, lineMID)
                elif text.lower() == '‡∏ú‡∏™':
                    sendMessageWithMention(to, lineMID)
                    line.sendContact(to, "u0035a5a6c5ae9d30c9a0992ecbc39395")
                elif text.lower() == 'mid':
                    line.sendMessage(msg.to,"‚ù•MID‚ùãüëá\n\n" +  lineMID)
                elif text.lower() == '‡∏ä‡∏∑‡πà‡∏≠':
                    me = line.getContact(lineMID)
                    line.sendMessage(msg.to,"‚ù•‡∏ä‡∏∑‡πà‡∏≠‡∏Ñ‡∏∏‡∏ì‚ùãüëá\n\n" + me.displayName)
                elif text.lower() == '‡∏ï‡∏±‡∏™':
                    me = line.getContact(lineMID)
                    line.sendMessage(msg.to,"‚ù•‡∏™‡πÄ‡∏ï‡∏ï‡∏±‡∏™‚ùãüëá\n\n" + me.statusMessage)
                elif text.lower() == '‡∏£‡∏π‡∏õ':
                    me = line.getContact(lineMID)
                    line.sendImageWithURL(msg.to,"http://dl.profile.line-cdn.net/" + me.pictureStatus)
                elif text.lower() == '‡∏ß‡∏µ‡∏î‡∏µ‡πÇ‡∏≠':
                    me = line.getContact(lineMID)
                    line.sendVideoWithURL(msg.to,"http://dl.profile.line-cdn.net/" + me.pictureStatus$
                elif text.lower() == '‡∏õ‡∏Å':
                    me = line.getContact(lineMID)
                    cover = line.getProfileCoverURL(lineMID)
                    line.sendImageWithURL(msg.to, cover)
                elif text.lower() == '‡∏Ñ‡∏≠‡∏°‡πÄ‡∏°‡πâ‡∏ô':
                    line.sendMessage(msg.to,str(settings["comment"]))
                elif text.lower() == '‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏Ç‡πâ‡∏≤':
                    line.sendMessage(msg.to, str(settings["welcome"]))
                elif text.lower() == '‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏≠‡∏≠‡∏Å':
                    line.sendMessage(msg.to, str(settings["bye"]))
                elif text.lower() == '‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏ï‡∏∞':
                    line.sendMessage(msg.to, str(settings["kick"]))
                elif text.lower() == '‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÅ‡∏≠‡∏î':
                    line.sendMessage(msg.to, str(settings["message"]))
                elif text.lower() == '‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÅ‡∏≠‡∏î2':
                    line.sendMessage(msg.to, str(settings["message1"]))
                elif text.lower() == '‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÅ‡∏ó‡∏Ñ':
                    line.sendMessage(msg.to, str(settings["Respontag"]))
                elif text.lower() == '‡πÅ‡∏ó‡∏Ñ‡∏•‡πà‡∏≠‡∏á‡∏´‡∏ô':
                    gs = line.getGroup(to)
                    targets = []                
		    for g in gs.members:
                        if g.displayName in "":
                            targets.append(g.mid)
                    if targets == []:
                        line.sendMessage(to, "‚ù•‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ñ‡∏ô‡πÉ‡∏™‡πà‡∏£‡πà‡∏≠‡∏á‡∏´‡∏ô‡πÉ‡∏ô‡∏Å‡∏•‡∏∏‡πà‡∏°‡∏ô‡∏µ‡πâ ‚ùã")
                    else:
                        mc = ""
                        for target in targets:
                            mc += sendMessageWithMention(to,target) + "\n"
                        line.sendMessage(to, mc)
                elif text.lower() == '‡πÑ‡∏≠‡∏î‡∏µ‡∏•‡πà‡∏≠‡∏á‡∏´‡∏ô':
                    gs = line.getGroup(to)
                    lists = []
                    for g in gs.members:
                        if g.displayName in "":
                            lists.append(g.mid)
                    if lists == []:
                        line.sendMessage(to, "‚ù•‡πÑ‡∏°‡πà‡∏°‡∏µmid‡∏Ñ‡∏ô‡πÉ‡∏™‡πà‡∏£‡πà‡∏≠‡∏á‡∏´‡∏ô‡πÉ‡∏ô‡∏Å‡∏•‡∏∏‡πà‡∏°‡∏ô‡∏µ‡πâ ‚ùã")
                    else:
                        mc = ""
                        for mi_d in lists:
                            mc += "->" + mi_d + "\n"
                        line.sendMessage(to,mc)
                elif text.lower() == '‡∏Ñ‡∏ó‡∏•‡πà‡∏≠‡∏á‡∏´‡∏ô':
                    gs = line.getGroup(to)
                    lists = []
                    for g in gs.members:
                        if g.displayName in "":
                            lists.append(g.mid)
                    if lists == []:
                        line.sendMessage(to, "‚ù•‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ñ‡∏ô‡πÉ‡∏™‡πà‡∏£‡πà‡∏≠‡∏á‡∏´‡∏ô‡πÉ‡∏ô‡∏Å‡∏•‡∏∏‡πà‡∏°‡∏ô‡∏µ‡πâ ‚ùã")
                    else:
                        for ls in lists:
                            contact = line.getContact(ls)
                            mi_d = contact.mid
                            line.sendContact(to, mi_d)
                elif msg.text.lower().startswith("‡∏Ñ‡∏ó "):
                    if 'MENTION' in list(msg.contentMetadata.keys())!= None:
                        names = re.findall(r'@(\w+)', text)
                        mention = ast.literal_eval(msg.contentMetadata['MENTION'])
                        mentionees = mention['MENTIONEES']
                        lists = []
                        for mention in mentionees:
                            if mention["M"] not in lists:
                                lists.append(mention["M"])
                        for ls in lists:
                            contact = line.getContact(ls)
                            mi_d = contact.mid
                            line.sendContact(msg.to, mi_d)
                elif msg.text.lower().startswith("‡πÑ‡∏≠‡∏î‡∏µ "):
                    if 'MENTION' in list(msg.contentMetadata.keys())!= None:
                       names = re.findall(r'@(\w+)', text)
                        mention = ast.literal_eval(msg.contentMetadata['MENTION'])
                        mentionees = mention['MENTIONEES']
                        lists = []
                        for mention in mentionees:
                            if mention["M"] not in lists:
                                lists.append(mention["M"])
                        ret_ = "[ ‚ù•Mid User‚ùã ]"
                        for ls in lists:
                            ret_ += "\n{}" + ls
                        line.sendMessage(msg.to, str(ret_))
                elif msg.text.lower().startswith("‡∏ä‡∏∑‡πà‡∏≠ "):
                    if 'MENTION' in list(msg.contentMetadata.keys())!= None:
                        names = re.findall(r'@(\w+)', text)
                        mention = ast.literal_eval(msg.contentMetadata['MENTION'])
                        mentionees = mention['MENTIONEES']
                        lists = []
                        for mention in mentionees:
                            if mention["M"] not in lists:
                                lists.append(mention["M"])
                        for ls in lists:
                            contact = line.getContact(ls)
                            line.sendMessage(msg.to, "[ ‚ù•Display Name‚ùã ]\n" + contact.displayName)
                elif msg.text.lower().startswith("‡∏ï‡∏±‡∏™ "):
                    if 'MENTION' in list(msg.contentMetadata.keys())!= None:
                        names = re.findall(r'@(\w+)', text)
                        mention = ast.literal_eval(msg.contentMetadata['MENTION'])
                        mentionees = mention['MENTIONEES']
                        lists = []
                        for mention in mentionees:
                            if mention["M"] not in lists:
                                lists.append(mention["M"])
                        for ls in lists:
                            contact = line.getContact(ls)
                            line.sendMessage(msg.to, "[ ‚ù• ‡∏™‡πÄ‡∏ï‡∏ï‡∏±‡∏™ ‚ùã ]\n{}" + contact.statusMessage)
     		elif msg.text.lower().startswith("‡∏£‡∏π‡∏õ "):
                    if 'MENTION' in list(msg.contentMetadata.keys())!= None:
                        names = re.findall(r'@(\w+)', text)
                        mention = ast.literal_eval(msg.contentMetadata['MENTION'])
                        mentionees = mention['MENTIONEES']
                        lists = []
                        for mention in mentionees:
                            if mention["M"] not in lists:
                                lists.append(mention["M"])
                        for ls in lists:
                            path = "http://dl.profile.line.naver.jp/" + line.getContact(ls).pictureSt$
                            line.sendImageWithURL(msg.to, str(path))
                elif msg.text.lower().startswith("‡∏ß‡∏µ‡∏î‡∏µ‡πÇ‡∏≠ "):
                    if 'MENTION' in list(msg.contentMetadata.keys())!= None:
                        names = re.findall(r'@(\w+)', text)
                        mention = ast.literal_eval(msg.contentMetadata['MENTION'])
                        mentionees = mention['MENTIONEES']
                        lists = []
                        for mention in mentionees:
                            if mention["M"] not in lists:
                                lists.append(mention["M"])
                        for ls in lists:
                            path = "http://dl.profile.line.naver.jp/" + line.getContact(ls).pictureSt$
                            line.sendImageWithURL(msg.to, str(path))
		elif msg.text.lower().startswith("‡∏õ‡∏Å "):
                    if line != None:
                        if 'MENTION' in list(msg.contentMetadata.keys())!= None:
                            names = re.findall(r'@(\w+)', text)
                            mention = ast.literal_eval(msg.contentMetadata['MENTION'])
                            mentionees = mention['MENTIONEES']
                            lists = []
                            for mention in mentionees:
                                if mention["M"] not in lists:
                                    lists.append(mention["M"])
                            for ls in lists:
                                path = line.getProfileCoverURL(ls)
                                line.sendImageWithURL(msg.to, str(path))
#==========================================
		elif msg.text.lower().startswith("‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• "):
                    if 'MENTION' in msg.contentMetadata.keys()!= None:
                        names = re.findall(r'@(\w+)', text)
                        mention = ast.literal_eval(msg.contentMetadata['MENTION'])
                        mentionees = mention['MENTIONEES']
                        lists = []
                        for mention in mentionees:
                            if mention["M"] not in lists:
                                lists.append(mention["M"])
                        for ls in lists:
                            contact = line.getContact(ls)
                            line.sendMessage(msg.to, contact.displayName)
                        for mention in mentionees:
                            if mention["M"] not in lists:
                                lists.append(mention["M"])
                            contact = line.getContact(ls)
                            line.sendMessage(msg.to, contact.statusMessage)
                        for mention in mentionees:
                            if mention["M"] not in lists:
                                lists.append(mention["M"])
                        ret_ = ">"
                        for ls in lists:
                            ret_ += ls
                        line.sendMessage(msg.to, str(ret_))
                        for mention in mentionees:
                            if mention["M"] not in lists:
                                lists.append(mention["M"])
                        for ls in lists:
                            path = "http://dl.profile.line-cdn.net/" + line.getContact(ls).pictureStatus
                            line.sendImageWithURL(msg.to, str(path))
		
		elif "‡πÇ‡∏û‡∏™ " in msg.text:
                    tl_text = msg.text.replace("‡πÇ‡∏û‡∏™ ","")
                    line.sendText(msg.to,"line://home/post?userMid="+lineMID+"&postId="+line.new_pos
t(tl_text)["result"]["post"]["postInfo"]["postId"])
                elif "copy " in msg.text:
                  if msg._from in admin:
                    targets = []
                    key = eval(msg.contentMetadata["MENTION"])
                    key["MENTIONEES"][0]["M"]
                    for x in key["MENTIONEES"]:
                            targets.append(x["M"])
                    for target in targets:
                        try:
                            contact = line.getContact(target)
                            X = contact.displayName
                            profile = line.getProfile()
                            profile.displayName = X
                            line.updateProfile(profile)
                            line.sendMessage(msg.to, "Success...")
                        #---------------------------------------
                            Y = contact.statusMessage
                            lol = line.getProfile()
                            lol.statusMessage = Y
                            line.updateProfile(lol)
                        #---------------------------------------
                            P = contact.pictureStatus
                            hun = line.getProfile()
                            hun.pictureStatus = P
                            line.updateProfile(hun)
                        except Exception as e:
                            line.sendMessage(msg.to, "Failed!")
                            print (e)

		elif msg.text in ["‡∏Ñ‡∏∑‡∏ô‡∏£‡πà‡∏≤‡∏á"]:
                    try:
                        #line.updateProfile.pictureStatus(backup.pictureStatus)
                        line.updateProfile.statusMessage(backup.statusMessage)
                        line.updateProfile.displayName(backup.displayName)
                        line.sendMessage(msg.to, "‡∏Å‡∏•‡∏±‡∏ö‡∏£‡πà‡∏≤‡∏á‡πÄ‡∏î‡∏¥‡∏°‡πÅ‡∏•‡πâ‡∏ß")
                    except Exception as e:
                        line.sendText(msg.to, str (e))

                elif msg.text in ["allprotect on",".‡πÄ‡∏õ‡∏¥‡∏î‡∏Å‡∏ó‡∏°"]:
                        settings["kickMention"] = True
                        settings["Aip"] = False
                        RfuProtect["protect"] = True
                        RfuProtect["cancelprotect"] = True
                        RfuProtect["inviteprotect"] = True
                        RfuProtect["linkprotect"] = True
                        RfuProtect["Protectguest"] = True
                        RfuProtect["Protectjoin"] = True
                        line.sendText(msg.to,"‚ù•‡∏£‡∏∞‡∏ö‡∏ö‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡πÄ‡∏õ‡∏¥‡∏î ‚ùã")

                elif msg.text in ["allprotect off",".‡∏õ‡∏¥‡∏î‡∏Å‡∏ó‡∏°"]:
                        settings["kickMention"] = False
                        settings["Aip"] = False
                        RfuProtect["protect"] = False
                        RfuProtect["cancelprotect"] = False
                        RfuProtect["inviteprotect"] = False
                        RfuProtect["linkprotect"] = False
                        RfuProtect["Protectguest"] = False
                        RfuProtect["Protectjoin"] = False
                        line.sendText(msg.to,"‚ù•‡∏£‡∏∞‡∏ö‡∏ö‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡∏õ‡∏¥‡∏î ‚ùã")
		
		elif msg.text in ["Allmsg on",".‡πÄ‡∏õ‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°"]:
                        settings["Wc"] = True
                        settings["Lv"] = True
                        settings["Nk"] = True
                        settings["autoRead"] = True
                        settings["checkSticker"] = True
                        settings["checkContact"] = True
                        settings["checkPost"] = True
                        settings["potoMention"] = True
                        settings["detectMention"] = True
                        settings["delayMention"] = True
                        settings["Api"] = True
                        line.sendText(msg.to,"‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏ä‡∏∏‡∏î‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î ‡πÄ‡∏õ‡∏¥‡∏îüëå")

                elif msg.text in ["Allmsg off",".‡∏õ‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°"]:
                        settings["Wc"] = False
                        settings["Lv"] = False
                        settings["Nk"] = False
                        settings["autoRead"] = True
                        settings["checkSticker"] = False
                        settings["checkContact"] = False
                        settings["checkPost"] = False
                        settings["detectMention"] = False
                        settings["potoMention"] = False
                        settings["delayMention"] = False
                        settings["Api"] = False
                        line.sendText(msg.to,"‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏ä‡∏∏‡∏î‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î ‡∏õ‡∏¥‡∏îüëå")
#==============================================================================#
		elif msg.text.lower().startswith("‡πÄ‡∏•‡∏µ‡∏¢‡∏ô‡πÅ‡∏ö‡∏ö "):
                    targets = []
                    key = eval(msg.contentMetadata["MENTION"])
                    key["MENTIONEES"][0]["M"]
                    for x in key["MENTIONEES"]:
                        targets.append(x["M"])
                    for target in targets:
                        try:
                            settings["mimic"]["target"][target] = True
                            line.sendMessage(msg.to,"‚ù•‡πÄ‡∏•‡∏µ‡∏¢‡∏ô‡πÅ‡∏ö‡∏ö ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à ‚ùã")
                            break
                        except:
                            line.sendMessage(msg.to,"‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î!")
                            break
                elif msg.text.lower().startswith("‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å "):
                    targets = []
                    key = eval(msg.contentMetadata["MENTION"])
                    key["MENTIONEES"][0]["M"]
                    for x in key["MENTIONEES"]:
                        targets.append(x["M"])
                    for target in targets:
                        try:
                            del settings["mimic"]["target"][target]
                            line.sendMessage(msg.to,"‚ù•‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å‡∏Å‡∏≤‡∏£‡πÄ‡∏•‡∏µ‡∏¢‡∏ô‡πÅ‡∏ö‡∏ö ‚ùã")
                            break
                        except:
                            line.sendMessage(msg.to,"‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î !!")
                            break
                elif text.lower() == '‡πÄ‡∏ä‡∏Ñ‡πÄ‡∏•‡∏µ‡∏¢‡∏ô‡πÅ‡∏ö‡∏ö':
                    if settings["mimic"]["target"] == {}:
                        line.sendMessage(msg.to,"‚ù• ‡πÑ‡∏°‡πà‡∏û‡∏ö ‚ùã")
                    else:
                        mc = "‚ïî‚ïê‚ïê[ ‡∏•‡∏¥‡∏™‡∏Å‡∏≤‡∏£‡πÄ‡∏•‡∏µ‡∏¢‡∏ô‡πÅ‡∏ö‡∏ö ]"
		        for mi_d in settings["mimic"]["target"]:
                            mc += "\n‚ï† "+line.getContact(mi_d).displayName
                        line.sendMessage(msg.to,mc + "\n‚ïö‚ïê‚ïê[ V“ú ≈ö·∫æL‚Ç£–íŒå≈¶ ]")

                elif "nutmic" in msg.text.lower():
                    sep = text.split(" ")
                    mic = text.replace(sep[0] + " ","")
                    if mic == "on":
                        if settings["mimic"]["status"] == False:
                            settings["mimic"]["status"] = True
                            line.sendMessage(msg.to,"‚ù•‡∏£‡∏∞‡∏ö‡∏ö‡πÄ‡∏•‡∏µ‡∏¢‡∏ô‡πÅ‡∏ö‡∏ö‡∏ó‡∏≥‡∏á‡∏≤‡∏ô ‚ùã")
                    elif mic == "off":
                        if settings["mimic"]["status"] == True:
                            settings["mimic"]["status"] = False
                            line.sendMessage(msg.to,"‚ù•‡∏õ‡∏¥‡∏î‡∏£‡∏∞‡∏ö‡∏ö‡πÄ‡∏•‡∏µ‡∏¢‡∏ô‡πÅ‡∏ö‡∏ö ‚ùã")

		elif "Spam " in msg.text:
                    txt = msg.text.split(" ")
                    jmlh = int(txt[2])
                    teks = msg.text.replace("Spam "+str(txt[1])+" "+str(jmlh)+" ","")
                    tulisan = jmlh * (teks+"\n")
                    if txt[1] == "on":
                        if jmlh <= 100000:
                           for x in range(jmlh):
                               line.sendMessage(msg.to, teks)
                        else:
                           line.sendMessage(msg.to, "Out of Range!")
                    elif txt[1] == "off":
                        if jmlh <= 100000:
                            line.sendMessage(msg.to, tulisan)
                        else:
                            line.sendMessage(msg.to, "Out Of Range!")
#==============================================================================#
                elif text.lower() == '‡πÅ‡∏≠‡∏î':
                    group = line.getGroup(to)
                    GS = group.creator.mid
                    line.sendContact(to, GS)
                    line.sendMessage(to, "‚ù•‡∏ú‡∏π‡πâ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Å‡∏•‡∏∏‡πà‡∏°‡∏ô‡∏µ‡πâ ‚ùã")
                elif text.lower() == '‡πÑ‡∏≠‡∏î‡∏µ‡∏Å‡∏•‡∏∏‡πà‡∏°':
                    gid = line.getGroup(to)
                    line.sendMessage(to, "‚ù•‡πÑ‡∏≠‡∏î‡∏µ‡∏Å‡∏•‡∏∏‡πà‡∏°‚ùã \n\n" + gid.id)
                elif text.lower() == '‡∏£‡∏π‡∏õ‡∏Å‡∏•‡∏∏‡πà‡∏°':
                    group = line.getGroup(to)
                    path = "http://dl.profile.line-cdn.net/" + group.pictureStatus
                    line.sendImageWithURL(to, path)
                elif text.lower() == '‡∏ä‡∏∑‡πà‡∏≠‡∏Å‡∏•‡∏∏‡πà‡∏°':
                    gid = line.getGroup(to)
		    line.sendMessage(to, "‚ù•‡∏ä‡∏∑‡πà‡∏≠‡∏Å‡∏•‡∏∏‡πà‡∏° ‚ùã \n\n" + gid.name)
                elif text.lower() == '‡∏•‡∏¥‡πâ‡∏á':
                    if msg.toType == 2:
                        group = line.getGroup(to)
                        if group.preventedJoinByTicket == False:
                            ticket = line.reissueGroupTicket(to)
                            line.sendMessage(to, "‚ù•‡∏•‡∏¥‡πâ‡∏á‡∏Ç‡∏≠‡∏á‡∏Å‡∏•‡∏∏‡πà‡∏°‚ùã\nhttps://line.me/R/ti/g/{}".format(str(ticket)))
                elif text.lower() == '‡πÄ‡∏õ‡∏¥‡∏î‡∏•‡∏¥‡πâ‡∏á':
                    if msg.toType == 2:
                        group = line.getGroup(to)
                        if group.preventedJoinByTicket == False:
                            line.sendMessage(to, "‚ù•‡πÄ‡∏õ‡∏¥‡∏î‡∏•‡∏¥‡πâ‡∏á ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à ‚ù•")
                        else:
                            group.preventedJoinByTicket = False
                            line.updateGroup(group)
                            line.sendMessage(to, "‚ù• ‡πÄ‡∏õ‡∏¥‡∏î‡∏•‡∏¥‡πâ‡∏á ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à ‚ùã")
                elif text.lower() == '‡∏õ‡∏¥‡∏î‡∏•‡∏¥‡πâ‡∏á':
                    if msg.toType == 2:
                        group = line.getGroup(to)
                        if group.preventedJoinByTicket == True:
                            line.sendMessage(to, "‚ù•‡∏õ‡∏¥‡∏î‡∏•‡∏¥‡πâ‡∏á ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à ‚ùã")
                        else:
                            group.preventedJoinByTicket = True
                            line.updateGroup(group)
                            line.sendMessage(to, "‚ù•‡∏õ‡∏¥‡∏î‡∏•‡∏¥‡πâ‡∏á ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à ‚ùã")
		elif text.lower() == '‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡∏•‡∏∏‡πà‡∏°':
                    group = line.getGroup(to)
                    try:
                        gCreator = group.creator.displayName
                    except:
                        gCreator = "‡∏Ñ‡∏ô‡∏ô‡∏µ‡πâ‡∏Ñ‡∏∑‡∏≠‡∏ú‡∏π‡πâ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Å‡∏•‡∏∏‡πà‡∏°‡∏ô‡∏µ‡πâ"
                    if group.invitee is None:
                        gPending = "0"
                    else:
                        gPending = str(len(group.invitee))
                    if group.preventedJoinByTicket == True:
                        gQr = "‡∏õ‡∏¥‡∏î"
                        gTicket = "‡πÑ‡∏°‡πà‡∏™‡∏°‡∏≤‡∏£‡∏ñ‡πÅ‡∏™‡∏î‡∏á‡∏•‡∏¥‡πâ‡∏á‡πÑ‡∏î‡πâ"
                    else:
                        gQr = "‡πÄ‡∏õ‡∏¥‡∏î"
                        gTicket = "https://line.me/R/ti/g/{}".format(str(line.reissueGroupTicket(group.id)))
                    path = "http://dl.profile.line-cdn.net/" + group.pictureStatus
                    ret_ = "‚ïî‚ïê‚ïê[‚ù• ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Ç‡∏≠‡∏á‡∏Å‡∏•‡∏∏‡πà‡∏°‡∏ô‡∏µ‡πâ‚ù• ]"
                    ret_ += "\n‚ï† ‚ù•‡∏ä‡∏∑‡πà‡∏≠‡∏Ç‡∏≠‡∏á‡∏Å‡∏•‡∏∏‡πà‡∏°‚ùã : {}".format(str(group.name))
                    ret_ += "\n‚ï† ‚ù•‡πÑ‡∏≠‡∏î‡∏µ‡∏Ç‡∏≠‡∏á‡∏Å‡∏•‡∏∏‡πà‡∏°‚ùã : {}".format(group.id)
                    ret_ += "\n‚ï† ‚ù•‡∏ú‡∏π‡πâ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Å‡∏•‡∏∏‡πà‡∏°‚ùã : {}".format(str(gCreator))
                    ret_ += "\n‚ï† ‚ù•‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å‚ùã : {}".format(str(len(group.members)))
                    ret_ += "\n‚ï† ‚ù•‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏Ñ‡πâ‡∏≤‡∏á‡πÄ‡∏ä‡∏¥‡∏ç‚ùã : {}".format(gPending)
                    ret_ += "\n‚ï† ‚ù•‡∏•‡∏¥‡πâ‡∏á‡∏Ç‡∏≠‡∏á‡∏Å‡∏•‡∏∏‡πà‡∏°‚ùã : {}".format(gQr)
                    ret_ += "\n‚ï† ‚ù•‡∏•‡∏¥‡πâ‡∏á‡∏Å‡∏•‡∏∏‡πà‡∏°‚ùã : {}".format(gTicket)
                    ret_ += "\n‚ïö‚ïê‚ïê[ V“ú ≈ö·∫æL‚Ç£–íŒå≈¶ ]"
                    line.sendMessage(to, str(ret_))
                    line.sendImageWithURL(to, path)
                elif text.lower() == '‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å':
                    if msg.toType == 2:
                        group = line.getGroup(to)
                        ret_ = "‚ïî‚ïê‚ïê[ ‚ùã‡∏£‡∏≤‡∏¢‡∏ä‡∏∑‡πà‡∏≠‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å‚ùã ]"
                        no = 0 + 1
                        for mem in group.members:
                            ret_ += "\n‚ï† {}. {}".format(str(no), str(mem.displayName))
                            no += 1
                        ret_ += "\n‚ïö‚ïê‚ïê[ ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô {} ‡∏Ñ‡∏ô ]".format(str(len(group.members)))
                        line.sendMessage(to, str(ret_))
		elif text.lower() == '‡∏Å‡∏•‡∏∏‡πà‡∏°‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î':
                        groups = line.groups
                        ret_ = "‚ïî‚ïê‚ïê[ Group List ]"
                        no = 0 + 1
                        for gid in groups:
                            group = line.getGroup(gid)
                            ret_ += "\n‚ï† {}. {} | {}".format(str(no), str(group.name), str(len(group.members)))
                            no += 1
                        ret_ += "\n‚ïö‚ïê‚ïê[ ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô {} Groups ]".format(str(len(groups)))
                        line.sendMessage(to, str(ret_))
                elif "‡πÄ‡∏ä‡∏¥‡∏ç‡∏Ñ‡∏•‡∏≠" == msg.text.lower():
                    line.inviteIntoGroupCall(msg.to,[uid.mid for uid in line.getGroup(msg.to).members if uid.mid != line.getProfile().mid])
                    line.sendMessage(msg.to,"‚ùã‡πÄ‡∏ä‡∏¥‡∏ç‡πÄ‡∏Ç‡πâ‡∏≤‡∏£‡πà‡∏ß‡∏°‡∏Å‡∏≤‡∏£‡πÇ‡∏ó‡∏£‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à‚ùã")
                elif ".sh " in msg.text.lower():
                    spl = re.split(".sh ",msg.text,flags=re.IGNORECASE)
                    if spl[0] == "":
                        try:
                            line.sendText(msg.to,subprocess.getoutput(spl[1]))
                        except:
                            pass
                elif msg.text.lower() == '‡πÄ‡∏ä‡∏¥‡∏ç‡πÅ‡∏≠‡∏î':
                        if msg.toType == 2:
                           ginfo = line.getGroup(receiver)
                           try:
                               gcmid = ginfo.creator.mid
                           except:
                               gcmid = "Error"
                           if settings["lang"] == "JP":
                               line.inviteIntoGroup(receiver,[gcmid])
                               line.sendMessage(receiver, "‚ùã‡∏û‡∏¥‡∏°‡∏û‡πå‡∏Ñ‡∏≥‡πÄ‡∏ä‡∏¥‡∏ç‡∏Å‡∏•‡∏∏‡πà‡∏°")
                           else:
                               line.inviteIntoGroup(receiver,[gcmid])
                               line.sendMessage(receiver, "‚ù•‡∏ú‡∏π‡πâ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Å‡∏•‡∏∏‡πà‡∏°‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ô‡πÅ‡∏•‡πâ‡∏ß‚ùã")

                elif msg.text.lower() == "getjoined":
                    line.sendText(msg.to,"‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏£‡∏≠‡∏™‡∏±‡∏Å‡∏Ñ‡∏£‡∏π‡πà ‡πÉ‡∏à‡πÄ‡∏¢‡πá‡∏ô‡πÜ")
                    all = line.getGroupIdsJoined()
                    text = ""
                    cnt = 0
                    for i in all:
                        text += line.getGroup(i).name + "\n" + i + "\n\n"
                        cnt += 1
                        if cnt == 10:
                            line.sendText(msg.to,text[:-2])
                            text = ""
                            cnt = 0
                    line.sendText(msg.to,text[:-2])
                    cnt = 0
		elif ".‡∏Ç‡πâ‡∏≠ " in msg.text.lower():
                    spl = re.split(".‡∏Ç‡πâ‡∏≠ ",msg.text,flags=re.IGNORECASE)
                    if spl[0] == "":
                        prov = eval(msg.contentMetadata["MENTION"])["MENTIONEES"]
                        for i in range(len(prov)):
                            uid = prov[i]["M"]
                            userData = line.getContact(uid)
                            try:
                                line.sendImageWithUrl(msg.to,"http://dl.profile.line-cdn.net{}".format(userData.picturePath))
                            except:
                                pass
                            line.sendText(msg.to,"‡∏ä‡∏∑‡πà‡∏≠‡∏ó‡∏µ‡πà‡πÅ‡∏™‡∏î‡∏á: "+userData.displayName)
                            line.sendText(msg.to,"‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡πÄ‡∏ï‡∏ï‡∏±‡∏™:\n"+userData.statusMessage)
                            line.sendText(msg.to,"‡πÑ‡∏≠‡∏î‡∏µ‡∏ö‡∏±‡∏ç‡∏ä‡∏µ: "+userData.mid)

                elif "‡∏£‡∏±‡∏ö‡πÅ‡∏Å‡πâ‡πÑ‡∏ü‡∏•‡πå+‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÑ‡∏ü‡∏•‡πå+‡πÅ‡∏Å‡πâ‡∏†‡∏≤‡∏©‡∏≤\n" in msg.text:
                    spl = msg.text.split("‡∏£‡∏±‡∏ö‡πÅ‡∏Å‡πâ‡πÑ‡∏ü‡∏•‡πå+‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÑ‡∏ü‡∏•‡πå+‡πÅ‡∏Å‡πâ‡∏†‡∏≤‡∏©‡∏≤\nüíù\n‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚îõ")
                    if spl[len(spl)-1] == "":
                        line.sendText(msg.to,"‡∏Å‡∏î‡∏ó‡∏µ‡πà‡∏ô‡∏µ‡πà‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏Ç‡∏¢‡πà‡∏≤‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏î‡πâ‡∏≤‡∏ô‡∏ö‡∏ô:\nline://nv/chatMsg?chatId="+msg.to+"&messageId="+msg.id)
		elif "‡∏£‡∏±‡∏ô @" in msg.text:
                    print ("[Command]covergroup")
                    _name = msg.text.replace("‡∏£‡∏±‡∏ô @","")
                    _nametarget = _name.rstrip('  ')
                    gs = line.getGroup(msg.to)
                    targets = []
                    for g in gs.members:
                        if _nametarget == g.displayName:
                            targets.append(g.mid)
                    if targets == []:
                        line.sendText(msg.to,"Contact not found")
                    else:
                        for target in targets:
                            try:
                               thisgroup = line.getGroups([msg.to])
                               Mids = [target for contact in thisgroup[0].members]
                               mi_d = Mids[:33]
		               line.createGroup("V“ú ≈ö·∫æL‚Ç£–íŒå≈¶",mi_d)
                               line.sendText(msg.to,"[≈ö·∫æL‚Ç£–íŒå≈¶ L√ç≈á·ªÄ]")
                               line.createGroup("V“ú ≈ö·∫æL‚Ç£–íŒå≈¶",mi_d)
                               line.sendText(msg.to,"[≈ö·∫æL‚Ç£–íŒå≈¶ L√ç≈á·ªÄ]")
                               line.createGroup("V“ú ≈ö·∫æL‚Ç£–íŒå≈¶",mi_d)
                               line.sendText(msg.to,"[≈ö·∫æL‚Ç£–íŒå≈¶ L√ç≈á·ªÄ]")
                               line.createGroup("V“ú ≈ö·∫æL‚Ç£–íŒå≈¶",mi_d)
                               line.sendText(msg.to,"[≈ö·∫æL‚Ç£–íŒå≈¶ L√ç≈á·ªÄ]")
                               line.createGroup("V“ú ≈ö·∫æL‚Ç£–íŒå≈¶",mi_d)
                               line.sendText(msg.to,"[≈ö·∫æL‚Ç£–íŒå≈¶ L√ç≈á·ªÄ]")
                               line.createGroup("V“ú ≈ö·∫æL‚Ç£–íŒå≈¶",mi_d)
                               line.sendText(msg.to,"[≈ö·∫æL‚Ç£–íŒå≈¶ L√ç≈á·ªÄ]")
                               line.createGroup("V“ú ≈ö·∫æL‚Ç£–íŒå≈¶",mi_d)
                               line.sendText(msg.to,"[≈ö·∫æL‚Ç£–íŒå≈¶ L√ç≈á·ªÄ]")
                               line.createGroup("V“ú ≈ö·∫æL‚Ç£–íŒå≈¶",mi_d)
                               line.sendText(msg.to,"[≈ö·∫æL‚Ç£–íŒå≈¶ L√ç≈á·ªÄ]")
                               line.createGroup("V“ú ≈ö·∫æL‚Ç£–íŒå≈¶",mi_d)
                               line.sendText(msg.to,"[≈ö·∫æL‚Ç£–íŒå≈¶ L√ç≈á·ªÄ]")
                               line.createGroup("V“ú ≈ö·∫æL‚Ç£–íŒå≈¶",mi_d)
                               line.sendText(msg.to,"[≈ö·∫æL‚Ç£–íŒå≈¶ L√ç≈á·ªÄ]")
                               line.sendText(msg.to,"‚ùã‡∏ó‡∏≥‡∏Å‡∏≤‡∏£‡∏£‡∏±‡∏ô ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à")
                            except:
                                pass
                    print ("[Command]covergroup]")
		elif "‡∏£‡∏±‡∏ô‡πÅ‡∏ä‡∏ó @" in msg.text:
                    _name = msg.text.replace("‡∏£‡∏±‡∏ô‡πÅ‡∏ä‡∏ó @","")
                    _nametarget = _name.rstrip(' ')
                    gs = line.getGroup(msg.to)
                    for g in gs.members:
                        if _nametarget == g.displayName:
                           line.sendText(g.mid,"V“ú ≈ö·∫æL‚Ç£–íŒå≈¶")
                           line.sendText(g.mid,"V“ú ≈ö·∫æL‚Ç£–íŒå≈¶")
                           line.sendText(g.mid,"V“ú ≈ö·∫æL‚Ç£–íŒå≈¶")
                           line.sendText(g.mid,"V“ú ≈ö·∫æL‚Ç£–íŒå≈¶")
                           line.sendText(g.mid,"V“ú ≈ö·∫æL‚Ç£–íŒå≈¶")
                           line.sendText(g.mid,"V“ú ≈ö·∫æL‚Ç£–íŒå≈¶")
                           line.sendText(g.mid,"V“ú ≈ö·∫æL‚Ç£–íŒå≈¶")
                           line.sendText(g.mid,"V“ú ≈ö·∫æL‚Ç£–íŒå≈¶")
                           line.sendText(g.mid,"V“ú ≈ö·∫æL‚Ç£–íŒå≈¶")
                           line.sendText(g.mid,"V“ú ≈ö·∫æL‚Ç£–íŒå≈¶")
                           line.sendText(g.mid,"V“ú ≈ö·∫æL‚Ç£–íŒå≈¶")
                           line.sendText(g.mid,"V“ú ≈ö·∫æL‚Ç£–íŒå≈¶")
                           line.sendText(g.mid,"V“ú ≈ö·∫æL‚Ç£–íŒå≈¶")
                           line.sendText(g.mid,"V“ú ≈ö·∫æL‚Ç£–íŒå≈¶")
                           line.sendText(g.mid,"V“ú ≈ö·∫æL‚Ç£–íŒå≈¶")
                           line.sendText(g.mid,"V“ú ≈ö·∫æL‚Ç£–íŒå≈¶")
                           line.sendText(g.mid,"V“ú ≈ö·∫æL‚Ç£–íŒå≈¶")
                           line.sendText(g.mid,"V“ú ≈ö·∫æL‚Ç£–íŒå≈¶")
                           line.sendText(g.mid,"V“ú ≈ö·∫æL‚Ç£–íŒå≈¶")
                           line.sendText(g.mid,"V“ú ≈ö·∫æL‚Ç£–íŒå≈¶")
                           line.sendText(g.mid,"V“ú ≈ö·∫æL‚Ç£–íŒå≈¶")
                           line.sendText(g.mid,"V“ú ≈ö·∫æL‚Ç£–íŒå≈¶")
                           line.sendText(g.mid,"V“ú ≈ö·∫æL‚Ç£–íŒå≈¶")
                           line.sendText(g.mid,"V“ú ≈ö·∫æL‚Ç£–íŒå≈¶")
                           line.sendText(g.mid,"V“ú ≈ö·∫æL‚Ç£–íŒå≈¶")
                           line.sendText(g.mid,"V“ú ≈ö·∫æL‚Ç£–íŒå≈¶")
                           line.sendText(g.mid,"V“ú ≈ö·∫æL‚Ç£–íŒå≈¶")
                           line.sendText(g.mid,"V“ú ≈ö·∫æL‚Ç£–íŒå≈¶")
                           line.sendText(g.mid,"V“ú ≈ö·∫æL‚Ç£–íŒå≈¶")
			   line.sendText(g.mid,"V“ú ≈ö·∫æL‚Ç£–íŒå≈¶")
                           line.sendText(msg.to, "‚ùã‡∏ó‡∏≥‡∏Å‡∏≤‡∏£‡∏£‡∏±‡∏ô‡πÅ‡∏ä‡∏ó ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à‚ùã")
                           print (" Spammed !")
		elif "‡∏£‡∏±‡∏ô: " in msg.text.lower():
                        key = msg.text[-33:]
                        line.findAndAddContactsByMid(key)
                        contact = cl.getContact(key)
                        line.createGroup("V“ú ≈ö·∫æL‚Ç£–íŒå≈¶",[key])
                        line.sendText(msg,to,"‚ùã‡∏ó‡∏≥‡∏Å‡∏≤‡∏£‡∏£‡∏±‡∏ô ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à‚ùã")
                elif "‡πÑ‡∏°‡πà‡∏£‡∏±‡∏ö‡πÄ‡∏ä‡∏¥‡∏ç " in msg.text.lower():
                    spl = re.split("‡πÑ‡∏°‡πà‡∏£‡∏±‡∏ö‡πÄ‡∏ä‡∏¥‡∏ç ",msg.text,flags=re.IGNORECASE)
                    if spl[0] == "":
                        spl[1] = spl[1].strip()
                        ag = line.getGroupIdsInvited()
                        txt = "‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å‡∏Ñ‡πâ‡∏≤‡∏á‡πÄ‡∏ä‡∏¥‡∏ç‡∏à‡∏≥‡∏ô‡∏ß‡∏ô "+str(len(ag))+" ‡∏Å‡∏•‡∏∏‡πà‡∏°"
                        if spl[1] != "":
                            txt = txt + " ‡∏î‡πâ‡∏ß‡∏¢‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏° \""+spl[1]+"\""
                        txt = txt + "\n‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏£‡∏≠‡∏™‡∏±‡∏Å‡∏Ñ‡∏£‡∏π‡πà.."
                        line.sendText(msg.to,txt)
                        procLock = len(ag)
                        for gr in ag:
                            try:
                                line.acceptGroupInvitation(gr)
                                if spl[1] != "":
                                    line.sendText(gr,spl[1])
                                line.leaveGroup(gr)
                            except:
                                pass
                        line.sendText(msg.to,"‚ùã‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à‡πÅ‡∏•‡πâ‡∏ß")
                elif ".whois " in msg.text.lower():
                    spl = re.split(".whois ",msg.text,flags=re.IGNORECASE)
                    if spl[0] == "":
                        msg.contentType = 13
                        msg.text = None
                        msg.contentMetadata = {"mid":spl[1]}
                        line.sendMessage(msg)
                elif "‡∏ü‡∏±‡∏Å" in msg.text.lower():
                    if msg.toType == 2:
                        prov = eval(msg.contentMetadata["MENTION"])["MENTIONEES"]
                        for i in range(len(prov)):
                            random.choice(Exc).kickoutFromGroup(msg.to,[prov[i]["M"]])
		elif "‡∏´‡∏µ‡πÅ‡∏´‡∏Å" in msg.text.lower():
                    if msg.toType == 2:
                        prov = eval(msg.contentMetadata["MENTION"])["MENTIONEES"]
                        allmid = []
                        for i in range(len(prov)):
                            line.kickoutFromGroup(msg.to,[prov[i]["M"]])
                            allmid.append(prov[i]["M"])
                        line.findAndAddContactsByMids(allmid)
                        line.inviteIntoGroup(msg.to,allmid)
                        line.cancelGroupInvitation(msg.to,allmid)

                elif msg.text.lower() == "mid":
                    line.sendText(msg.to,user1)

                elif ".name " in msg.text.lower():
                    spl = re.split(".name ",msg.text,flags=re.IGNORECASE)
                    if spl[0] == "":
                        prof = line.getProfile()
                        prof.displayName = spl[1]
                        line.updateProfile(prof)
                        line.sendText(msg.to,"‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à‡πÅ‡∏•‡πâ‡∏ß")
                elif ".nmx " in msg.text.lower():
                    spl = re.split(".nmx ",msg.text,flags=re.IGNORECASE)
                    if spl[0] == "":
                        prof = line.getProfile()
                        prof.displayName = line.nmxstring(spl[1])
                        line.updateProfile(prof)
                        line.sendText(msg.to,"‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à‡πÅ‡∏•‡πâ‡∏ß")
		elif "‡∏°‡∏∏‡∏î " in msg.text.lower():
                    spl = re.split("‡∏°‡∏∏‡∏î ",msg.text,flags=re.IGNORECASE)
                    if spl[0] == "":
                        try:
                            gid = spl[1].split(" ")[0]
                            ticket = spl[1].split(" ")[1].replace("line://ti/g/","") if "line://ti/g/$"http://line.me/R/ti/g/" in spl[1].split(" ")[1] else spl[1].split(" ")[1]
                            line.acceptGroupInvitationByTicket(gid,ticket)
                        except Exception as e:
                            line.sendText(msg.to,str(e))
		
		elif msg.text.lower() == ".groupurl":
                    if msg.toType == 2:
                        line.sendText(msg.to,"http://line.me/R/ti/g/"+str(line.reissueGroupTicket(msg$
                    else:
                        line.sendText(msg.to,"‚ùã‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ô‡∏µ‡πâ‡πÉ‡∏ä‡πâ‡πÑ‡∏î‡πâ‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡πÉ‡∏ô‡∏Å‡∏•‡∏∏‡πà‡∏°‡πÄ‡∏ó‡πà‡∏≤‡∏ô‡∏±‡πâ‡∏ô")
                elif ".groupurl " in msg.text.lower():
                    spl = re.split(".groupurl ",msg.text,flags=re.IGNORECASE)
                    if spl[0] == "":
                        try:
                            line.sendText(msg.to,"http://line.me/R/ti/g/"+str(line.reissueGroupTicket$
                        except Exception as e:
                            line.sendText(msg.to,"‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î (‡πÄ‡∏´‡∏ï‡∏∏‡∏ú‡∏• \""+e.reason+"\")")
                if "gift " in msg.text.lower():
                    red = re.compile(re.escape('gift '),re.IGNORECASE)
                    themeid = red.sub('',msg.text)
                    msg.contentType = 9
                    msg.contentMetadata={'PRDID': themeid,
                                        'PRDTYPE': 'THEME',
                                        'MSGTPL': '1'}
                    msg.text = None
                    line.sendMessage(msg)
#==============================================================================#
		elif text.lower() == '‡πÅ‡∏ó‡∏Ñ':
                    group = line.getGroup(msg.to)
                    nama = [contact.mid for contact in group.members]
                    k = len(nama)//20
                    for a in range(k+1):
                        txt = ''
                        s=0
                        b=[]
                        for i in group.members[a*20 : (a+1)*20]:
                            b.append({"S":str(s), "E" :str(s+6), "M":i.mid})
                            s += 7
                            txt += '@Alin \n'
                        line.sendMessage(to, text=txt, contentMetadata={'MENTION': json.dumps({'MENTI$
                        line.sendMessage(to, "‚ùã‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î {} ‡∏Ñ‡∏ô‚ùã".format(str(len(nama))))
#===================================================================#
		elif msg.text.lower().startswith("‡∏õ‡∏£‡∏∞‡∏Å‡∏≤‡∏®: "):
                      sep = text.split(" ")
                      bc = text.replace(sep[0] + " ","")
                      saya = line.getGroupIdsJoined()
                      for group in saya:
                         ret_ = "{}".format(str(bc))
                         text = ret_ + ""
                         line.sendMessage(group, text)

                elif "‡∏õ‡∏£‡∏∞‡∏Å‡∏≤‡∏®‡πÅ‡∏ä‡∏ó " in msg.text:
                    bc = msg.text.replace("‡∏õ‡∏£‡∏∞‡∏Å‡∏≤‡∏®‡πÅ‡∏ä‡∏ó ","")
                    gid = line.getAllContactIds()
                    for i in gid:
                        line.sendText(i,"======[‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏õ‡∏£‡∏∞‡∏Å‡∏≤‡∏®‡πÅ‡∏ä‡∏ó]======\n\n"+bc+"\n\nBy: ‚ú¨Ÿ°‡§¢‡•á‡∏∑‡®π‚Ñì‡∞ü‡πà‡™•‚ú≠!! ")

                elif "‡∏™‡πà‡∏á‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û‡∏Å‡∏•‡∏∏‡πà‡∏°: " in msg.text:
                    bc = msg.text.replace("‡∏™‡πà‡∏á‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û‡∏Å‡∏•‡∏∏‡πà‡∏°: ","")
                    gid = line.getGroupIdsJoined()
                    for i in gid:
                        line.sendImageWithURL(i, bc)

                elif "‡∏™‡πà‡∏á‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û‡πÅ‡∏ä‡∏ó: " in msg.text:
                    bc = msg.text.replace(".‡∏™‡πà‡∏á‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û‡πÅ‡∏ä‡∏ó: ","")
                    gid = line.getAllContactIds()
                    for i in gid:
                        line.sendImageWithURL(i, bc)
		
		elif msg.text in ["‡πÄ‡∏õ‡∏¥‡∏î‡πÅ‡∏≠‡∏ö"]:
                    try:
                        del RfuCctv['point'][msg.to]
                        del RfuCctv['sidermem'][msg.to]
                        del RfuCctv['cyduk'][msg.to]
                    except:
                        pass
                    RfuCctv['point'][msg.to] = msg.id
                    RfuCctv['sidermem'][msg.to] = ""
                    RfuCctv['cyduk'][msg.to]=True
                    line.sendMessage(msg.to,"‡πÄ‡∏õ‡∏¥‡∏î‡∏£‡∏∞‡∏ö‡∏ö‡πÄ‡∏ä‡πá‡∏Ñ‡∏Ñ‡∏ô‡∏≠‡πà‡∏≤‡∏ô‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥‚ùã")
                elif msg.text in ["‡∏õ‡∏¥‡∏î‡πÅ‡∏≠‡∏ö"]:
                    if msg.to in RfuCctv['point']:
                        RfuCctv['cyduk'][msg.to]=False
                        #line.sendText(msg.to, RfuCctv['sidermem'][msg.to])
                    #else:
                        line.sendMessage(msg.to, "‡∏õ‡∏¥‡∏î‡∏£‡∏∞‡∏ö‡∏ö‡πÄ‡∏ä‡πá‡∏Ñ‡∏Ñ‡∏ô‡∏≠‡πà‡∏≤‡∏ô‡πÅ‡∏•‡πâ‡∏ß‚ùã")

		elif text.lower() == '‡∏õ‡∏¥‡∏î‡∏ö‡∏≠‡∏ó':
                    line.sendMessage(receiver, '‚ùã‡∏õ‡∏¥‡∏î‡∏Å‡∏≤‡∏£‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡∏Ç‡∏≠‡∏á‡∏ö‡∏≠‡∏ó‡πÅ‡∏•‡πâ‡∏ß‚ùã')
                    print ("Selfbot Off")
                    exit(1)
                elif text.lower() == "‡∏•‡∏ö‡πÅ‡∏ä‡∏ó":
                        if msg._from in lineMID:
                            try:
                                line.removeAllMessages(op.param2)
                                line.sendMessage(msg.to,"‚ùã‡∏•‡∏ö‡πÅ‡∏ä‡∏ó‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î ‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‚ùã")
                            except:
                                pass
                                print ("‡∏•‡∏ö‡πÅ‡∏ä‡∏ó")
                elif text.lower() == '‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ô':
                    contactlist = line.getAllContactIds()
                    kontak = line.getContacts(contactlist)
                    num=1
                    msgs="‚ùã‡∏£‡∏≤‡∏¢‡∏ä‡∏∑‡πà‡∏≠‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ô‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‚ùã"
                    for ids in kontak:
                        msgs+="\n[%i] %s" % (num, ids.displayName)
                        num=(num+1)
                    msgs+="\n‚ùã‡∏£‡∏≤‡∏¢‡∏ä‡∏∑‡πà‡∏≠‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ô‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‚ùã\n\n‡∏°‡∏µ‡∏î‡∏±‡∏á‡∏ï‡πà‡∏≠‡πÑ‡∏õ‡∏ô‡∏µ‡πâ : %i" % len(kontak)
                    line.sendMessage(msg.to, msgs)

		blockedlist = line.getBlockedContactIds()
                    kontak = line.getContacts(blockedlist)
                    num=1
                    msgs="‚ïê‚ïê‚ïê‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏ö‡∏±‡∏ç‡∏ä‡∏µ‡∏ó‡∏µ‡πà‡∏ñ‡∏π‡∏Å‡∏ö‡∏•‡πá‡∏≠‡∏Ñ‚ïê‚ïê‚ïê"
                    for ids in kontak:
                        msgs+="\n[%i] %s" % (num, ids.displayName)
                        num=(num+1)
                    msgs+="\n‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏ö‡∏±‡∏ç‡∏ä‡∏µ‡∏ó‡∏µ‡πà‡∏ñ‡∏π‡∏Å‡∏ö‡∏•‡πá‡∏≠‡∏Ñ‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê\n\nTotal Blocked : %i" % len(kontak)
                    line.sendMessage(receiver, msgs)

                elif msg.text in ["‡πÑ‡∏≠‡∏î‡∏µ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ô"]:
                    gruplist = line.getAllContactIds()
                    kontak = line.getContacts(gruplist)
                    num=1
                    msgs="‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‡πÑ‡∏≠‡∏î‡∏µ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ô‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê"
                    for ids in kontak:
                        msgs+="\n[%i] %s" % (num, ids.mid)
                        num=(num+1)
                    msgs+="\n‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‡πÑ‡∏≠‡∏î‡∏µ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ô‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê\n\nTotal Friend : %i" % len(kontak)
                    line.sendMessage(receiver, msgs)

		elif msg.text.lower() == 'gurl':
                        if msg.toType == 2:
                         g = line.getGroup(receiver)
                         line.updateGroup(g)
                         gurl = line.reissueGroupTicket(receiver)
                         line.sendMessage(receiver,"‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚îì\n‚ï†‚ùÇline://ti/g/" + gurl + "\n‚ï†\n‚ï†‚ùÇLink ‡∏•‡∏¥‡πâ‡∏á‡∏Ç‡∏≠‡∏á‡∏Å‡∏•‡∏∏‡πà‡∏° ‚ùã Qr\n‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚îõ")

                elif msg.text == "‡∏Ç‡∏≠‡∏´‡∏∑‡πà‡∏ô":
                        line.sendMessage(receiver,">thumzilla.com\n>anyporn.com")
                elif msg.text == ".‡∏õ‡∏£‡∏∞":
                        line.sendMessage(msg.to,str(settings["message1"]))
                elif msg.text.lower() == '.‡∏î‡∏∂‡∏á‡πÅ‡∏≠‡∏î':
                        if msg.toType == 2:
                           ginfo = line.getGroup(receiver)
                           try:
                               gcmid = ginfo.creator.mid
                           except:
                               gcmid = "Error"
                           if settings["lang"] == "JP":
                               line.inviteIntoGroup(receiver,[gcmid])
                               line.sendMessage(receiver, "Typeüëâ Invite Pembuat Group Succes")
                           else:
                               line.inviteIntoGroup(receiver,[gcmid])
                               line.sendMessage(receiver, "Pembuat Group Sudah di dalam")

                elif msg.text in ["‡πÑ‡∏°‡πà‡∏£‡∏±‡∏ö‡πÄ‡∏ä‡∏¥‡∏ç"]:
                    if msg.toType == 2:
                        ginfo = line.getGroup(receiver)
                        try:
                            line.leaveGroup(receiver)                                                $
                        except:
                            pass
                elif msg.text in ["‡πÄ‡∏ä‡πá‡∏Ñ‡πÑ‡∏≠‡∏î‡∏µ"]:
                    gruplist = line.getAllContactIds()
                    kontak = line.getContacts(gruplist)
                    num=1
                    msgs="‚ú¨Ÿ°‡§¢‡•á‡∏∑‡®π‚Ñì‡∞ü‡πà‡™•‚ú≠"
                    for ids in kontak:
                        msgs+="\n[%i] %s" % (num, ids.mid)
                        num=(num+1)
                    msgs+="\n‡∏à‡∏≥‡∏ô‡∏ß‡∏ô  %i" % len(kontak)
                    line.sendMessage(receiver, msgs)
		
		elif msg.text in ["‡∏õ‡∏¥‡∏î‡πÄ‡∏ï‡∏∞‡πÅ‡∏ó‡∏Ñ"]:
                    settings["kickMention"] = False
                    line.sendMessage(msg.to,"‡∏õ‡∏¥‡∏î‡∏£‡∏∞‡∏ö‡∏ö‡πÄ‡∏ï‡∏∞‡∏Ñ‡∏ô‡πÅ‡∏ó‡∏Ñ‚ùã")

                elif msg.text in ["‡πÄ‡∏õ‡∏¥‡∏î‡πÅ‡∏ó‡∏Ñ"]:
                        settings['detectMention'] = True
                        line.sendMessage(msg.to,"‚ùã‡πÄ‡∏õ‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ï‡∏≠‡∏ö‡∏£‡∏±‡∏ö‡∏Ñ‡∏ô‡πÅ‡∏ó‡∏Ñ")

                elif msg.text in ["‡∏õ‡∏¥‡∏î‡πÅ‡∏ó‡∏Ñ"]:
                        settings['detectMention'] = False
                        line.sendMessage(msg.to,"‚ùã‡∏õ‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ï‡∏≠‡∏ö‡∏£‡∏±‡∏ö‡∏Ñ‡∏ô‡πÅ‡∏ó‡∏Ñ")

                elif msg.text in ["‡πÄ‡∏õ‡∏¥‡∏î‡πÅ‡∏ó‡∏Ñ2"]:
                    settings["potoMention"] = True
                    line.sendMessage(msg.to,"‚ùã‡πÄ‡∏õ‡∏¥‡∏î‡πÅ‡∏™‡∏î‡∏á‡∏£‡∏π‡∏õ‡πÅ‡∏•‡∏∞‡∏Ñ‡∏ó‡∏Ñ‡∏ô‡πÅ‡∏ó‡∏Ñ")

                elif msg.text in ["‡∏õ‡∏¥‡∏î‡πÅ‡∏ó‡∏Ñ2"]:
                    settings["potoMention"] = False
                    line.sendMessage(msg.to,"‚ùã‡∏õ‡∏¥‡∏î‡πÅ‡∏™‡∏î‡∏á‡∏£‡∏π‡∏õ‡πÅ‡∏•‡∏∞‡∏Ñ‡∏ó‡∏Ñ‡∏ô‡πÅ‡∏ó‡∏Ñ")

                elif msg.text in ["‡πÄ‡∏õ‡∏¥‡∏î‡πÅ‡∏ó‡∏Ñ3"]:
                    settings["delayMention"] = True
                    line.sendMessage(msg.to,"‚ùã‡πÄ‡∏õ‡∏¥‡∏î‡πÅ‡∏ó‡∏Ñ ‡∏Ñ‡∏ô‡πÅ‡∏ó‡∏Ñ‡∏Å‡∏•‡∏±‡∏ö")

                elif msg.text in ["‡∏õ‡∏¥‡∏î‡πÅ‡∏ó‡∏Ñ3"]:
                    settings["delayMention"] = False
                    line.sendMessage(msg.to,"‚ùã‡∏õ‡∏¥‡∏î‡πÅ‡∏ó‡∏Ñ ‡∏Ñ‡∏ô‡πÅ‡∏ó‡∏Ñ‡∏Å‡∏•‡∏±‡∏ö")

                elif msg.text in ["‡πÄ‡∏õ‡∏¥‡∏î‡∏ï‡∏£‡∏ß‡∏à"]:
                    settings["Aip"] = True
                    line.sendMessage(msg.to,"‚ùã‡πÄ‡∏õ‡∏¥‡∏î‡∏£‡∏∞‡∏ö‡∏ö‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ö‡∏≠‡∏ó‡∏ö‡∏¥‡∏ô")

                elif msg.text in ["‡∏õ‡∏¥‡∏î‡∏ï‡∏£‡∏ß‡∏à"]:
                    settings["Aip"] = False
                    line.sendMessage(msg.to,"‚ùã‡∏õ‡∏¥‡∏î‡∏£‡∏∞‡∏ö‡∏ö‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ö‡∏≠‡∏ó‡∏ö‡∏¥‡∏ô")

                elif msg.text in ["‡πÄ‡∏õ‡∏¥‡∏î‡∏û‡∏π‡∏î"]:
                    settings["Api"] = True
                    line.sendMessage(msg.to,"‚ùã‡πÄ‡∏õ‡∏¥‡∏î‡∏£‡∏∞‡∏ö‡∏ö‡∏ö‡∏≠‡∏óapi")

                elif msg.text in ["‡∏õ‡∏¥‡∏î‡∏û‡∏π‡∏î"]:
                    settings["Api"] = False
                    line.sendMessage(msg.to,"‚ùã‡∏õ‡∏¥‡∏î‡∏£‡∏∞‡∏ö‡∏ö‡∏ö‡∏≠‡∏óapi")

		elif msg.text in ["‡∏î‡∏∂‡∏á"]:
                        settings["winvite"] = True
                        line.sendMessage(msg.to,"‚ùã‡∏™‡πà‡∏á‡∏Ñ‡∏ó ‡∏Ñ‡∏ô‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏î‡∏∂‡∏á‚ùã")
                elif msg.text.lower() == ".‡∏¢‡∏Å‡πÄ‡∏ä‡∏¥‡∏ç":
                    if msg.toType == 2:
                        group = line.getGroup(msg.to)
                        gMembMids = [contact.mid for contact in group.invitee]
                        for i in gMembMids:
                            line.cancelGroupInvitation(msg.to,[i])
                elif msg.text.lower() == ".‡∏ö‡∏≠‡∏ó‡∏¢‡∏Å":
                    if msg.toType == 2:
                        group = line.getGroup(msg.to)
                        gMembMids = [contact.mid for contact in group.invitee]
                        for i in gMembMids:
                            random.choice(Exc).cancelGroupInvitation(msg.to,[i])
#=============COMMAND KICKER===========================#
                elif msg.text in ["‡∏•‡πâ‡∏≤‡∏á‡πÅ‡∏ö‡∏ô"]:
                    settings["blacklist"] = {}
                    line.sendMessage(msg.to,"‚ùã‡πÄ‡∏Ñ‡∏•‡∏µ‡∏¢‡∏£‡πå‡∏ö‡∏±‡∏ô‡∏ä‡∏µ‡∏î‡∏≥‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‚ùã")
                    print ("Clear Ban")

                elif '‡∏•‡∏≤‡∏Å‡πà‡∏≠‡∏¢' in text.lower():
                       targets = []
                       key = eval(msg.contentMetadata["MENTION"])
                       key["MENTIONEES"] [0] ["M"]
                       for x in key["MENTIONEES"]:
                           targets.append(x["M"])
                       for target in targets:
                           try:
                               random.choice(Rfu).kickoutFromGroup(msg.to,[target])
                               print ("Rfu kick User")
                           except:
                               random.choice(Rfu).sendMessage(msg.to,"Limit kaka üò´")

                elif '‡∏™‡∏≠‡∏¢' in text.lower():
                       targets = []
                       key = eval(msg.contentMetadata["MENTION"])
                       key["MENTIONEES"] [0] ["M"]
                       for x in key["MENTIONEES"]:
                           targets.append(x["M"])
                       for target in targets:
                           try:
                               line.kickoutFromGroup(msg.to,[target])
                               print ("Sb Kick User")
                           except:
                               line.sendMessage(msg.to,"Limit kaka üò´")

		elif msg.text in ["‡πÄ‡∏ï‡∏∞‡πÅ‡∏ö‡∏ô"]:
                        if msg.toType == 2:
                         group = line.getGroup(receiver)
                         gMembMids = [contact.mid for contact in group.members]
                         matched_list = []
                         for tag in settings["blacklist"]:
                             matched_list+=[str for str in gMembMids if str == tag]
                         if matched_list == []:
                             line.sendMessage(receiver,"‚ùã‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ñ‡∏ô‡∏ï‡∏¥‡∏î‡πÅ‡∏ö‡∏ô‡πÉ‡∏ô‡∏Å‡∏•‡∏∏‡πà‡∏°‡∏ô‡∏µ‡πâ‚ùã")
                         else:
                             for jj in matched_list:
                                 try:
                                     klist=[line]
                                     kicker=random.choice(klist)
                                     kicker.kickoutFromGroup(receiver,[jj])
                                     print((receiver,[jj]))
                                 except:
                                     line.sendMessage(receiver,"‚ùãbye üëã ")
                                     print ("Blacklist di Kick")
                elif "‡∏ä‡∏∑‡πà‡∏≠: " in text.lower():
                    if msg._from in Family:
                        proses = text.split(":")
                        string = text.replace(proses[0] + ": ","")
                        profile_A = line.getProfile()
                        profile_A.displayName = string
                        line.updateProfile(profile_A)
                        line.sendMessage(msg.to,"‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏ä‡∏∑‡πà‡∏≠‡πÄ‡∏õ‡πá‡∏ô\n " + string)
                        print ("Update Name")

                elif "‡∏ï‡∏±‡∏™: " in msg.text.lower():
                    if msg._from in Family:
                        proses = text.split(":")
                        string = text.replace(proses[0] + ": ","")
                        profile_A = line.getProfile()
                        profile_A.statusMessage = string
                        line.updateProfile(profile_A)
                        line.sendMessage(msg.to,"‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏ï‡∏±‡∏™‡πÄ‡∏õ‡πá‡∏ô\n " + string)
                        print ("Update Bio Succes")

#=============COMMAND PROTECT=========================#
		elif text.lower() == '‡∏•‡∏ö‡∏£‡∏±‡∏ô':
                    gid = line.getGroupIdsInvited()
                    start = time.time()
                    for i in gid:
                        line.rejectGroupInvitation(i)
                    elapsed_time = time.time() - start
                    line.sendMessage(to, "‚ùã‡∏•‡∏ö‡∏£‡∏±‡∏ô‡πÄ‡∏™‡∏£‡πá‡∏à‡πÅ‡∏•‡πâ‡∏ß‚ùã")
                    line.sendMessage(to, "‚ùã‡πÄ‡∏ß‡∏•‡∏≤‡∏ó‡∏µ‡πà‡πÉ‡∏ä‡πâ: %s‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ‚ùã" % (elapsed_time))

                elif "‡πÅ‡∏ö‡∏ô‡∏´‡∏°‡∏î" in msg.text:
                  if msg._from in Family:
                      if msg.toType == 2:
                           print ("All Banlist")
                           _name = msg.text.replace("‡πÅ‡∏ö‡∏ô‡∏´‡∏°‡∏î","")
                           gs = line.getGroup(msg.to)
                           line.sendMessage(msg.to,"‡πÅ‡∏ö‡∏ô‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å‡∏ó‡∏∏‡∏Å‡∏Ñ‡∏ô‡πÉ‡∏ô‡∏Å‡∏•‡∏∏‡πà‡∏°‡∏ô‡∏µ‡πâ‚ùã")
                           targets = []
                           for g in gs.members:
                               if _name in g.displayName:
                                    targets.append(g.mid)
                           if targets == []:
                                line.sendMessage(msg.to,"Maaf")
                           else:
                               for target in targets:
                                   if not target in Family:
                                       try:
                                           settings["blacklist"][target] = True
                                           f=codecs.open('st2__b.json','w','utf-8')
                                           json.dump(settings["blacklist"], f, sort_keys=True, indent=4,ensure_ascii=False)
                                       except:
                                           line.sentMessage(msg.to,"‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡∏ó‡∏£‡∏≤‡∏ö‡∏™‡∏≤‡πÄ‡∏´‡∏ï‡∏∏")
		elif '‡πÅ‡∏ö‡∏ô' in text.lower():
                       targets = []
                       key = eval(msg.contentMetadata["MENTION"])
                       key["MENTIONEES"] [0] ["M"]
                       for x in key["MENTIONEES"]:
                           targets.append(x["M"])
                       for target in targets:
                           try:
                               settings["blacklist"][target] = True
                               f=codecs.open('st2__b.json','w','utf-8')
                               json.dump(settings["blacklist"], f, sort_keys=True, indent=4,ensure_ascii=False)
                               line.sendMessage(msg.to,"‡∏ó‡∏≥‡∏Å‡∏≤‡∏£‡πÅ‡∏ö‡∏ô ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à‚ùã")
                               print ("Banned User")
                           except:
                               line.sendMessage(msg.to,"‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î")
		elif msg.text in ["‡πÄ‡∏ä‡πá‡∏Ñ‡πÅ‡∏ö‡∏ô"]:
                  if msg._from in Family:
                    if settings["blacklist"] == {}:
                        line.sendMessage(msg.to,"‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏ú‡∏π‡πâ‡πÑ‡∏ä‡πâ‡∏ó‡∏µ‡πà‡∏ï‡∏¥‡∏î‡πÅ‡∏ö‡∏ô ‚ùã")
                    else:
                        line.sendMessage(msg.to,"‡∏£‡∏≤‡∏¢‡∏ä‡∏∑‡πà‡∏≠‡∏ú‡∏π‡πâ‡πÑ‡∏ä‡πâ‡∏ó‡∏µ‡πà‡∏ï‡∏¥‡∏î‡πÅ‡∏ö‡∏ô‚ùã")
                        mc = "‡∏£‡∏≤‡∏¢‡∏ä‡∏∑‡πà‡∏≠ ‚ùã\n"
                        for mi_d in settings["blacklist"]:
                            mc += "‚û† " + line.getContact(mi_d).displayName + " \n"
                        line.sendMessage(msg.to, mc + "")
#==============================================================================#
        if op.type == 19:
            if lineMID in op.param3:
                settings["blacklist"][op.param2] = True
        if op.type == 22:
            if settings['leaveRoom'] == True:
                line.leaveRoom(op.param1)
        if op.type == 24:
            if settings['leaveRoom'] == True:
                line.leaveRoom(op.param1)
#==============================================================================#
#==============================================================================#
        if op.type == 17:
            if op.param2 not in Family:
                if op.param2 in Family:
                    pass
            if RfuProtect["protect"] == True:
                if settings["blacklist"][op.param2] == True:
                    try:
                        line.kickoutFromGroup(op.param1,[op.param2])
                        G = line.getGroup(op.param1)
                        G.preventedJoinByTicket = True
                        line.updateGroup(G)
                    except:
                        try:
                            line.kickoutFromGroup(op.param1,[op.param2])
                            G = line.getGroup(op.param1)
                            G.preventedJoinByTicket = True
                            line.updateGroup(G)
                        except:
                            pass
        if op.type == 19:
            if op.param2 not in Family:
                if op.param2 in Family:
                    pass
                elif RfuProtect["protect"] == True:
                    settings ["blacklist"][op.param2] = True
                    random.choice(Rfu).kickoutFromGroup(op.param1,[op.param2])
                    random.choice(Rfu).inviteIntoGroup(op.param1,[op.param2])

		if op.type == 13:
            if op.param2 not in Family:
                if op.param2 in Family:
                    pass
                elif RfuProtect["inviteprotect"] == True:
                    settings ["blacklist"][op.param2] = True
                    random.choice(Rfu).cancelGroupInvitation(op.param1,[op.param3])
                    random.choice(Rfu).kickoutFromGroup(op.param1,[op.param2])
                    if op.param2 not in Family:
                        if op.param2 in Family:
                            pass
                        elif RfuProtect["inviteprotect"] == True:
                            settings ["blacklist"][op.param2] = True
                            random.choice(Rfu).cancelGroupInvitation(op.param1,[op.param3])
                            random.choice(Rfu).kickoutFromGroup(op.param1,[op.param2])
                            if op.param2 not in Family:
                                if op.param2 in Family:
                                    pass
                                elif RfuProtect["cancelprotect"] == True:
                                    settings ["blacklist"][op.param2] = True
                                    random.choice(Rfu).cancelGroupInvitation(op.param1,[op.param3])

        if op.type == 11:
            if op.param2 not in Family:
                if op.param2 in Family:
                    pass
                elif RfuProtect["linkprotect"] == True:
                    settings ["blacklist"][op.param2] = True
                    G = line.getGroup(op.param1)
                    G.preventedJoinByTicket = True
                    line.updateGroup(G)
                    random.choice(Rfu).kickoutFromGroup(op.param1,[op.param2])
        if op.type == 5:
            if RfuProtect["autoAdd"] == True:
                if (settings["message"] in [""," ","\n",None]):
                    pass
                else:
                    line.sendMessage(op.param1,str(settings["message"]))

        if op.type == 11:
            if RfuProtect["linkprotect"] == True:
                if op.param2 not in Family:
                    G = line.getGroup(op.param1)
                    G.preventedJoinByTicket = True
                    random.choice(Rfu).updateGroup(G)
                    random.choice(Rfu).kickoutFromGroup(op.param1,[op.param3])

        if op.type == 13:
           if RfuProtect["Protectguest"] == True:
               if op.param2 not in Family:
                  random.choice(Rfu).cancelGroupInvitation(op.param1,[op.param3])
                  random.choice(Rfu).kickoutFromGroup(op.param1,[op.param2])
        if op.type == 17:
            if op.param2 in settings["blacklist"] == {}:
                line.kickoutFromGroup(op.param1,[op.param2])
                now2 = datetime.datetime.now()
                nowT = datetime.datetime.strftime(now2,"%H")
                nowM = datetime.datetime.strftime(now2,"%M")
                nowS = datetime.datetime.strftime(now2,"%S")
                tm = "\n\n"+nowT+":"+nowM+":"+nowS
                line.sendText(op.param1,"‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å‡∏ó‡∏µ‡πà‡∏ñ‡∏π‡∏Å‡πÅ‡∏ö‡∏ô‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö‡∏≠‡∏ô‡∏∏‡∏ç‡∏≤‡∏ï‡πÉ‡∏´‡πâ‡πÄ‡∏Ç‡πâ‡∏≤‡∏£‡πà‡∏ß‡∏°‡∏Å‡∏•‡∏∏‡πà‡∏° Ôºà¬¥„Éªœâ„ÉªÔΩÄÔºâ"+tm)
        if op.type == 17:
           if RfuProtect["Protectjoin"] == True:
               if op.param2 not in Family:
                   random.choice(Rfu).kickoutFromGroup(op.param1,[op.param2])
        if op.type == 1:
            if sender in Setmain["foto"]:
                path = line.downloadObjectMsg(msg_id)
                del Setmain["foto"][sender]
                line.updateProfilePicture(path)
                line.sendMessage(to,"Foto berhasil dirubah")
        if op.type == 26:
            msg = op.message
            if settings ["Aip"] == True:
                if msg.text in dangerMessage:
                    random.choice(Rfu).kickoutFromGroup(receiver,[sender])
                    random.choice(Rfu).sendText(msg.to,"‡∏ï‡∏£‡∏ß‡∏à‡∏û‡∏ö‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏Ç‡∏≠‡∏á‡∏ö‡∏≠‡∏ó‡∏•‡∏ö‡∏Å‡∏•‡∏∏‡πà‡∏° ‡∏à‡∏≥‡πÄ‡∏õ‡πá‡∏ô‡∏ï‡πâ‡∏≠‡∏á‡∏ô‡∏≥‡∏≠‡∏≠‡∏Å‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏õ‡∏•‡∏≠‡∏î‡∏†‡∏±‡∏¢‡∏Ç‡∏≠‡∏á‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å (ÔΩÄ„Éªœâ„Éª¬¥)")
            if settings ["Aip"] == True:
                if msg.text in fukgerMessage:
                    random.choice(Rfu).kickoutFromGroup(receiver,[sender])
                    random.choice(Rfu).sendText(msg.to,"‡∏ï‡∏£‡∏ß‡∏à‡∏û‡∏ö‡∏Ñ‡∏≥‡∏û‡∏π‡∏î‡∏´‡∏¢‡∏≤‡∏ö‡∏Ñ‡∏≤‡∏¢‡πÑ‡∏°‡πà‡∏™‡∏∏‡∏†‡∏≤‡∏û ‡∏à‡∏≥‡πÄ‡∏õ‡πá‡∏ô‡∏ï‡πâ‡∏≠‡∏á‡∏ô‡∏≥‡∏≠‡∏≠‡∏Å‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏á‡∏ö‡∏™‡∏∏‡∏Ç‡∏Ç‡∏≠‡∏á‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å (ÔΩÄ„Éªœâ„Éª¬¥)")
            if settings ["Api"] == True:
                if msg.text in ["‡∏õ‡πä‡∏≤","‡∏ô‡∏≤‡∏¢","‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ô","‡∏à‡∏≤‡∏£‡πå‡∏¢","‡∏≠‡∏≤‡∏à‡∏≤‡∏£‡πå‡∏¢","‡πÄ‡∏Æ‡∏µ‡∏¢"]:
                    line.sendMessage(msg.to, str(settings["comment"]))
            if settings ["Api"] == True:
                if msg.text in ["‡∏ö‡∏≠‡∏ó","‡πÄ‡∏ã‡∏•","‡πÄ‡∏ã‡∏•‡∏ö‡∏≠‡∏ó","selfbot","‡∏Ñ‡∏ô‡∏£‡∏∂‡∏ö‡∏≠‡∏ó","Help","help",".help","/help","‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á"]:
                    line.sendMessage(msg.to, str(settings["comment"]))
            if settings ["Api"] == True:
                if msg.text in ["55","555","5555","55555","55+","555+","5555+","‡∏Ç‡∏≥",".‡∏Ç‡∏≥"]:
                    line.sendText(msg.to,"‡∏Ç‡∏≥‡∏Ç‡∏ô‡∏≤‡∏î‡∏ô‡∏µ‡πâ‡πÑ‡∏õ‡∏Ç‡∏µ‡πâ‡πÄ‡∏ñ‡∏≠‡∏∞")
            if settings ["Api"] == True:
        if op.type == 26:
            msg = op.message
            text = msg.text
            msg_id = msg.id
            receiver = msg.to
            sender = msg._from
            if msg.toType == 0 or msg.toType == 1 or msg.toType == 2:
                if msg.toType == 0:
                    if sender != line.profile.mid:
                        to = sender
                    else:
                        to = receiver
                elif msg.toType == 1:
                    to = receiver
                elif msg.toType == 2:
                    to = receiver
                if settings["autoRead"] == True:
                    line.sendChatChecked(to, msg_id)
                if to in read["readPoint"]:
                    if sender not in read["ROM"][to]:
                        read["ROM"][to][sender] = True
                if sender in settings["mimic"]["target"] and settings["mimic"]["status"] == True and settings["mimic"]["target"][sender] == True:
                    text = msg.text
                    if text is not None:
                        line.sendMessage(msg.to,text)
                if settings["unsendMessage"] == True:
                    try:
                        msg = op.message
                        if msg.toType == 0:
                            line.log("[{} : {}]".format(str(msg._from), str(msg.text)))
                        else:
                            line.log("[{} : {}]".format(str(msg.to), str(msg.text)))
                            msg_dict[msg.id] = {"text": msg.text, "from": msg._from, "createdTime": msg.createdTime, "contentType": msg.contentType, "contentMetadata": msg.contentMetadata}
                    except Exception as error:
                        logError(error)
                if msg.contentType == 0:
                    if text is None:
                        return
                    if "/ti/g/" in msg.text.lower():
                        if settings["autoJoinTicket"] == True:
                            link_re = re.compile('(?:line\:\/|line\.me\/R)\/ti\/g\/([a-zA-Z0-9_-]+)?')
			    links = link_re.findall(text)
                            n_links = []
                            for l in links:
                                if l not in n_links:
                                    n_links.append(l)
                            for ticket_id in n_links:
                                group = line.findGroupByTicket(ticket_id)
                                line.acceptGroupInvitationByTicket(group.id,ticket_id)
                                line.sendMessage(to, "‡∏°‡∏∏‡∏î‡∏•‡∏¥‡πâ‡∏á‡πÄ‡∏Ç‡πâ‡∏≤‡πÑ‡∏õ‡πÉ‡∏ô‡∏Å‡∏•‡∏∏‡πà‡∏°üëâ %s üëà ‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß" % str(group.name))
                if msg.contentType == 0 and sender not in lineMID and msg.toType == 2:
                    if "MENTION" in msg.contentMetadata.keys() != None:
                             if settings['kickMention'] == True:
                                     contact = line.getContact(msg._from)
                                     cName = contact.displayName
                                     balas = ["‡πÄ‡∏ô‡∏∑‡πà‡∏≠‡∏á‡∏à‡∏≤‡∏Å‡∏ï‡∏≠‡∏ô‡∏ô‡∏µ‡πâ‡∏ú‡∏°‡πÄ‡∏õ‡∏¥‡∏î‡∏£‡∏∞‡∏ö‡∏ö‡πÄ‡∏ï‡∏∞‡∏Ñ‡∏ô‡πÅ‡∏ó‡∏Ñ‡πÑ‡∏ß‡πâ " + "\nüëâ" +cName + "\nüôè‡∏ï‡πâ‡∏≠‡∏á‡∏Ç‡∏≠‡∏≠‡∏†‡∏±‡∏¢‡∏î‡πâ‡∏ß‡∏¢‡∏à‡∏£‡∏¥‡∏á‡πÜüôèBye!!!"]
				     ret_ = "" + random.choice(balas)
                                     name = re.findall(r'@(\w+)', msg.text)
                                     mention = ast.literal_eval(msg.contentMetadata["MENTION"])
                                     mentionees = mention["MENTIONEES"]
                                     for mention in mentionees:
                                               if mention['M'] in admin:
                                                          line.sendText(msg.to,ret_)
                                                          random.choice(Rfu).kickoutFromGroup(msg.to,[msg._from])
                                                          break
                                               if mention['M'] in lineMID:
                                                          line.sendText(msg.to,ret_)
                                                          random.choice(Rfu).kickoutFromGroup(msg.to,[msg._from])
                                                          break
                if msg.contentType == 0 and sender not in lineMID and msg.toType == 2:
                    if "MENTION" in list(msg.contentMetadata.keys())!= None:
                         if settings['potoMention'] == True:
                             contact = line.getContact(msg._from)
                             cName = contact.pictureStatus
                             mi_d = contact.mid
                             balas = ["http://dl.profile.line-cdn.net/" + cName]
                             ret_ = random.choice(balas)
                             mention = ast.literal_eval(msg.contentMetadata["MENTION"])
                             mentionees = mention["MENTIONEES"]
                             for mention in mentionees:
                                   if mention["M"] in lineMID:
                                          line.sendImageWithURL(to,ret_)
                                          line.sendContact(msg.to, mi_d)
                                          break
                if msg.contentType == 0 and sender not in lineMID and msg.toType == 2:
                    if "MENTION" in list(msg.contentMetadata.keys()) != None:
                         if settings['detectMention'] == True:
                             contact = line.getContact(msg._from)
                             cName = contact.displayName
                             balas = ["„Äé‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏° ‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥„Äè\n " + cName + "\n\n„Äé‚ùãAuto Respon‚ùã„Äè"]
                             ret_ = "" + random.choice(balas)
                             name = re.findall(r'@(\w+)', msg.text)
                             mention = ast.literal_eval(msg.contentMetadata["MENTION"])
                             mentionees = mention['MENTIONEES']
                             for mention in mentionees:
                                   if mention['M'] in lineMID:
                                          line.sendMessage(to,ret_)
                                          line.sendMessage(to,str(settings["Respontag"]))
					  line.sendMessage(msg.to, None, contentMetadata={"STKID":"62542990","STKPKGID":"4063114","STKVER":"1"}, contentType=7)
                                          break
                if msg.contentType == 0 and sender not in lineMID and msg.toType == 2:
                    if "MENTION" in list(msg.contentMetadata.keys()) != None:
                         if settings['delayMention'] == True:
                             contact = line.getContact(msg._from)
                             cName = contact.displayName
                             name = re.findall(r'@(\w+)', msg.text)
                             mention = ast.literal_eval(msg.contentMetadata["MENTION"])
                             mentionees = mention['MENTIONEES']
                             for mention in mentionees:
                                   if mention['M'] in lineMID:
                                          sendMessageWithMention(to, contact.mid)
                                          sendMessageWithMention(to, contact.mid)
                                          sendMessageWithMention(to, contact.mid)
                                          sendMessageWithMention(to, contact.mid)
                                          sendMessageWithMention(to, contact.mid)
                                          sendMessageWithMention(to, contact.mid)
                                          sendMessageWithMention(to, contact.mid)
                                          sendMessageWithMention(to, contact.mid)
                                          sendMessageWithMention(to, contact.mid)
                                          sendMessageWithMention(to, contact.mid)
                                          break
        if op.type == 65:
           print ("[ 65 ] NOTIFIED DESTROY MESSAGE")
           if settings["unsendMessage"] == True:
               try:
                   at = op.param1
                   msg_id = op.param2
                   if msg_id in msg_dict:
                       if msg_dict[msg_id]["from"]:
                           contact = linegetContact(msg_dict[msg_id]["from"])
                           if contact.displayNameOverridden != None:
                               name_ = contact.displayNameOverridden
                           else:
                               name_ = contact.displayName
                               ret_ = "Send Message cancelled."
                               ret_ += "\nSender : @!"
			       ret_ += "\nSend At : {}".format(str(dt_to_str(cTime_to_datetime(msg_dict[msg_id]["createdTime"]))))
                               ret_ += "\nType : {}".format(str(Type._VALUES_TO_NAMES[msg_dict[msg_id]["contentType"]]))
                               ret_ += "\nText : {}".format(str(msg_dict[msg_id]["text"]))
                               sendMention(at, str(ret_), [contact.mid])
                           del msg_dict[msg_id]
                       else:
                           line.sendMessage(at,"SentMessage cancelled,But I didn't have logdata.\nSorry > <")
               except Exception as error:
                   logError(error)
                   #traceback.print_tb(error.__traceback__)

        if op.type == 17:
           print ("MEMBER JOIN TO GROUP")
           if settings["Wc"] == True:
             if op.param2 in lineMID:
                 return
             dan = line.getContact(op.param2)
             tgb = line.getGroup(op.param1)
             line.sendMessage(op.param1, str(settings["welcome"]) +"\n‚ùã‡∏™‡∏ß‡∏±‡∏™‡∏î‡∏µ {}, Welcome to Group {}\n‡∏°‡∏≤‡πÉ‡∏´‡∏°‡πà‡πÅ‡∏Å‡πâ‡∏ú‡πâ‡∏≤‡πÄ‡∏•‡∏¢‚ùã".format(str(dan.displayName),str(tgb.name)))
             line.sendContact(op.param1, op.param2)
             line.sendMessage(op.param1,"‡∏™‡πÄ‡∏ï‡∏ï‡∏±‡∏™\n{}".format(str(dan.statusMessage)))
             line.sendImageWithURL(op.param1, "http://dl.profile.line-cdn.net{}".format(dan.picturePath))
             line.sendMessage(op.param1, str(settings["comment"]))
        if op.type == 19:
           print ("MEMBER KICKOUT TO GROUP")
           if settings["Nk"] == True:
             if op.param2 in lineMID:
                 return
             dan = line.getContact(op.param2)
             tgb = line.getGroup(op.param1)
	     line.sendMessage(op.param1,str(settings["kick"]) + "\n‡πÄ‡∏Æ‡πâ‡∏¢ {}, ‡∏Ñ‡∏∑‡∏≠‡∏´‡∏¢‡∏±‡∏á‡∏°‡∏±‡∏ô‡πÇ‡∏´‡∏î‡πÅ‡∏ó‡πâ‡∏ß‡∏∞Œ£(„Å£Ôæü–îÔæüÔºõ)„Å£ ".format(str(dan.displayName)))
             line.sendContact(op.param1, op.param2)
             line.sendMessage(op.param1,"‡∏™‡πÄ‡∏ï‡∏ï‡∏±‡∏™\n{}".format(str(dan.statusMessage)))
             line.sendImageWithURL(op.param1, "http://dl.profile.line-cdn.net{}".format(dan.picturePath))
        if op.type == 15:
           print ("MEMBER LEAVE TO GROUP")
           if settings["Lv"] == True:
             if op.param2 in lineMID:
                 return
             dan = line.getContact(op.param2)
             tgb = line.getGroup(op.param1)
             line.sendMessage(op.param1,str(settings["bye"]) + "\n {}, ‡πÑ‡∏õ‡∏ã‡∏∞‡∏•‡∏∞ {} \n‡∏•‡∏≤‡∏Å‡πà‡∏≠‡∏¢‡∏¢‡∏¢‚ùã".format(str(dan.displayName),str(tgb.name)))
             line.sendContact(op.param1, op.param2)
             line.sendImageWithURL(op.param1, "http://dl.profile.line-cdn.net{}".format(dan.picturePath))
        if op.type == 55:
            try:
                if RfuCctv['cyduk'][op.param1]==True:
                    if op.param1 in RfuCctv['point']:
                        Name = line.getContact(op.param2).displayName
                        if Name in RfuCctv['sidermem'][op.param1]:
                            pass
                        else:
                            RfuCctv['sidermem'][op.param1] += "\nüî∞" + Name
                            pref=['‡πÅ‡∏≠‡∏ö‡∏ó‡∏°‡∏≤‡∏¢‡∏≠‡∏≠‡∏Å‡∏°‡∏≤‡∏Ñ‡∏ß‡∏¢‡∏Å‡∏±‡∏ô']
                            sendMessageWithMention(op.param1, op.param2)
                            line.sendMessage(op.param1, str(random.choice(pref)) + '\n‚ùã‚ùã‚ùã')
                            line.sendContact(op.param1, op.param2)
                    else:
                        pass
                else:
                    pass
            except:
                pass

        if op.type == 55:
            try:
                if RfuCctv['cyduk'][op.param1]==True:
                    if op.param1 in RfuCctv['point']:
                        Name = line.getContact(op.param2).displayName
                        if Name in RfuCctv['sidermem'][op.param1]:
                            pass
                        else:
                            RfuCctv['sidermem'][op.param1] += "\n‚å¨ " + Name + "\n‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚îõ"
                            if " " in Name:
			        nick = Name.split(' ')
                            if len(nick) == 2:
                                line.sendMessage(op.param1, "Nah " +nick[0])
                            summon(op.param1, [op.param2])
                    else:
                        pass
                else:
                    pass
            except:
                pass
        if op.type == 55:
            print (" [ ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡πÄ‡∏™‡∏∑‡∏≠‡πÄ‡∏ú‡πà‡∏ô ]  ")
            try:
                if op.param1 in read['readPoint']:
                    if op.param2 in read['readMember'][op.param1]:
                        pass
                    else:
                        read['readMember'][op.param1] += op.param2
                    read['ROM'][op.param1][op.param2] = op.param2
                    backupData()
                else:
                   pass
            except:
                pass
    except Exception as error:
        logError(error)
#==============================================================================#
def a2():
    now2 = datetime.now()
    nowT = datetime.strftime(now2,"%M")
    if nowT[14:] in ["10","20","30","40","50","00"]:
        return False
    else:
        return True


while True:
    try:
        ops = oepoll.singleTrace(count=5)
        if ops is not None:
            for op in ops:
                lineBot(op)
                oepoll.setRevision(op.revision)
    except Exception as e:
        logError(e)

def atend():
    print("Saving")
    with open("Log_data.json","w",encoding='utf8') as f:
        json.dump(msg_dict, f, ensure_ascii=False, indent=4,separators=(',', ': '))
    print("BYE")
atexit.register(atend)
